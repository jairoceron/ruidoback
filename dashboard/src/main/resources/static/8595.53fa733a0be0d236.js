"use strict";var Z=Object.defineProperty,d=Object.getOwnPropertySymbols,F=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable,p=(i,_,o)=>_ in i?Z(i,_,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[_]=o,M=(i,_)=>{for(var o in _||(_={}))F.call(_,o)&&p(i,o,_[o]);if(d)for(var o of d(_))G.call(_,o)&&p(i,o,_[o]);return i};(self.webpackChunkdashboard=self.webpackChunkdashboard||[]).push([[8595],{88595:(i,_,o)=>{o.r(_),o.d(_,{default:()=>x});var O=o(61921),s=o(60046),P=o(4380),v=o(40662),C=(o(90789),o(60305)),D=o(71781),S=o(12523),m=o(89225),r=o(9077),c=(o(67474),o(57025),o(33870),o(67424)),u=o(42442),R=o(21611),h=o(64469),L=o(24065),j=o(52043),T=o(44660),f=o(55130),n=o(99737),E=o(17336),U=o(35692),I=o(71699),A=o(94334),B=o(50413);const K=["atom","xml"],W={base:E.Z,key:"type",typeMap:{"simple-line":U.Z},errorContext:"symbol"},b={base:E.Z,key:"type",typeMap:{"picture-marker":I.Z,"simple-marker":A.Z},errorContext:"symbol"},g={base:E.Z,key:"type",typeMap:{"simple-fill":B.Z},errorContext:"symbol"};let t=class extends((0,h.h)((0,T.Q)((0,L.q)((0,j.I)((0,f.M)((0,D.R)(R.Z))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,l){return"string"==typeof e?M({url:e},l):e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,m.vt)(this.url,K)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,l){return l.featureCollection.layers.forEach(y=>{const a=y.layerDefinition.drawingInfo.renderer.symbol;a&&"esriSFS"===a.type&&a.outline&&-1!==a.outline.style.indexOf("esriSFS")&&(a.outline.style="esriSLSSolid")}),l.featureCollection.layers}load(e){const l=(0,C.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(S.r9).then(()=>this._fetchService(l))),Promise.resolve(this)}_fetchService(e){var l=this;return(0,O.Z)(function*(){const{data:y}=yield(0,v.default)(P.Z.geoRSSServiceUrl,{query:{url:l.url,refresh:!!l.loaded||void 0,outSR:l.outSpatialReference?JSON.stringify(l.outSpatialReference.toJSON()):void 0},signal:e});l.read(y,{origin:"service"})})()}};(0,s._)([(0,r.Cb)()],t.prototype,"description",void 0),(0,s._)([(0,r.Cb)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],t.prototype,"title",null),(0,s._)([(0,r.Cb)()],t.prototype,"featureCollections",void 0),(0,s._)([(0,c.r)("service","featureCollections",["featureCollection.layers"])],t.prototype,"readFeatureCollections",null),(0,s._)([(0,r.Cb)(n.id)],t.prototype,"id",void 0),(0,s._)([(0,r.Cb)(n.rn)],t.prototype,"legendEnabled",void 0),(0,s._)([(0,r.Cb)({types:W,json:{write:!0}})],t.prototype,"lineSymbol",void 0),(0,s._)([(0,r.Cb)({type:["show","hide"]})],t.prototype,"listMode",void 0),(0,s._)([(0,r.Cb)({types:b,json:{write:!0}})],t.prototype,"pointSymbol",void 0),(0,s._)([(0,r.Cb)({types:g,json:{write:!0}})],t.prototype,"polygonSymbol",void 0),(0,s._)([(0,r.Cb)({type:["GeoRSS"]})],t.prototype,"operationalLayerType",void 0),(0,s._)([(0,r.Cb)()],t.prototype,"outSpatialReference",void 0),(0,s._)([(0,r.Cb)(n.HQ)],t.prototype,"url",void 0),(0,s._)([(0,r.Cb)({readOnly:!0,json:{read:!1},value:"geo-rss"})],t.prototype,"type",void 0),t=(0,s._)([(0,u.j)("esri.layers.GeoRSSLayer")],t);var x=t}}]);