"use strict";var qt=Object.defineProperty,Kt=Object.defineProperties,Qt=Object.getOwnPropertyDescriptors,lt=Object.getOwnPropertySymbols,er=Object.prototype.hasOwnProperty,tr=Object.prototype.propertyIsEnumerable,le=Math.pow,ut=(K,H,g)=>H in K?qt(K,H,{enumerable:!0,configurable:!0,writable:!0,value:g}):K[H]=g,L=(K,H)=>{for(var g in H||(H={}))er.call(H,g)&&ut(K,g,H[g]);if(lt)for(var g of lt(H))tr.call(H,g)&&ut(K,g,H[g]);return K},ie=(K,H)=>Kt(K,Qt(H));(self.webpackChunkdashboard=self.webpackChunkdashboard||[]).push([[9205],{99205:(K,H,g)=>{g.r(H),g.d(H,{default:()=>Yt});var M=g(61921),h=g(60046),ft=g(38886),Fe=g(12596),E=g(22795),Z=g(60305),dt=g(71781),ce=g(12523),I=g(9077),ct=(g(67474),g(57025)),Ge=g(33870),Me=g(13637),He=g(67424),W=g(42442),mt=g(21611),pt=g(64469),ht=g(6331),$e=(g(73513),g(40662)),Oe=g(63031),yt=g(89096),Ve=g(38192),Ne=g(99737),Ye=g(55851),gt=g(48524),me=g(31818),Xe=g(6200),xe=g(61897),xt=g(61661),_=g(82059),Q=g(56703);const qe=Ge.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),vt=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(r){this.raster&&(this._sliceId=this.raster.getSliceIndex(r)),this._set("multidimensionalDefinition",r)}set url(r){this._set("url",(0,Ve.Nm)(r,qe))}set renderer(r){this._set("renderer",r),this.updateRenderer()}convertVectorFieldData(r,n){var i=this;return(0,M.Z)(function*(){if((0,Z.Wi)(r))return null;const a=i._rasterJobHandler.instance,s=i.rasterInfo.dataType;return a?a.convertVectorFieldData({pixelBlock:r,dataType:s},n):(0,Xe.KC)(r,s)})()}updateRenderer(){var r=this;return(0,M.Z)(function*(){if(!r.loaded||JSON.stringify(r._cachedRendererJson)===JSON.stringify(r.renderer))return;const n=r._rasterJobHandler.instance;n&&(r.symbolizer.rendererJSON=(0,xe.ol)(r.renderer.toJSON()),r.symbolizer.bind(),yield n.updateSymbolizer(r.symbolizer),r._cachedRendererJson=r.renderer.toJSON())})()}applyRenderer(r,n){var i=this;return(0,M.Z)(function*(){const a=r&&r.pixelBlock;if(!((0,Z.pC)(a)&&a.pixels&&a.pixels.length>0))return null;let s;yield i.updateRenderer();const o=i._rasterJobHandler.instance,{bandIds:l}=i;return s=o?yield o.symbolize(ie(L({},r),{simpleStretchParams:n,bandIds:l})):i.symbolizer.symbolize(ie(L({},r),{simpleStretchParams:n,bandIds:l})),s})()}getTileUrl(r,n,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${r}/${n}/${i}`:""}getCompatibleTileInfo(r,n,i=!1){if(!this.loaded)return null;if(i&&r.equals(this.spatialReference))return this.tileInfo;const a=(0,yt.C5)(r);return me.Z.create({size:256,spatialReference:r,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:n.xmin,y:n.ymax}})}getCompatibleFullExtent(r){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(r)||(this._compatibleFullExtent=this.raster.computeExtent(r)),this._compatibleFullExtent):null}fetchTile(r,n,i,a={}){var s=this;return(0,M.Z)(function*(){if(a.requestAsImageElement){const l=s.getTileUrl(r,n,i);return(0,$e.default)(l,{responseType:"image",query:L(L({sliceId:s._sliceId},s.refreshParameters),s.raster.ioConfig.customFetchParameters),signal:a.signal}).then(u=>u.data)}return yield s._initJobHandler(),s.multidimensionalDefinition&&(a=L({multidimensionalDefinition:s.multidimensionalDefinition,sliceId:s._sliceId,buffer:"raster-shaded-relief"===s.renderer.type?{cols:1,rows:1}:null},a)),s.raster.fetchTile(r,n,i,a)})()}fetchPixels(r,n,i,a){var s=this;return(0,M.Z)(function*(){return yield s._initJobHandler(),s.multidimensionalDefinition&&(a=L({multidimensionalDefinition:s.multidimensionalDefinition,sliceId:s._sliceId},a)),s.raster.fetchPixels(r,n,i,a)})()}identify(r,n={}){return this.multidimensionalDefinition&&!n.multidimensionalDefinition&&(n=ie(L({},n),{multidimensionalDefinition:this.multidimensionalDefinition})),this.raster.identify(r,n)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var r;const n=this.rasterInfo.multidimensionalInfo;if(!(0,Z.pC)(n)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(r=this.multidimensionalDefinition[0])?void 0:r.variableName;return n.variables.some(a=>a.name===i&&a.dimensions.some(s=>"StdTime"===s.name))}getStandardTimeValue(r){return new Date(24*(r-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const r=new gt.Z;return this._rasterJobHandler.connectionPromise=r.initialize().then(()=>{this._rasterJobHandler.instance=r,this.raster.rasterJobHandler=r,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var r;const n=(0,xe.In)(this.rasterInfo,this.raster.tileType,null==(r=this.sourceJSON)?void 0:r.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultSlice(){const{multidimensionalInfo:r}=this.raster.rasterInfo;if((0,Z.pC)(r)){if(!this.multidimensionalDefinition){const n=r.variables[0],i=[];n.dimensions.forEach(a=>{i.push(new Ye.Z({variableName:n.name,dimensionName:a.name,values:a.hasRegularIntervals?a.extent[0]:a.values[0],isSlice:!0}))}),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const r=this.raster.rasterInfo;var n,i;this.bandIds||(this.bandIds=(0,xe.YD)(r)),this.renderer||(this.renderer=(0,xe.Ob)(r,{bandIds:this.bandIds,variableName:null==(n=this.multidimensionalDefinition)||null==(i=n[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=(0,xe.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=r):this.symbolizer=new xt.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:r}),this.symbolizer.bind()||qe.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return(0,h._)([(0,I.Cb)()],e.prototype,"_cachedRendererJson",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"_sliceId",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"_compatibleFullExtent",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"_rasterJobHandler",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"bandIds",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"copyright",void 0),(0,h._)([(0,I.Cb)({type:_.Z}),(0,Oe.B)("rasterInfo.extent")],e.prototype,"fullExtent",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"interpolation",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"ioConfig",void 0),(0,h._)([(0,I.Cb)({type:[Ye.Z]})],e.prototype,"multidimensionalDefinition",null),(0,h._)([(0,I.Cb)()],e.prototype,"raster",void 0),(0,h._)([(0,I.Cb)({readOnly:!0}),(0,Oe.B)("raster.rasterInfo")],e.prototype,"rasterInfo",void 0),(0,h._)([(0,I.Cb)()],e.prototype,"sourceJSON",void 0),(0,h._)([(0,I.Cb)({type:Q.Z}),(0,Oe.B)("rasterInfo.spatialReference")],e.prototype,"spatialReference",void 0),(0,h._)([(0,I.Cb)({type:me.Z}),(0,Oe.B)("rasterInfo.storageInfo.tileInfo")],e.prototype,"tileInfo",void 0),(0,h._)([(0,I.Cb)(Ne.HQ)],e.prototype,"url",null),(0,h._)([(0,I.Cb)({types:Fe.dr})],e.prototype,"renderer",null),(0,h._)([(0,I.Cb)()],e.prototype,"symbolizer",void 0),e=(0,h._)([(0,W.j)("esri.layers.ImageryTileMixin")],e),e};var It=g(24065),bt=g(52043),Ct=g(44660),wt=g(55130),ve=g(12656),Tt=g(47377),pe=g(38973),Ie=g(55874),Ke=g(54792),St=g(73763),se=g(52791),Qe=g(25465),ae=g(21092),G=g(95848),N=g(27640);let ee=class extends((0,St.v)(Ke.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var t=this;return(0,M.Z)(function*(){const e=(0,G.zD)();t.addResolvingPromise(e),yield t.when()})()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t=ie(L({},t),{ioConfig:L({resolution:null,bandIds:null,sampling:"closest",tileInfo:me.Z.create()},t.ioConfig)})),t}set url(t){this._set("url",(0,Ve.Nm)(t,Ge.Z.getLogger(this.declaredClass)))}open(t){return(0,M.Z)(function*(){throw new E.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(t,e,r,n={}){var i=this;return(0,M.Z)(function*(){const{tileInfo:a}=n,s=a.lodAt(t),o=i.getTileExtent({x:s.resolution,y:s.resolution},e,r,a.origin,a.spatialReference,a.size);return n=i._getRequestOptionsWithSliceId(n),i.fetchPixels(o,a.size[0],a.size[1],n)})()}identify(t,e={}){var r=this;return(0,M.Z)(function*(){e=r._getRequestOptionsWithSliceId(e);const{spatialReference:n,extent:i}=r.rasterInfo,{datumTransformation:a}=e;let s=(0,G.nF)(t,n,a);if(!i.intersects(s))return{location:s,value:null};if((0,Z.pC)(r.rasterInfo.transform)){const S=r.rasterInfo.transform.inverseTransform(s);if(!r.rasterInfo.nativeExtent.intersects(S))return{location:S,value:null};s=S}let o=0;if(e.srcResolution)o=(0,G.kr)(e.srcResolution,r.rasterInfo,r.ioConfig.sampling).pyramidLevel;else if(o=yield r.computeBestPyramidLevelForLocation(t,e),null==o)return{location:s,value:null};const l=r.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:u,col:c,rowOffset:d,colOffset:f}=l,m=(0,se.Rq)(r.url,e.sliceId),p=`${o}/${u}/${c}`;let y=(0,se.Qg)(m,null,p);(0,Z.Wi)(y)&&(y=r.fetchRawTile(o,u,c,e),(0,se.gX)(m,null,p,y));const v=yield y;if((0,Z.Wi)(v)||!v.pixels||0===v.pixels.length)return{location:s,value:null};const R=d*r.rasterInfo.storageInfo.blockHeight+f,x=!v.mask||v.mask[R]?v.pixels.map(S=>S[R]):null,w=r.rasterInfo.dataType;return("vector-magdir"===w||"vector-uv"===w)&&(null==x?void 0:x.length)>1?{location:s,value:x,magdirValue:"vector-magdir"===w?[x[0],x[1]]:(0,Xe.Tg)([x[0],x[1]]),pyramidLevel:o}:{location:s,value:x,pyramidLevel:o}})()}fetchPixels(t,e,r,n={}){var i=this;return(0,M.Z)(function*(){t=(0,G.kZ)(t);const a=(0,G.Hq)(t),s=i.rasterInfo.spatialReference,o=!t.spatialReference.equals(s),{datumTransformation:l}=n,u=new N.Z({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference}),c=n.srcResolution||(o?(0,G.VO)(u,s,t,l):u);if(!c)return null;const{pyramidLevel:d,pyramidResolution:f,excessiveReading:m}=(0,G.kr)(c,i.rasterInfo,i.ioConfig.sampling);if(m)return null;const p=i.rasterInfo.storageInfo;let y=o?(0,G.tB)(t,s,l):t;const v=(0,Z.Wg)(i.rasterInfo.transform);if(v&&(y=v.inverseTransform(y)),null==y)return null;const R={x:Math.floor((y.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-y.ymax)/f.y+.1)},x=Math.ceil((y.xmax-y.xmin)/f.x-.1),w=Math.ceil((y.ymax-y.ymin)/f.y-.1);if(x/e>8||w/r>8||a>=2)return null;const S=yield i.fetchRawPixels(d,R,{width:x,height:w,wrapCount:a},n);if(!S)return null;const P=d>0?p.pyramidBlockWidth:p.blockWidth,C=d>0?p.pyramidBlockHeight:p.blockHeight;if(!o&&P===x&&C===w&&R.x%P==0&&R.y%C==0&&1===S.pixelBlocks.length&&P===e&&C===r&&c.x===u.x&&c.y===u.y)return{extent:t,srcExtent:y,pixelBlock:S.pixelBlocks[0]};const b=(0,G.Qp)(t,S.extent,u,l,v,a>0);let T;const B=!n.requestRawData,O={rows:b.spacing[0],cols:b.spacing[1]},A=(0,Z.Wg)(i._getRasterTileAlignmentInfo(d,S.extent.xmin)),{pixelBlocks:k,mosaicSize:U,isPartiallyFilled:re}=S;if(i.rasterJobHandler)T=yield i.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:k,srcMosaicSize:U,destDimension:B?{width:e,height:r}:null,coefs:B?b.coefficients:null,sampleSpacing:B?O:null,interpolation:n.interpolation,alignmentInfo:A},n);else{const ne=(0,ae.us)(k,U,null,null,A);T=B?(0,ae.Uk)(ne,{width:e,height:r},b.coefficients,O,n.interpolation):ne}return n.requestRawData?{srcExtent:y,pixelBlock:T,transformGrid:b,extent:t,isPartiallyFilled:re}:{srcExtent:y,extent:t,pixelBlock:T}})()}fetchRawPixels(t,e,r,n){var i=this;return(0,M.Z)(function*(){const{origin:a,blockBoundary:s}=i.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=i.getBlockWidthHeight(t);let{x:u,y:c}=e,{width:d,height:f,wrapCount:m}=r;const p=(0,Z.Wg)(i._getRasterTileAlignmentInfo(t,0));n.buffer&&(u-=n.buffer.cols,c-=n.buffer.rows,d+=2*n.buffer.cols,f+=2*n.buffer.rows);const y=Math.floor(u/o),v=Math.floor(c/l),R=Math.floor((u+d-1)/o),x=Math.floor((c+f-1)/l),w=s[t];if(!w)return null;const{minRow:S,minCol:P,maxCol:C,maxRow:F}=w;if(x<S||R<P||v>F||y>C)return null;const b=new Array;let T=!1;const B=null==i.ioConfig.allowPartialFill?n.allowPartialFill:i.ioConfig.allowPartialFill;for(let X=v;X<=x;X++)for(let D=y;D<=R;D++){const j=0===m||null==p||D<p.worldColumnCountFromOrigin?D:D%p.worldColumnCountFromOrigin-p.originColumnOffset;if(X>=S&&j>=P&&F>=X&&C>=j){const q=i._fetchRawTile(t,X,j,n);b.push(B?new Promise(oe=>{q.then(Xt=>oe(Xt)).catch(()=>{T=!0,oe(null)})}):q)}else b.push(null)}if(0===b.length)return null;const O=yield Promise.all(b),A={height:(x-v+1)*l,width:(R-y+1)*o},{spatialReference:k}=i.rasterInfo,U=i.getPyramidPixelSize(t),{x:re,y:ne}=U;return{extent:new _.Z({xmin:a.x+y*o*re,xmax:a.x+(R+1)*o*re,ymin:a.y-(x+1)*l*ne,ymax:a.y-v*l*ne,spatialReference:k}),pixelBlocks:O,mosaicSize:A,isPartiallyFilled:T}})()}fetchRawTile(t,e,r,n){throw new E.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return(0,G.tB)(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?(0,Qe.Jx)(t,e):this.rasterJobHandler.decode({data:t,options:e})}request(t,e,r){var n=this;return(0,M.Z)(function*(){var i,a;const{customFetchParameters:s}=n.ioConfig,{range:o,query:l,headers:u}=e;r=null!=(i=null!=(a=r)?a:e.retryCount)?i:n.ioConfig.retryCount;const c=o?{Range:`bytes=${o.from}-${o.to}`}:null;try{return yield(0,$e.default)(t,ie(L({},e),{query:L(L({},l),s),headers:L(L({},u),c)}))}catch(d){if(r>0)return r--,n.request(t,e,r);throw d}})()}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;if(!(0,Z.pC)(e)||null==t||!t.length)return null;let r=0;const n=t[0].variableName;for(let i=0;i<e.variables.length;i++){const a=e.variables[i],s=a.dimensions;if(a.name!==n){r+=s.map(u=>this._getDimensionValuesCount(u)).reduce((u,c)=>u+c);break}const o=s.map(u=>this._getDimensionValuesCount(u)),l=s.length;for(let u=0;u<l;u++){const c=t.filter(m=>m.dimensionName===s[u].name)[0];if(null==c)return null;const d=Array.isArray(c.values[0])?c.values[0][0]:c.values[0],f=this._getIndexFromDimensions(d,s[u]);if(-1===f)return null;o.shift(),r+=u===l-1?f:f*o.reduce((m,p)=>m+p)}}return r}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:r,pixelSize:n}=this.rasterInfo;if(!t.tileInfo){const i=[],a=t.maximumPyramidLevel||0;let s=Math.max(n.x,n.y),o=1/.0254*96*s;for(let u=0;u<=a;u++)i.push({level:a-u,resolution:s,scale:o}),s*=2,o*=2;const l=new N.Z({x:r.xmin,y:r.ymax,spatialReference:e});t.tileInfo=new me.Z({origin:l,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:i}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,r=512,n){const{width:i,height:a,nativeExtent:s,pixelSize:o,spatialReference:l}=t,u=new N.Z({x:s.xmin,y:s.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(i,a))/Math.LN2-8)));const c=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[o],n);t.storageInfo=new Ie.Z({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:u,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:c})}computeBestPyramidLevelForLocation(t,e={}){return(0,M.Z)(function*(){return 0})()}computeBlockBoundary(t,e,r,n,i,a=0,s=2){if(1===i.length&&a>0){i=[...i];let{x:c,y:d}=i[0];for(let f=0;f<a;f++)c*=s,d*=s,i.push({x:c,y:d})}const o=[],{x:l,y:u}=n;for(let c=0;c<i.length;c++){const{x:d,y:f}=i[c];o.push({minCol:Math.floor((t.xmin-l+.1*d)/e/d),maxCol:Math.floor((t.xmax-l-.1*d)/e/d),minRow:Math.floor((u-t.ymax+.1*f)/r/f),maxRow:Math.floor((u-t.ymin-.1*f)/r/f)})}return o}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===t)return e;if((0,Z.pC)(r)&&r.length)return r[t-1];const i=le(n,t);return{x:e.x*i,y:e.y*i}}identifyPixelLocation(t,e,r){const{spatialReference:n,nativeExtent:i}=this.rasterInfo,{blockWidth:a,blockHeight:s,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,u=(0,G.nF)(t,n,r);if(!i.intersects(u)||e<0||e>o)return null;const c=this.getPyramidPixelSize(e),{x:d,y:f}=c,m=(l.y-u.y)/f/s,p=(u.x-l.x)/d/a,y=Math.min(s-1,Math.floor((m-Math.floor(m))*s)),v=Math.min(a-1,Math.floor((p-Math.floor(p))*a));return{pyramidLevel:e,row:Math.floor(m),col:Math.floor(p),rowOffset:y,colOffset:v,srcLocation:u}}getTileExtent(t,e,r,n,i,a){const[s,o]=a,l=n.x+r*s*t.x,c=n.y-e*o*t.y;return new _.Z({xmin:l,xmax:l+s*t.x,ymin:c-o*t.y,ymax:c,spatialReference:i})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,r){const n=this.rasterInfo.storageInfo.blockBoundary[t];return!n||n.maxRow<e||n.maxCol<r||n.minRow>e||n.minCol>r}_fetchRawTile(t,e,r,n){const i=this.rasterInfo.storageInfo.blockBoundary[t];if(!i)return Promise.resolve(null);const{minRow:a,minCol:s,maxCol:o,maxRow:l}=i;if(e<a||r<s||e>l||r>o)return Promise.resolve(null);const u=(0,se.Rq)(this.url,n.sliceId),c=`${t}/${e}/${r}`;let d=(0,se.Qg)(u,n.registryId,c);if((0,Z.Wi)(d)){const f=(0,ce.yi)();d=this.fetchRawTile(t,e,r,ie(L({},n),{signal:f.signal})),(0,se.gX)(u,n.registryId,c,d,f),d.catch(()=>(0,se.Gc)(u,n.registryId,c))}return n.signal&&(0,ce.fu)(n,()=>{(0,se.OE)(u,n.registryId,c)}),d}_getIndexFromDimensions(t,e){const{extent:r,interval:n,unit:i,values:a}=e;if(null!=a&&a.length)return Array.isArray(a[0])?a.findIndex(u=>u[0]<=t&&u[1]>=t):a.indexOf(t);if(t>r[1])return-1;const s=r[0];let o=-1;if("ISO8601"===i){var l;switch((null==(l=e.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((t-s)/1e3/n);break;case"minutes":o=Math.round((t-s)/6e4/n);break;case"hours":o=Math.round((t-s)/36e5/n);break;case"days":o=Math.round((t-s)/864e5/n);break;case"years":o=Math.round((new Date(t).getUTCFullYear()-new Date(s).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(t).getUTCFullYear()-new Date(s).getUTCFullYear())/10/n)}return o}return Math.round((t-s)/n)}_getDimensionValuesCount(t){const{extent:e,interval:r,unit:n,values:i}=t;let a=(null==i?void 0:i.length)||0;if(a)return a;const s=e[0];if(0===a&&"ISO8601"===n){var o;switch((null==(o=t.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":a=Math.round((e[1]-e[0])/1e3/r);break;case"minutes":a=Math.round((e[1]-e[0])/6e4/r);break;case"hours":a=Math.round((e[1]-e[0])/36e5/r);break;case"days":a=Math.round((e[1]-e[0])/864e5/r);break;case"years":a=Math.round((new Date(e[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case"decades":a=Math.round((new Date(e[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r)}return a}return Math.round((e[1]-e[0])/r)}_getRasterTileAlignmentInfo(t,e){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,G.P_)(this.rasterInfo)),(0,Z.pC)(this._rasterTileAlighmentInfo.pyramidsInfo)?L({startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[t]):null}_getRequestOptionsWithSliceId(t){var e;return null!=(e=t.multidimensionalDefinition)&&e.length&&(0,Z.pC)(this.rasterInfo.multidimensionalInfo)&&null==t.sliceId&&(t=ie(L({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)||0})),t}};(0,h._)([(0,I.Cb)()],ee.prototype,"_rasterTileAlighmentInfo",void 0),(0,h._)([(0,I.Cb)(Ne.HQ)],ee.prototype,"url",null),(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],ee.prototype,"datasetName",void 0),(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],ee.prototype,"datasetFormat",void 0),(0,h._)([(0,I.Cb)()],ee.prototype,"rasterInfo",void 0),(0,h._)([(0,I.Cb)()],ee.prototype,"ioConfig",void 0),(0,h._)([(0,I.Cb)()],ee.prototype,"sourceJSON",void 0),ee=(0,h._)([(0,W.j)("esri.layers.support.rasterDatasets.BaseRaster")],ee);var he=ee,et=g(44005);function Rt(t){const e=t.fields,r=t.records,n=e.some(u=>"oid"===u.name.toLowerCase())?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(u=>({name:u.name,type:"esriFieldType"+u.typeName,alias:u.name}))),a=i.map(u=>u.name),s=[];let o=0,l=0;return r.forEach(u=>{const c={};for(c[n]=o++,l=1;l<a.length;l++)c[a[l]]=u[l-1];s.push({attributes:c})}),{displayFieldName:"",fields:i,features:s}}let be=class extends Ke.wq{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(t){return t}inverseTransform(t){return t}};(0,h._)([(0,I.Cb)()],be.prototype,"affectsPixelSize",void 0),(0,h._)([(0,I.Cb)({json:{write:!0}})],be.prototype,"spatialReference",void 0),be=(0,h._)([(0,W.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],be);var Je=be;let De=class extends Je{constructor(){super(...arguments),this.type="identity"}};(0,h._)([(0,Me.J)({IdentityXform:"identity"})],De.prototype,"type",void 0),De=(0,h._)([(0,W.j)("esri.layers.support.rasterTransforms.IdentityTransform")],De);var Ft=De,tt=g(43190);function Ue(t,e,r){const{x:n,y:i}=e;if(r<2)return{x:t[0]+n*t[2]+i*t[4],y:t[1]+n*t[3]+i*t[5]};if(2===r){const f=n*n,m=i*i,p=n*i;return{x:t[0]+n*t[2]+i*t[4]+f*t[6]+p*t[8]+m*t[10],y:t[1]+n*t[3]+i*t[5]+f*t[7]+p*t[9]+m*t[11]}}const a=n*n,s=i*i,o=n*i,l=a*n,u=a*i,c=n*s,d=i*s;return{x:t[0]+n*t[2]+i*t[4]+a*t[6]+o*t[8]+s*t[10]+l*t[12]+u*t[14]+c*t[16]+d*t[18],y:t[1]+n*t[3]+i*t[5]+a*t[7]+o*t[9]+s*t[11]+l*t[13]+u*t[15]+c*t[17]+d*t[19]}}function rt(t,e,r){const{xmin:n,ymin:i,xmax:a,ymax:s,spatialReference:o}=e;let l=[];if(r<2)l.push({x:n,y:s}),l.push({x:a,y:s}),l.push({x:n,y:i}),l.push({x:a,y:i});else{let d=10;for(let f=0;f<d;f++)l.push({x:n,y:i+(s-i)*f/(d-1)}),l.push({x:a,y:i+(s-i)*f/(d-1)});d=8;for(let f=1;f<=d;f++)l.push({x:n+(a-n)*f/d,y:i}),l.push({x:n+(a-n)*f/d,y:s})}l=l.map(d=>Ue(t,d,r));const u=l.map(d=>d.x),c=l.map(d=>d.y);return new _.Z({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:o})}let $=class extends Je{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:r,coeffY:n}=e;if(null==r||!r.length||null==n||!n.length||r.length!==n.length)return null;const i=[];for(let a=0;a<r.length;a++)i.push(r[a]),i.push(n[a]);return i}writeForwardCoefficients(t,e,r){const n=[],i=[];for(let a=0;a<(null==t?void 0:t.length);a++)a%2==0?n.push(t[a]):i.push(t[a]);e.coeffX=n,e.coeffY=i}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=function(t){const[e,r,n,i,a,s]=t,o=n*s-a*i,l=a*i-n*s;return[(a*r-e*s)/o,(n*r-e*i)/l,s/o,i/l,-a/o,-n/l]}(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:r,inverseCoeffY:n}=e;if(null==r||!r.length||null==n||!n.length||r.length!==n.length)return null;const i=[];for(let a=0;a<r.length;a++)i.push(r[a]),i.push(n[a]);return i}writeInverseCoefficients(t,e,r){const n=[],i=[];for(let a=0;a<(null==t?void 0:t.length);a++)a%2==0?n.push(t[a]):i.push(t[a]);e.inverseCoeffX=n,e.inverseCoeffY=i}forwardTransform(t){if("point"===t.type){const e=Ue(this.forwardCoefficients,t,this.polynomialOrder);return new N.Z({x:e.x,y:e.y,spatialReference:t.spatialReference})}return rt(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=Ue(this.inverseCoefficients,t,this.polynomialOrder);return new N.Z({x:e.x,y:e.y,spatialReference:t.spatialReference})}return rt(this.inverseCoefficients,t,this.polynomialOrder)}};(0,h._)([(0,I.Cb)({json:{write:!0}})],$.prototype,"polynomialOrder",void 0),(0,h._)([(0,I.Cb)()],$.prototype,"forwardCoefficients",void 0),(0,h._)([(0,He.r)("forwardCoefficients",["coeffX","coeffY"])],$.prototype,"readForwardCoefficients",null),(0,h._)([(0,tt.c)("forwardCoefficients")],$.prototype,"writeForwardCoefficients",null),(0,h._)([(0,I.Cb)({json:{write:!0}})],$.prototype,"inverseCoefficients",null),(0,h._)([(0,He.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],$.prototype,"readInverseCoefficients",null),(0,h._)([(0,tt.c)("inverseCoefficients")],$.prototype,"writeInverseCoefficients",null),(0,h._)([(0,I.Cb)()],$.prototype,"affectsPixelSize",void 0),(0,h._)([(0,Me.J)({PolynomialXform:"polynomial"})],$.prototype,"type",void 0),$=(0,h._)([(0,W.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],$);var Ze=$;const nt={PolynomialXform:Ze,IdentityXform:Ft},Ot=Object.keys(nt);var it=g(51201);const ue=new Map;ue.set("int16","esriFieldTypeSmallInteger"),ue.set("int32","esriFieldTypeInteger"),ue.set("int64","esriFieldTypeInteger"),ue.set("float32","esriFieldTypeSingle"),ue.set("float64","esriFieldTypeDouble"),ue.set("text","esriFieldTypeString");let Ce=class extends he{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(t){var e=this;return(0,M.Z)(function*(){yield e.init();const{data:r}=yield e.request(e.url+"/conf.json",{signal:null==t?void 0:t.signal});if(!e._validateHeader(r))throw new E.Z("cloudraster:open","Invalid or unsupported conf.json.");e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const{storageInfo:n,rasterInfo:i}=e._parseHeader(r);if("thematic"===i.dataType){const a=yield e._fetchAuxiliaryInformation();i.attributeTable=a}e._set("storageInfo",n),e._set("rasterInfo",i),e.ioConfig.retryCount=e.ioConfig.retryCount||0})()}fetchRawTile(t,e,r,n={}){var i=this;return(0,M.Z)(function*(){const a=i.rasterInfo.storageInfo.maximumPyramidLevel-t;if(a<0)return null;const s=i._buildCacheFilePath(a,e,r,n.multidimensionalDefinition),o=i._getIndexRecordFromBundle(e,r),l=yield i.request(s,{range:{from:0,to:i.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!l)return null;const u=new Uint8Array(l.data),c=i._getTileEndAndContentType(u,o);if(0===c.recordSize)return null;const d=yield i.request(s,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return d?i.decodePixelBlock(d.data,{width:i.rasterInfo.storageInfo.tileInfo.size[0],height:i.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null})()}_validateHeader(t){return t&&"RasterInfo"===t.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(r=>!t[r])}_parseHeader(t){var e,r;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:i,histograms:a,colormap:s,blockWidth:o,blockHeight:l,firstPyramidLevel:u,maximumPyramidLevel:c}=t,d=t.statistics&&t.statistics.map(j=>({min:j.min,max:j.max,avg:j.mean,stddev:j.standardDeviation,median:j.median,mode:j.mode})),f=t.extent.spatialReference,m=null==(e=t.geodataXform)?void 0:e.spatialReference,p=new Q.Z(null!=f&&f.wkid||null!=f&&f.wkt?f:m);let y=new _.Z({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:p});const v=new N.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:p}),R=Math.round((y.xmax-y.xmin)/v.x),x=Math.round((y.ymax-y.ymin)/v.y),w=this._parseTransform(t.geodataXform),S=w?y:null;w&&(y=w.forwardTransform(y),v.x=(y.xmax-y.xmin)/R,v.y=(y.ymax-y.ymin)/x);const P=null!=(r=t.properties)?r:{},C=t.format.toLowerCase().replace("cache/",""),F=new N.Z(t.origin.x,t.origin.y,p);let b,T,B,O;if(s&&s.colors)for(b=[],T=0;T<s.colors.length;T++)B=s.colors[T],O=s.values?s.values[T]:T,b.push([O,255&B,B<<16>>>24,B<<8>>>24,B>>>24]);const A=t.LODInfos,k=[];for(T=0;T<A.levels.length;T++)k.push({level:A.levels[T],resolution:A.resolutions[T],scale:96/.0254*A.resolutions[T]});const U=new me.Z({dpi:96,lods:k,format:C,origin:F,size:[o,l],spatialReference:p}),re={recordSize:8,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*8+64},ne=[{maxCol:Math.ceil(R/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let X=2;if(c>0)for(T=0;T<c;T++)ne.push({maxCol:Math.ceil(R/X/o)-1,maxRow:Math.ceil(x/X/l)-1,minCol:0,minRow:0}),X*=2;return{storageInfo:re,rasterInfo:new pe.Z({width:R,height:x,pixelType:n,bandCount:i,extent:y,nativeExtent:S,transform:w,spatialReference:p,pixelSize:v,keyProperties:P,statistics:d,histograms:a,multidimensionalInfo:t.mdInfo,colormap:b,storageInfo:new Ie.Z({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:F,tileInfo:U,firstPyramidLevel:u,maximumPyramidLevel:c,blockBoundary:ne})})}}_parseTransform(t){var e,r;if(!function(t){return!t||Ot.includes(null==t?void 0:t.type)}(t))throw new E.Z("cloudraster:open","the data contains unsupported geodata transform types");const n=function(t){if(!(null==t?void 0:t.type))return null;const e=nt[null==t?void 0:t.type];if(e){const r=new e;return r.read(t),r}return null}(t);if("identity"===n.type)return null;if("polynomial"!==n.type||null==(e=n.forwardCoefficients)||!e.length||null==(r=n.inverseCoefficients)||!r.length)throw new E.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}_fetchAuxiliaryInformation(t){var e=this;return(0,M.Z)(function*(){const r=e.request(e.url+"/conf.vat.json",{signal:t}).then(s=>s.data).catch(()=>null),n=e.request(e.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(s=>s.data).catch(()=>null),i=yield Promise.all([r,n]);let a;if(i[0]){let s=i[0].fields;const o=i[0].values;if(s&&o){s=s.map(u=>({type:"OID"===u.name?"esriFieldTypeOID":ue.get(u.type),name:u.name,alias:u.alias||u.name}));const l=o.map(u=>({attributes:u}));s&&o&&(a={fields:s,features:l})}}return!a&&i[1]&&(a=class{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),n=3&r.getUint8(0);if(3!==n)return{header:{version:n},recordSet:null};const i=r.getUint32(4,!0),a=r.getUint16(8,!0),s=r.getUint16(10,!0),o={version:n,recordCount:i,headerByteCount:a,recordByteCount:s};let l=32;const u=[],c=[];let d;if(3===n){for(;13!==r.getUint8(l);)d=String.fromCharCode(r.getUint8(l+11)).trim(),u.push({name:(0,et.f)(new Uint8Array(e,l,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:r.getUint8(l+16)}),l+=32;if(l+=1,u.length>0)for(;c.length<i&&e.byteLength-l>s;){const f=[];32===r.getUint8(l)?(l+=1,u.forEach(m=>{if("C"===m.type)f.push((0,et.f)(new Uint8Array(e,l,m.length)).trim());else if("N"===m.type)f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if("F"===m.type)f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if("D"===m.type){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();f.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=m.length}),c.push(f)):l+=s}}return{header:o,fields:u,records:c,recordSet:Rt({fields:u,records:c})}}}.parse(i[1]).recordSet),it.default.fromJSON(a)})()}_buildCacheFilePath(t,e,r,n){const i=this.storageInfo.packetSize,a=Math.floor(e/i)*i,s=Math.floor(r/i)*i,o="R"+this._toHexString4(a)+"C"+this._toHexString4(s);let l="L";l+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:u}=this.rasterInfo,c=null==n?void 0:n[0];if(!(0,Z.pC)(u)||!c)return`${this.url}/_alllayers/${l}/${o}.bundle`;let d=u.variables.filter(m=>m.name===c.variableName)[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const f=4-d.length;for(let m=0;m<f;m++)d="0"+d;return d="S"+d,`${this.url}/_alllayers/${c.variableName}/${d}/${l}/${o}.bundle`}_getIndexRecordFromBundle(t,e){const r=this.storageInfo.packetSize,n=r*(t%r)+e%r;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const r=t.subarray(e,e+8);let n,i=0;for(n=0;n<5;n++)i|=(255&r[n])<<8*n;const a=0xffffffffff&i;for(i=0,n=5;n<8;n++)i|=(255&r[n])<<8*(n-5);return{position:a,recordSize:0xffffffffff&i}}_toHexString4(t){let e=t.toString(16);if(4!==e.length){let r=4-e.length;for(;r-- >0;)e="0"+e}return e}};(0,h._)([(0,I.Cb)({readOnly:!0})],Ce.prototype,"storageInfo",void 0),(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Ce=(0,h._)([(0,W.j)("esri.layers.support.rasterDatasets.CloudRaster")],Ce);var Bt=Ce;let we=class extends he{constructor(){super(...arguments),this.datasetFormat="MEMORY"}open(t){var e=this;return(0,M.Z)(function*(){var r;yield e.init();const{pixelBlock:n,statistics:i,histograms:a,name:s,keyProperties:o,nativeExtent:l,transform:u}=e.data,{width:c,height:d,pixelType:f}=n,m=e.data.extent||new _.Z({xmin:-.5,ymin:.5,xmax:c-.5,ymax:d-.5,spatialReference:new Q.Z({wkid:3857})}),p=null!=(r=e.data.isPseudoSpatialReference)?r:!e.data.extent,v=new pe.Z({width:c,height:d,pixelType:f,extent:m,nativeExtent:l,transform:u,pixelSize:{x:m.width/c,y:m.height/d},spatialReference:m.spatialReference,bandCount:3,keyProperties:o||{},statistics:i,isPseudoSpatialReference:p,histograms:a});e.createRemoteDatasetStorageInfo(v,512,512),e._set("rasterInfo",v),e.updateTileInfo(),yield e._buildInMemoryRaster(n,{width:512,height:512},t),e.datasetName=s,e.url="/InMemory/"+s})()}fetchRawTile(t,e,r,n={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${r}`);return Promise.resolve(i)}_buildInMemoryRaster(t,e,r){var n=this;return(0,M.Z)(function*(){const i=n.rasterInfo.storageInfo.maximumPyramidLevel,a=n.rasterJobHandler?n.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:i},r):Promise.resolve((0,ae.Vl)(t,e,i)),s=(0,Z.pC)(n.rasterInfo.statistics),o=(0,Z.pC)(n.rasterInfo.histograms),l=s&&o?Promise.resolve({statistics:null,histograms:null}):n.rasterJobHandler?n.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve((0,ae.Hv)(t)),u=yield(0,ce.as)([a,l]);if(!u[0].value&&u[1].value)throw new E.Z("inmemory-raster:open","failed to build in memory raster");var c,d;n._pixelBlockTiles=u[0].value,s||(n.rasterInfo.statistics=null==(c=u[1].value)?void 0:c.statistics),o&&(n.rasterInfo.histograms=null==(d=u[1].value)?void 0:d.histograms)})()}};(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),(0,h._)([(0,I.Cb)()],we.prototype,"data",void 0),we=(0,h._)([(0,W.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],we);var kt=we;function ye(t,e){if(!t||!e)return[];let r=e;e.indexOf("/")>-1?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const n=[];if(e){const a=ye(t,r);for(let s=0;s<a.length;s++)ye(a[s],e).forEach(o=>n.push(o));return n}const i=t.getElementsByTagNameNS("*",r);if(!i||0===i.length)return[];for(let a=0;a<i.length;a++)n.push(i[a]||i.item[a]);return n}function V(t,e){if(!t||!e)return null;let r=e;e.indexOf("/")>-1?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const n=ye(t,r);return n.length>0?e?V(n[0],e):n[0]:null}function Y(t,e=null){const r=e?V(t,e):t;let n;return r?(n=r.textContent||r.nodeValue,n?n.trim():null):null}function Be(t,e){return function(t,e){const r=ye(t,e),n=[];let i;for(let a=0;a<r.length;a++)i=r[a].textContent||r[a].nodeValue,i&&(i=i.trim(),""!==i&&n.push(i));return n}(t,e).map(r=>Number(r))}function fe(t,e){const r=Y(t,e);return Number(r)}function We(t,e){var r;const n=null==t||null==(r=t.nodeName)?void 0:r.toLowerCase(),i=e.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===i}function at(t,e){if(!t||!e)return null;const r=[];for(let n=0;n<t.length;n++)r.push(t[n]),r.push(e[n]);return r}function ke(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&0!==e)return new Q.Z({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const r=t.indexOf("VERTCS"),n=t.indexOf("PROJCS"),i=n>-1?n:t.indexOf("GEOGCS");if(-1===i)return null;const a=t.slice(i,t.lastIndexOf("]",r)+1).trim(),s=t.slice(i,t.lastIndexOf("]")).trim();e=je(a);const o=new Q.Z(e?{wkid:e}:{wkt:a}),l=je(s);return l&&(o.vcsWkid=l),o}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=je(t),new Q.Z(0!==e?{wkid:e}:{wkt:t})):null}function je(t){const e=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>""!==n),r=e[e.length-1].split(",");if("EPSG"===r[0]&&t.endsWith('"]]')){const n=Number(r[1]);if(!isNaN(n)&&0!==n)return n}return 0}function _e(t){var e;if("pamdataset"!==(null==t||null==(e=t.documentElement.tagName)?void 0:e.toLowerCase()))return{};const r={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(i=>{if(1===i.nodeType)if(We(i,"SRS")){if(!r.spatialReference){const a=Y(i);r.spatialReference=ke(a)}}else if(We(i,"Metadata"))if("xml:ESRI"===i.getAttribute("domain")){const{spatialReference:a,transform:s}=function(t){var e;const r=V(t,"GeodataXform"),n=ke(fe(r,"SpatialReference/WKID")||Y(r,"SpatialReference/WKT"));if("typens:PolynomialXform"!==r.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const i=null!=(e=fe(r,"PolynomialOrder"))?e:1,a=Be(r,"CoeffX/Double"),s=Be(r,"CoeffY/Double"),o=Be(r,"InverseCoeffX/Double"),l=Be(r,"InverseCoeffY/Double"),u=at(a,s),c=at(o,l);return{spatialReference:n,transform:new Ze({spatialReference:n,polynomialOrder:i,forwardCoefficients:u,inverseCoefficients:c})}}(i);r.transform=s,r.spatialReference||(r.spatialReference=a)}else ye(i,"MDI").forEach(a=>r.metadata[a.getAttribute("key")]=Y(a));else if(We(i,"PAMRasterBand")){const a=function(t){var e;const r=fe(t,"NoDataValue"),n=V(t,"Histograms/HistItem"),i=fe(n,"HistMin"),a=fe(n,"HistMax"),s=fe(n,"BucketCount"),o=null==(e=Y(n,"HistCounts"))?void 0:e.split("|").map(m=>Number(m));let l,u,c,d;ye(t,"Metadata/MDI").forEach(m=>{var p;const y=Number(null!=(p=m.textContent)?p:m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=y;break;case"STATISTICS_MAXIMUM":u=y;break;case"STATISTICS_MEAN":c=y;break;case"STATISTICS_STDDEV":d=y}});const f=fe(t,"Metadata/SourceBandIndex");return{noDataValue:r,histogram:null!=o&&o.length&&null!=l&&null!=u?{min:i,max:a,size:s||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:d}:null}}(i);null!=a.sourceBandIndex&&null==r.rasterBands[a.sourceBandIndex]?r.rasterBands[a.sourceBandIndex]=a:r.rasterBands.push(a)}});const n=r.rasterBands;return n&&(r.statistics=n[0].statistics?n.map(s=>s.statistics):null,r.histograms=n[0].histogram?n.map(s=>s.histogram):null),r}let Le=class extends he{open(t){var e=this;return(0,M.Z)(function*(){yield e.init();const r=yield e._fetchData(t);let{spatialReference:n,statistics:i,histograms:a,transform:s}=yield e._fetchAuxiliaryData(t);const o=!n;o&&(n=new Q.Z({wkid:3857})),null!=a&&a.length&&null==i&&(i=(0,ae.Oh)(a));const{width:l,height:u}=r;let c=new _.Z({xmin:-.5,ymin:.5-u,xmax:l-.5,ymax:.5,spatialReference:n});const d=s?s.forwardTransform(c):c;let f=!0;if(s){const p=s.forwardCoefficients;f=p&&0===p[1]&&0===p[2],f&&(s=null,c=d)}const m=new kt({data:{extent:d,nativeExtent:c,transform:s,pixelBlock:r,statistics:i,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o}});yield m.open(),e._set("rasterInfo",m.rasterInfo),e._inMemoryRaster=m})()}fetchRawTile(t,e,r,n={}){return this._inMemoryRaster.fetchRawTile(t,e,r,n)}_fetchData(t){var e=this;return(0,M.Z)(function*(){const{data:r}=yield e.request(e.url,{responseType:"array-buffer",signal:null==t?void 0:t.signal}),n=(0,Qe.y6)(r).toUpperCase();if("JPG"!==n&&"PNG"!==n&&"GIF"!==n&&"BMP"!==n)throw new E.Z("image-aux-raster:open","the data is not a supported format");return e._set("datasetFormat",n),yield e.decodePixelBlock(r,{format:"jpg",width:1,height:1,useCanvas:!0})})()}_fetchAuxiliaryData(t){var e=this;return(0,M.Z)(function*(){var r,n;const i=(0,Z.Wg)(null==t?void 0:t.signal),a=null!=(r=e.ioConfig.skipExtensions)?r:[],s=a.indexOf("aux.xml")>-1?null:e.request(e.url+".aux.xml",{responseType:"xml",signal:i}),o=e.datasetFormat,l="JPG"===o?"jgw":"PNG"===o?"pgw":"BMP"===o?"bpw":null,u=a.indexOf(l)>-1?null:e.request(e.url.slice(0,e.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:i}),c=yield(0,ce.as)([s,u]);if(null!=i&&i.aborted)throw(0,ce.zE)();const d=_e(null==(n=c[0].value)?void 0:n.data);if(!d.transform){const f=c[1].value?c[1].value.data.split("\n").slice(0,6).map(m=>Number(m)):null;d.transform=6===(null==f?void 0:f.length)?new Ze({forwardCoefficients:[f[4],f[5],f[0],-f[1],f[2],-f[3]]}):null}return d})()}};(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],Le.prototype,"datasetFormat",void 0),Le=(0,h._)([(0,W.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Le);var ze=Le,At=g(89225),Ht=g(15938),Nt=g(10256);let Te=class extends Je{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}};(0,h._)([(0,Me.J)({GCSShiftXform:"gcs-shift"})],Te.prototype,"type",void 0),(0,h._)([(0,I.Cb)()],Te.prototype,"tolerance",void 0),Te=(0,h._)([(0,W.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],Te);var Jt=Te;let Se=class extends he{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}open(t){var e=this;return(0,M.Z)(function*(){yield e.init();const r=t&&t.signal,n=e.sourceJSON?{data:e.sourceJSON}:yield e.request(e.url,{query:{f:"json"},signal:r});n.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));const i=n.data;if(e.sourceJSON=i,!i)throw new E.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new E.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");e._fixScaleInServiceInfo(),e.tileType=i.cacheType,null==e.tileType&&(e.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(i.tileInfo.format.toLowerCase())>-1?"Map":"lerc"===i.tileInfo.format.toLowerCase()?"Elevation":"Raster"),e.datasetName=i.name.slice(i.name.indexOf("/")+1);const s=yield e._fetchRasterInfo({signal:r});if(!(0,Z.pC)(s))throw new E.Z("image-server-raster:open","cannot initialize image service");{const o="Map"===e.tileType?(0,Ht.d)(i.tileInfo,i):me.Z.fromJSON(i.tileInfo),{extent:l,pixelSize:u}=s,c=.5/s.width*u.x;let d,f;const m=o.lodAt(Math.max.apply(null,o.lods.map(C=>C.level)));"Map"!==e.tileType&&0!==i.maxScale&&("Raster"===e.tileType?(d=o.lods.filter(C=>C.resolution===u.x)[0],d||(d=o.lods[o.lods.length-1])):(d=o.lods.filter(C=>Math.abs(C.scale-i.maxScale)<c)[0],d||(d=o.lods.filter(C=>C.scale>i.maxScale).sort((C,F)=>C.scale>F.scale?1:-1)[0])),u.x=u.y=d.resolution,s.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),s.height=Math.ceil((l.ymax-l.ymin)/u.y-.1)),d||(d=m);const p=o.lodAt(Math.min.apply(null,o.lods.map(C=>C.level)));"Map"===e.tileType?e._levelOffset=o.lods[0].level:0!==i.minScale&&"Elevation"===e.tileType&&(f=o.lods.filter(C=>Math.abs(C.scale-i.minScale)<c)[0],e._levelOffset=f.level-p.level),f||(f=p);const y=Math.max(u.x,u.y);(Math.abs(u.x-u.y)>c||!o.lods.some(C=>Math.abs(C.resolution-y)<c))&&(u.x=u.y=d.resolution,s.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),s.height=Math.ceil((l.ymax-l.ymin)/u.y-.1));const v=d.level-f.level,[R,x]=o.size,w=[];o.lods.forEach(C=>{C.level>=f.level&&C.level<=d.level&&w.push({x:C.resolution,y:C.resolution})}),w.sort((C,F)=>C.x-F.x);const S=e.computeBlockBoundary(l,R,x,o.origin,w,v),P=w.length>1?w.slice(1):null;s.storageInfo=new Ie.Z({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:P,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:v,tileInfo:o,blockBoundary:S}),e._fixGCSShift(s),e._set("rasterInfo",s)}if(i.capabilities.toLowerCase().indexOf("tilemap")>-1){const o={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,At.mN)(e.url),url:e.url,tileServers:[],type:"tile"};e._tilemapCache=new Nt.y({layer:o})}})()}fetchRawTile(t,e,r,n={}){var i=this;return(0,M.Z)(function*(){const{storageInfo:a,extent:s}=i.rasterInfo,l=`${i.url}/tile/${a.maximumPyramidLevel-t+i._levelOffset}/${e}/${r}`,u=i._slices?{sliceId:n.sliceId||0}:null,{data:c}=yield i.request(l,{query:u,responseType:"array-buffer",signal:n.signal});if(!c)return null;const d=yield i.decodePixelBlock(c,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===i.tileType}),f=a.blockBoundary[t];if("jpg"!==a.compression||r>f.minCol&&r<f.maxCol&&e>f.minRow&&e<f.maxRow)return d;const{origin:m,blockWidth:p,blockHeight:y}=a,{x:v,y:R}=i.getPyramidPixelSize(t),x=Math.round((s.xmin-m.x)/v)%p,w=Math.round((s.xmax-m.x)/v)%p,S=Math.round((m.y-s.ymax)/R)%y,P=Math.round((m.y-s.ymin)/R)%y,C=r===f.minCol?x:0,F=e===f.minRow?S:0;return(0,ae.pW)(d,{x:C,y:F},{width:(r===f.maxCol?w:p)-C,height:(e===f.maxRow?P:y)-F}),d})()}getSliceIndex(t){if(null==t||!t.length||!this._slices)return null;const e=t;for(let r=0;r<this._slices.length;r++){const n=this._slices[r].multidimensionalDefinition;if(n.length===e.length&&!n.some(i=>{const a=e.filter(s=>i.variableName===s.variableName&&s.dimensionName===i.dimensionName)[0];return!a||(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])!==(Array.isArray(a.values[0])?a.values[0][0]:a.values[0])}))return r}return null}fetchVariableStatisticsHistograms(t,e){var r=this;return(0,M.Z)(function*(){const n=r.request(r.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(s=>{var o;return null==(o=s.data)?void 0:o.statistics}),i=r.request(r.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(s=>{var o;return null==(o=s.data)?void 0:o.histograms}),a=yield Promise.all([n,i]);return a[0]&&a[0].forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}})()}computeBestPyramidLevelForLocation(t,e={}){var r=this;return(0,M.Z)(function*(){if(!r._tilemapCache)return 0;let n=r.identifyPixelLocation(t,0,(0,Z.Wg)(e.datumTransformation));if(null===n)return null;let i=0;const{maximumPyramidLevel:a}=r.rasterInfo.storageInfo;let s=a-i+r._levelOffset;const o=n.srcLocation;for(;s>=0;){try{if("available"===(yield r._tilemapCache.fetchAvailability(s,n.row,n.col,e)))break}catch(l){}if(s--,i++,n=r.identifyPixelLocation(o,i,(0,Z.Wg)(e.datumTransformation)),null===n)return null}return-1===s||null==n?null:i})()}_fetchRasterInfo(t){var e=this;return(0,M.Z)(function*(){const r=e.sourceJSON,n=Math.ceil((r.extent.xmax-r.extent.xmin)/r.pixelSizeX-.1),i=Math.ceil((r.extent.ymax-r.extent.ymin)/r.pixelSizeY-.1),a=Q.Z.fromJSON(r.spatialReference||r.extent.spatialReference);if("Map"===e.tileType)return new pe.Z({width:n,height:i,bandCount:3,extent:_.Z.fromJSON(r.extent),spatialReference:a,pixelSize:new N.Z({x:r.pixelSizeX,y:r.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:o}=t,l=!!r.hasRasterAttributeTable&&e.request(e.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:o}).then(p=>it.default.fromJSON(p.data)).catch(()=>null),u=!!r.hasColormap&&e.request(e.url+"/colormap",{query:{slice:s,f:"json"},signal:o}).then(p=>{var y;return null==(y=p.data)?void 0:y.colormap}),c=!!r.hasHistograms&&e.request(e.url+"/histograms",{query:{slice:s,f:"json"},signal:o}).then(p=>{var y;return null==(y=p.data)?void 0:y.histograms}),d=e.request(e.url+"/keyProperties",{query:{f:"json"},signal:o}).then(p=>p.data).catch(()=>{}),f=!!r.hasMultidimensions&&e._fetchMultidimensionalInfo(),m=!!r.hasMultidimensions&&e.request(e.url+"/slices",{query:{f:"json"},signal:o}).then(p=>p.data&&p.data.slices).catch(()=>{});return Promise.all([l,u,c,d,f,m]).then(p=>{let y=null;if(r.minValues&&r.minValues.length===r.bandCount){y=[];for(let v=0;v<r.minValues.length;v++)y.push({min:r.minValues[v],max:r.maxValues[v],avg:r.meanValues[v],stddev:r.stdvValues[v]})}return e._slices=p[5]||null,new pe.Z({width:n,height:i,bandCount:r.bandCount,extent:_.Z.fromJSON(r.extent),spatialReference:a,pixelSize:new N.Z({x:r.pixelSizeX,y:r.pixelSizeY,spatialReference:a}),pixelType:r.pixelType.toLowerCase(),statistics:y,attributeTable:p[0]||null,colormap:p[1]||null,histograms:p[2]||null,keyProperties:p[3]||{},multidimensionalInfo:p[4]||null})})})()}_fetchMultidimensionalInfo(t){var e=this;return(0,M.Z)(function*(){var r;const n=yield e.request(e.url+"/multidimensionalInfo",{query:{f:"json"},signal:t}).then(i=>{var a;return null==(a=i.data)?void 0:a.multidimensionalInfo});return null!=(r=n.variables)&&r.length&&n.variables.forEach(i=>{var a;null!=(a=i.statistics)&&a.length&&i.statistics.forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation})}),n})()}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:r}=t;0===e.xmin&&360===e.xmax&&r.wkid&&r.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Jt,t.extent=t.transform.forwardTransform(e))}};(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),(0,h._)([(0,I.Cb)()],Se.prototype,"tileType",void 0),Se=(0,h._)([(0,W.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Se);var Ut=Se,Wt=g(82657),jt=g(23823);const te=new Map;te.set("Int8","s8"),te.set("UInt8","u8"),te.set("Int16","s16"),te.set("UInt16","u16"),te.set("Int32","s32"),te.set("UInt32","u32"),te.set("Float32","f32"),te.set("Float64","f32"),te.set("Double64","f32");const Re=new Map;Re.set("lerc",".lrc"),Re.set("none",".til"),Re.set("deflate",".pzp"),Re.set("jpeg",".jzp");let ge=class extends he{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(t){var e=this;return(0,M.Z)(function*(){var r;yield e.init(),e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const n=t?(0,Z.Wg)(t.signal):null,i=yield e.request(e.url,{responseType:"xml",signal:n}),{rasterInfo:a,files:s}=e._parseHeader(i.data);if(-1===(null==(r=e.ioConfig.skipExtensions)?void 0:r.indexOf("aux.xml"))){const C=yield e._fetchAuxiliaryData(t);var o;null!=C&&(a.statistics=null!=(o=C.statistics)?o:a.statistics,a.histograms=C.histograms,C.histograms&&!(0,Z.pC)(a.statistics)&&(a.statistics=(0,ae.Oh)(C.histograms)))}e._set("rasterInfo",a),e._files=s;const l=yield e.request(s.index,{responseType:"array-buffer",signal:n});e._storageIndex=e._parseIndex(l.data);let u,c,d=0,f=-1;const{blockWidth:m,blockHeight:p,compression:y}=e.rasterInfo.storageInfo,v=e.rasterInfo.storageInfo.pyramidScalingFactor,{width:R,height:x,bandCount:w}=e.rasterInfo,S=[],P="none"===y?1:w;for(;d<e._storageIndex.length;)f++,u=Math.ceil(R/m/le(v,f)),c=Math.ceil(x/p/le(v,f)),d+=u*c*P*4,S.push({maxRow:c,maxCol:u,minCol:0,minRow:0});e.rasterInfo.storageInfo.blockBoundary=S,f>0&&(e.rasterInfo.storageInfo.firstPyramidLevel=1,e.rasterInfo.storageInfo.maximumPyramidLevel=f),e.updateTileInfo()})()}fetchRawTile(t,e,r,n={}){var i=this;return(0,M.Z)(function*(){const{blockWidth:a,blockHeight:s,blockBoundary:o,compression:l}=i.rasterInfo.storageInfo,u=o[t];if(!u||u.maxRow<e||u.maxCol<r||u.minRow>e||u.minCol>r)return null;const{bandCount:c,pixelType:d}=i.rasterInfo,{ranges:f,actualTileWidth:m,actualTileHeight:p}=i._getTileLocation(t,e,r);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const O=new Uint8Array(a*s);return new Wt.Z({width:a,height:s,pixels:null,mask:O,validPixelCount:0})}const{bandIds:y}=i.ioConfig,v="none"===l?1:c,R=[];let x=0;for(x=0;x<v;x++)(!y||y.indexOf[x]>-1)&&R.push(i.request(i._files.data,{range:{from:f[x].from,to:f[x].to},responseType:"array-buffer",signal:n.signal}));const w=yield Promise.all(R),S=w.map(O=>O.data.byteLength).reduce((O,A)=>O+A),P=new Uint8Array(S);let C=0;for(x=0;x<v;x++)P.set(new Uint8Array(w[x].data),C),C+=w[x].data.byteLength;const F="lerc"===i.rasterInfo.storageInfo.compression?"lerc":"bip",b=yield i.decodePixelBlock(P.buffer,{width:a,height:s,format:F,pixelType:d});let T=0,B=0;if(m!==a||p!==s){let O=b.mask;if(O)for(x=0;x<s;x++)if(B=x*a,x<p)for(T=m;T<a;T++)O[B+T]=0;else for(T=0;T<a;T++)O[B+T]=0;else for(O=new Uint8Array(a*s),b.mask=O,x=0;x<p;x++)for(B=x*a,T=0;T<m;T++)O[B+T]=1}return b})()}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,r,n,i,a,s;if(jt.f){for(r=new Uint8Array(t),i=new ArrayBuffer(t.byteLength),n=new Uint8Array(i),a=0;a<t.byteLength/4;a++)for(s=0;s<4;s++)n[4*a+s]=r[4*a+3-s];e=new Uint32Array(i)}else e=new Uint32Array(t);return e}_getTileLocation(t,e,r){const{blockWidth:n,blockHeight:i,pyramidScalingFactor:a,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,c="none"===s?1:u;let d,f,m,p=0,y=0;for(m=0;m<t;m++)y=le(a,m),d=Math.ceil(o/n/y),f=Math.ceil(l/i/y),p+=d*f;y=le(a,t),d=Math.ceil(o/n/y),f=Math.ceil(l/i/y),p+=e*d+r,p*=4*c;const v=this._storageIndex.subarray(p,p+4*c);let R=0,x=0;const w=[];for(let S=0;S<c;S++)R=v[4*S+0]*le(2,32)+v[4*S+1],x=R+v[4*S+2]*le(2,32)+v[4*S+3],w.push({from:R,to:x});return{ranges:w,actualTileWidth:r<d-1?n:Math.ceil(o/y)-n*(d-1),actualTileHeight:e<f-1?i:Math.ceil(l/y)-i*(f-1)}}_parseHeader(t){const e=V(t,"MRF_META/Raster");if(!e)throw new E.Z("mrf:open","not a valid MRF format");const r=V(e,"Size"),n=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),a=parseInt(r.getAttribute("c"),10),s=(Y(e,"Compression")||"none").toLowerCase();if(!s||-1===["none","lerc"].indexOf(s))throw new E.Z("mrf:open","currently does not support compression "+s);const o=Y(e,"DataType")||"UInt8",l=te.get(o);if(null==l)throw new E.Z("mrf:open","currently does not support pixel type "+o);const u=V(e,"PageSize"),c=parseInt(u.getAttribute("x"),10),d=parseInt(u.getAttribute("y"),10),f=V(e,"DataValues");let m,p;if(f&&(p=f.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map(U=>parseFloat(U)))),V(t,"MRF_META/CachedSource"))throw new E.Z("mrf:open","currently does not support MRF referencing other data files");const y=V(t,"MRF_META/GeoTags"),v=V(y,"BoundingBox");if(null==v)throw new E.Z("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const R=parseFloat(v.getAttribute("minx")),x=parseFloat(v.getAttribute("miny")),w=parseFloat(v.getAttribute("maxx")),S=parseFloat(v.getAttribute("maxy")),P=Y(y,"Projection")||"",C=Y(t,"datafile"),F=Y(t,"IndexFile");let b;if("LOCAL_CS[]"!==P)if(P.toLowerCase().startsWith("epsg:")){const U=Number(P.slice(5));isNaN(U)||0===U||(b=new Q.Z({wkid:U}))}else b=ke(P);const T=new _.Z(R,x,w,S);T.spatialReference=b;const B=V(t,"MRF_META/Rsets"),O=parseInt(B&&B.getAttribute("scale")||"2",10),A=new Ie.Z({origin:new N.Z({x:T.xmin,y:T.ymax,spatialReference:b}),blockWidth:c,blockHeight:d,pyramidBlockWidth:c,pyramidBlockHeight:d,compression:s,pyramidScalingFactor:O}),k=new N.Z({x:(w-R)/n,y:(S-x)/i,spatialReference:b});return{rasterInfo:new pe.Z({width:n,height:i,extent:T,spatialReference:b,bandCount:a,pixelType:l,pixelSize:k,noDataValue:m,storageInfo:A}),files:{mrf:this.url,index:F||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",Re.get(s))}}}_fetchAuxiliaryData(t){var e=this;return(0,M.Z)(function*(){try{const{data:r}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return _e(r)}catch(r){return null}})()}};(0,h._)([(0,I.Cb)()],ge.prototype,"_files",void 0),(0,h._)([(0,I.Cb)()],ge.prototype,"_storageIndex",void 0),(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],ge.prototype,"datasetFormat",void 0),ge=(0,h._)([(0,W.j)("esri.layers.support.rasterIO.MRFRaster")],ge);var _t=ge,Pe=g(44263),Ee=g(28281);const ot=function(t,e){const r=t.get(e);return r&&r.values},Ae=function(t,e){const r=t.get(e);return r&&r.values[0]};let de=class extends he{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(t){var e=this;return(0,M.Z)(function*(){var r,n,i;yield e.init();const a=t?(0,Z.Wg)(t.signal):null,{data:s}=yield e.request(e.url,{range:{from:0,to:e._bufferSize},responseType:"array-buffer",signal:a});if(!s)throw new E.Z("tiffraster:open","failed to open url "+e.url);e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const{littleEndian:o,firstIFD:l,isBigTiff:u}=(0,Pe.p)(s),c=[];yield e.readIFDs(c,s,o,l,0,u?8:4,a);const d=(0,Pe.g)(c),{width:f,height:m,tileWidth:p,tileHeight:y,planes:v,pixelType:R,compression:x,firstPyramidLevel:w,maximumPyramidLevel:S,pyramidBlockWidth:P,pyramidBlockHeight:C,tileBoundary:F,affine:b,metadata:T}=d;let O=ke((null==(r=d.extent.spatialReference)?void 0:r.wkt)||(null==(n=d.extent.spatialReference)?void 0:n.wkid)),A=!1;null==O&&(A=!0,O=new Q.Z({wkid:3857}));const k=new _.Z(ie(L({},d.extent),{spatialReference:O})),U=new N.Z(k?{x:k.xmin,y:k.ymax,spatialReference:O}:{x:0,y:0}),re=new Ie.Z({blockWidth:p,blockHeight:y,pyramidBlockWidth:P,pyramidBlockHeight:C,compression:x,origin:U,firstPyramidLevel:w,maximumPyramidLevel:S,blockBoundary:F}),ne=new N.Z({x:(k.xmax-k.xmin)/f,y:(k.ymax-k.ymin)/m,spatialReference:O}),D=new pe.Z({width:f,height:m,bandCount:v,pixelType:R,compression:x,pixelSize:ne,storageInfo:re,spatialReference:O,isPseudoSpatialReference:A,keyProperties:T?{BandProperties:T.bandProperties,DataType:T.dataType}:{},extent:k,statistics:T?T.statistics:null});if(null!=b&&b.length&&(D.nativeExtent=new _.Z({xmin:-.5,ymin:.5-m,xmax:f-.5,ymax:.5,spatialReference:O}),D.transform=new Ze({polynomialOrder:1,forwardCoefficients:[b[2]+b[0]/2,b[5]-b[3]/2,b[0],b[3],-b[1],-b[4]]}),D.extent=D.transform.forwardTransform(D.nativeExtent),D.pixelSize=new N.Z({x:(k.xmax-k.xmin)/f,y:(k.ymax-k.ymin)/m,spatialReference:O}),re.origin.x=-.5,re.origin.y=.5),null==(i=e.ioConfig.skipExtensions)||!i.includes("aux.xml")){const q=yield e._fetchAuxiliaryData(t);if(null!=q){var j;if(D.statistics=null!=(j=q.statistics)?j:D.statistics,D.histograms=q.histograms,q.histograms&&!(0,Z.pC)(D.statistics)&&(D.statistics=(0,ae.Oh)(q.histograms)),q.transform&&!b){D.transform=q.transform,D.nativeExtent=D.extent;const oe=D.transform.forwardTransform(D.nativeExtent);D.pixelSize=new N.Z({x:(oe.xmax-oe.xmin)/f,y:(oe.ymax-oe.ymin)/m,spatialReference:O}),D.extent=oe}D.spatialReference||(D.spatialReference=q.spatialReference)}}if(e._set("rasterInfo",D),e._headerInfo=L({littleEndian:o,isBigTiff:u,ifds:c},d),!e._headerInfo.isSupported)throw new E.Z("tiffraster:open","this tiff is not supported: "+e._headerInfo.message);e.updateTileInfo()})()}fetchRawTile(t,e,r,n={}){var i=this;return(0,M.Z)(function*(){var a;if(null==(a=i._headerInfo)||!a.isSupported||i.isBlockOutside(t,e,r))return null;const s=i.getTileLocation(t,e,r);if(!s)return null;const{ranges:o,actualTileWidth:l,actualTileHeight:u,ifd:c}=s,d=o.map(F=>i.request(i.url,{range:F,responseType:"array-buffer",signal:n.signal})),f=yield Promise.all(d),m=f.map(F=>F.data.byteLength).reduce((F,b)=>F+b),p=1===f.length?f[0].data:new ArrayBuffer(m),y=[0],v=[0];if(f.length>1){const F=new Uint8Array(p);for(let b=0,T=0;b<f.length;b++){const B=f[b].data;F.set(new Uint8Array(B),T),y[b]=T,T+=B.byteLength,v[b]=B.byteLength}}const{blockWidth:R,blockHeight:x}=i.getBlockWidthHeight(t),w=yield i.decodePixelBlock(p,{format:"tiff",customOptions:{headerInfo:i._headerInfo,ifd:c,offsets:y,sizes:v},width:R,height:x,planes:null,pixelType:null});let S,P,C;if(l!==R||u!==x){let F=w.mask;if(F)for(S=0;S<x;S++)if(C=S*R,S<u)for(P=l;P<R;P++)F[C+P]=0;else for(P=0;P<R;P++)F[C+P]=0;else for(F=new Uint8Array(R*x),w.mask=F,S=0;S<u;S++)for(C=S*R,P=0;P<l;P++)F[C+P]=1}return w})()}readIFDs(t,e,r,n,i,a=4,s){var o=this;return(0,M.Z)(function*(){if(!n)return null;(n>=e.byteLength||n<0)&&(e=(yield o.request(o.url,{range:{from:n+i,to:n+i+o._bufferSize},responseType:"array-buffer",signal:s})).data,i=n+i,n=0);const l=yield o.readIFD(e,r,n,i,Ee.Z.TIFF_TAGS,a,s);if(t.push(l.ifd),!l.nextIFD)return null;yield o.readIFDs(t,e,r,l.nextIFD-i,i,a,s)})()}readIFD(t,e,r,n,i=Ee.Z.TIFF_TAGS,a=4,s){var o=this;return(0,M.Z)(function*(){if(!t)return null;const l=(0,Pe.b)(t,e,r,n,i,a);if(l.success){const u=[];if(l.ifd.forEach(c=>{c.values||u.push(c)}),u.length>0){const c=u.map(f=>f.offlineOffsetSize),d=Math.min.apply(null,c.map(f=>f[0]));if(Math.min.apply(null,c.map(f=>f[0]+f[1]))-d<=o._bufferSize){const{data:f}=yield o.request(o.url,{range:{from:d,to:d+o._bufferSize},responseType:"array-buffer",signal:s});t=f,n=d,u.forEach(m=>(0,Pe.c)(t,e,m,n))}}if(l.ifd.has("GEOKEYDIRECTORY")){const c=l.ifd.get("GEOKEYDIRECTORY"),d=c.values;if(d&&d.length>4){const f=d[0]+"."+d[1]+"."+d[2],m=yield o.readIFD(t,e,c.valueOffset+6-n,n,Ee.Z.GEO_KEYS,2,s);c.data=m.ifd,c.data&&c.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return l}return l.requiredBufferSize&&l.requiredBufferSize!==t.byteLength?(t=(yield o.request(o.url,{range:{from:n,to:n+l.requiredBufferSize+4},responseType:"array-buffer",signal:s})).data).byteLength<l.requiredBufferSize?null:o.readIFD(t,e,0,n,Ee.Z.TIFF_TAGS,4,s):void 0})()}getTileLocation(t,e,r){const{firstPyramidLevel:n,blockBoundary:i}=this.rasterInfo.storageInfo,a=0===t?0:t-(n-1),s=this._headerInfo.ifds[a];if(!s)return null;const o=(0,Pe.i)(s,this._headerInfo),l=ot(s,"TILEOFFSETS");if(void 0===l)return null;const u=ot(s,"TILEBYTECOUNTS"),{minRow:c,minCol:d,maxRow:f,maxCol:m}=i[a];if(e>f||r>m||e<c||r<d)return null;const p=Ae(s,"IMAGEWIDTH"),y=Ae(s,"IMAGELENGTH"),v=Ae(s,"TILEWIDTH"),R=Ae(s,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,w=x*e*(m+1)+r,S=[{from:l[w],to:l[w+x-1]+u[w+x-1]-1}];if(o){let F=!0;for(let b=0;b<x;b++)if(l[w+b]+u[w+b]!==l[w+b+1]){F=!1;break}if(!F)for(let b=0;b<x;b++)S[b]={from:l[w+b],to:l[w+b]+u[w+b]-1}}return null==l[w]||null==u[w]?null:{ranges:S,ifd:s,actualTileWidth:r===m?p%v:v,actualTileHeight:e===f?y%R:R}}_fetchAuxiliaryData(t){var e=this;return(0,M.Z)(function*(){try{const{data:r}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return _e(r)}catch(r){return null}})()}};(0,h._)([(0,I.Cb)()],de.prototype,"_files",void 0),(0,h._)([(0,I.Cb)()],de.prototype,"_headerInfo",void 0),(0,h._)([(0,I.Cb)()],de.prototype,"_bufferSize",void 0),(0,h._)([(0,I.Cb)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=(0,h._)([(0,W.j)("esri.layers.support.rasterDatasets.TIFFRaster")],de);var Gt=de;const J=new Map;J.set("CRF",{desc:"Cloud Raster Format",constructor:Bt}),J.set("MRF",{desc:"Meta Raster Format",constructor:_t}),J.set("TIFF",{desc:"GeoTIFF",constructor:Gt}),J.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ut}),J.set("JPG",{desc:"JPG Raster Format",constructor:ze}),J.set("PNG",{desc:"PNG Raster Format",constructor:ze}),J.set("GIF",{desc:"GIF Raster Format",constructor:ze}),J.set("BMP",{desc:"BMP Raster Format",constructor:ze});var Vt=g(78710);let z=class extends((0,pt.h)((0,wt.M)((0,It.q)((0,bt.I)((0,ht.N)(vt((0,Ct.Q)((0,dt.R)(mt.Z))))))))){constructor(...t){super(...t),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return"string"==typeof t?L({url:t},e):t}load(t){const e=(0,Z.pC)(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(ce.r9).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var t,e;let r=[new ve.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(t=this.rasterInfo)||null==(e=t.attributeTable)?void 0:e.fields;if(n){const o=n.filter(l=>"oid"!==l.type&&"value"!==l.name.toLowerCase()).map(l=>{const u=l.clone();return u.name="Raster."+l.name,u});r=r.concat(o)}const a=this.rasterInfo.dataType;if(("vector-magdir"===a||"vector-uv"===a)&&(0,Z.pC)(this.rasterInfo.multidimensionalInfo)){var s;const o=null==(s=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:s.trim();r.push(new ve.Z({name:"Raster.Magnitude",alias:"Magnitude"+(o?` (${o})`:""),domain:null,editable:!1,type:"double"})),r.push(new ve.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return r}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,r){const i=(0,Fe.ij)(e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,r)||void 0;if(null!=i)return i}createPopupTemplate(t){return(0,Vt.eZ)({fields:this.rasterFields,title:this.title},t)}write(t,e){const{raster:r}=this;return(this.loaded?"RasterTileServer"===r.datasetFormat&&("Raster"===r.tileType||"Map"===r.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(t,e):(e&&e.messages&&e.messages.push(new E.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e.origin}/${e.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(t){var e=this;return(0,M.Z)(function*(){e.raster?(e.raster.rasterInfo||(yield e.raster.open()),e.url=e.raster.url):e.raster=yield class{static get supportedFormats(){const e=new Set;return J.forEach((r,n)=>e.add(n)),e}static open(e){var r=this;return(0,M.Z)(function*(){const{url:n,ioConfig:i,sourceJSON:a}=e;let s=e.datasetFormat;null==s&&n.lastIndexOf(".")&&(s=n.slice(n.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),n.toLowerCase().indexOf("/imageserver")>-1&&-1===n.toLowerCase().indexOf("/wcsserver")&&(s="RasterTileServer");const o={url:n,sourceJSON:a,datasetFormat:s,ioConfig:i||{bandIds:null,sampling:null}};let l,u;if(r.supportedFormats.has(s))return l=J.get(s).constructor,u=new l(o),yield u.open({signal:e.signal}),u;if(s)throw new E.Z("rasterfactory:open","not a supported format "+s);const c=Array.from(J.keys());let d=0;const f=function(){return s=c[d++],s?(l=J.get(s).constructor,u=new l(o),u.open({signal:e.signal}).then(()=>u).catch(()=>f())):null};return f()})()}static register(e,r,n){J.has(e.toUpperCase())||J.set(e.toUpperCase(),{desc:r,constructor:n})}}.open({url:e.url,sourceJSON:e.sourceJSON,ioConfig:ie(L({sampling:"closest"},e.ioConfig),{customFetchParameters:e.customParameters}),signal:t});const{rasterInfo:r}=e.raster;if(!r)throw new E.Z("imagery-tile-layer:load","cannot load resources on "+e.url);e.sourceJSON=e.sourceJSON||e.raster.sourceJSON,null!=e.sourceJSON&&(e._set("version",e.sourceJSON.currentVersion),e._set("copyright",e.sourceJSON.copyrightText)),null==e.title&&(e.title=e.raster.datasetName),"Map"===e.raster.tileType&&(e.popupEnabled=!1),e._configDefaultSettings(),e.watch("customParameters",n=>e.raster.ioConfig.customFetchParameters=n)})()}};(0,h._)([(0,I.Cb)({type:[ct.z8],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(t=this.bandIds)?void 0:t.join(","))}}}}})],z.prototype,"bandIds",void 0),(0,h._)([(0,I.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,Me.J)(Tt.c)],z.prototype,"interpolation",void 0),(0,h._)([(0,I.Cb)({json:{write:!0}})],z.prototype,"multidimensionalDefinition",void 0),(0,h._)([(0,I.Cb)(Ne.rn)],z.prototype,"legendEnabled",void 0),(0,h._)([(0,I.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],z.prototype,"isReference",void 0),(0,h._)([(0,I.Cb)({type:["show","hide"]})],z.prototype,"listMode",void 0),(0,h._)([(0,I.Cb)()],z.prototype,"sourceJSON",void 0),(0,h._)([(0,I.Cb)({readOnly:!0})],z.prototype,"version",void 0),(0,h._)([(0,I.Cb)()],z.prototype,"title",void 0),(0,h._)([(0,I.Cb)({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),(0,h._)([(0,I.Cb)({type:["ArcGISTiledImageServiceLayer"]})],z.prototype,"operationalLayerType",void 0),(0,h._)([(0,I.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(t,e,r){e[r]=!t}}}})],z.prototype,"popupEnabled",void 0),(0,h._)([(0,I.Cb)({type:ft.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],z.prototype,"popupTemplate",void 0),(0,h._)([(0,I.Cb)({readOnly:!0})],z.prototype,"defaultPopupTemplate",null),(0,h._)([(0,I.Cb)({readOnly:!0,type:[ve.Z]})],z.prototype,"fields",void 0),(0,h._)([(0,I.Cb)({readOnly:!0,type:[ve.Z]})],z.prototype,"rasterFields",null),(0,h._)([(0,I.Cb)({types:Fe.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var t;const e="raster-stretch"===(null==(t=this.renderer)?void 0:t.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:Fe.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type})}}}}})],z.prototype,"renderer",null),(0,h._)([(0,He.r)("renderer")],z.prototype,"readRenderer",null),z=(0,h._)([(0,W.j)("esri.layers.ImageryTileLayer")],z);var Yt=z}}]);