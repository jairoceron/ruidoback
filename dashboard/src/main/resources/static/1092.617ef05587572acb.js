"use strict";var V=Math.pow;(self.webpackChunkdashboard=self.webpackChunkdashboard||[]).push([[1092],{82657:(yt,rt,L)=>{L.d(rt,{Z:()=>pt});var $,W=L(60046),S=(L(67474),L(22795)),ot=L(54792),at=L(85071),ht=L(33870),ft=L(60305),N=L(9077),ct=L(59559),ut=L(42442);const J=ht.Z.getLogger("esri.layers.support.PixelBlock");let G=$=class extends ot.wq{constructor(g){super(g),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(g,d){return new($.getPixelArrayConstructor(g))(d)}static getPixelArrayConstructor(g){let d;switch(g){case"u1":case"u2":case"u4":case"u8":d=Uint8Array;break;case"u16":d=Uint16Array;break;case"u32":case"u32":d=Uint32Array;break;case"s8":d=Int8Array;break;case"s16":d=Int16Array;break;case"s32":d=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":d=Float32Array;break;case"f64":d=Float64Array}return d}castPixelType(g){if(!g)return"f32";let d=g.toLowerCase();return["u1","u2","u4"].indexOf(d)>-1?d="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(d)&&(d="f32"),d}getPlaneCount(){return this.pixels&&this.pixels.length}addData(g){if(!g.pixels||g.pixels.length!==this.width*this.height)throw new S.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(g.pixels),this.statistics.push(g.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const g=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(g);break;default:this._fillFrom8Bit(g)}return new Uint8ClampedArray(g)}getAsRGBAFloat(){const g=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(g),g}updateStatistics(){this.statistics=this.pixels.map(U=>this._calculateBandStatistics(U,this.mask));const g=this.mask;let d=0;if(g)for(let U=0;U<g.length;U++)g[U]&&d++;else d=this.width*this.height;this.validPixelCount=d}clamp(g){if(!g||"f64"===g||"f32"===g)return;let d;switch(g){case"u8":d=[0,255];break;case"u16":d=[0,65535];break;case"u32":d=[0,4294967295];break;case"s8":d=[-128,127];break;case"s16":d=[-32768,32767];break;case"s32":d=[-2147483648,2147483647];break;default:d=[-34e38,34e38]}const[U,B]=d,T=this.pixels,v=this.width*this.height,_=T.length;let C,P,I;const Z=[];for(let X=0;X<_;X++){I=$.createEmptyBand(g,v),C=T[X];for(let z=0;z<v;z++)P=C[z],I[z]=P>B?B:P<U?U:P;Z.push(I)}this.pixels=Z,this.pixelType=g}extractBands(g){if((0,ft.Wi)(g)||0===g.length||null==this.pixels||0===this.pixels.length)return this;const d=this.pixels.length,U=g.some(T=>T>=this.pixels.length),B=d===g.length&&!g.some((T,v)=>T!==v);return U||B?this:new $({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:g.map(T=>this.pixels[T]),statistics:this.statistics&&g.map(T=>this.statistics[T])})}clone(){const g=new $({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let d;this.mask&&(g.mask=this.mask instanceof Uint8Array?new Uint8Array(this.mask):this.mask.slice(0));const U=$.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){g.pixels=[];const B=this.pixels[0].slice;for(d=0;d<this.pixels.length;d++)g.pixels[d]=B?this.pixels[d].slice(0,this.pixels[d].length):new U(this.pixels[d])}if(this.statistics)for(g.statistics=[],d=0;d<this.statistics.length;d++)g.statistics[d]=(0,at.d9)(this.statistics[d]);return g}_fillFrom8Bit(g){const{mask:d,maskIsAlpha:U,pixels:B}=this;if(!g||!B||!B.length)return void J.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let T,v,_,C;T=v=_=B[0],B.length>=3?(v=B[1],_=B[2]):2===B.length&&(v=B[1]);const P=new Uint32Array(g),I=this.width*this.height;if(T.length===I)if(d&&d.length===I)if(U)for(C=0;C<I;C++)d[C]&&(P[C]=d[C]<<24|_[C]<<16|v[C]<<8|T[C]);else for(C=0;C<I;C++)d[C]&&(P[C]=255<<24|_[C]<<16|v[C]<<8|T[C]);else for(C=0;C<I;C++)P[C]=255<<24|_[C]<<16|v[C]<<8|T[C];else J.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(g){const{pixels:d,mask:U,statistics:B}=this;if(!g||!d||!d.length)return void J.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const T=this.pixelType;let v=1,_=0,C=1;if(B&&B.length>0)_=B.map(t=>t.minValue).reduce((t,l)=>Math.min(t,l)),C=B.map(t=>t.maxValue-t.minValue).reduce((t,l)=>Math.max(t,l)),v=255/C;else{let t=255;"s8"===T?(_=-128,t=127):"u16"===T?t=65535:"s16"===T?(_=-32768,t=32767):"u32"===T?t=4294967295:"s32"===T?(_=-2147483648,t=2147483647):"f32"===T?(_=-34e38,t=34e38):"f64"===T&&(_=-Number.MAX_VALUE,t=Number.MAX_VALUE),v=255/(t-_)}const P=new Uint32Array(g),I=this.width*this.height;let Z,X,z,s,o;if(Z=X=z=d[0],Z.length!==I)return J.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(d.length>=2)if(X=d[1],d.length>=3&&(z=d[2]),U&&U.length===I)for(s=0;s<I;s++)U[s]&&(P[s]=255<<24|(z[s]-_)*v<<16|(X[s]-_)*v<<8|(Z[s]-_)*v);else for(s=0;s<I;s++)P[s]=255<<24|(z[s]-_)*v<<16|(X[s]-_)*v<<8|(Z[s]-_)*v;else if(U&&U.length===I)for(s=0;s<I;s++)o=(Z[s]-_)*v,U[s]&&(P[s]=255<<24|o<<16|o<<8|o);else for(s=0;s<I;s++)o=(Z[s]-_)*v,P[s]=255<<24|o<<16|o<<8|o}_fillFrom32Bit(g){const{pixels:d,mask:U}=this;if(!g||!d||!d.length)return J.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let B,T,v,_;B=T=v=d[0],d.length>=3?(T=d[1],v=d[2]):2===d.length&&(T=d[1]);const C=this.width*this.height;if(B.length!==C)return J.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let P=0;if(U&&U.length===C)for(_=0;_<C;_++)g[P++]=B[_],g[P++]=T[_],g[P++]=v[_],g[P++]=1&U[_];else for(_=0;_<C;_++)g[P++]=B[_],g[P++]=T[_],g[P++]=v[_],g[P++]=1}_calculateBandStatistics(g,d){let U=1/0,B=-1/0;const T=g.length;let v,_=0;if(d)for(v=0;v<T;v++)d[v]&&(_=g[v],U=_<U?_:U,B=_>B?_:B);else for(v=0;v<T;v++)_=g[v],U=_<U?_:U,B=_>B?_:B;return{minValue:U,maxValue:B}}};(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"width",void 0),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"height",void 0),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"pixelType",void 0),(0,W._)([(0,ct.p)("pixelType")],G.prototype,"castPixelType",null),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"validPixelCount",void 0),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"mask",void 0),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"maskIsAlpha",void 0),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"pixels",void 0),(0,W._)([(0,N.Cb)({json:{write:!0}})],G.prototype,"statistics",void 0),G=$=(0,W._)([(0,ut.j)("esri.layers.support.PixelBlock")],G);var pt=G},21092:(yt,rt,L)=>{L.d(rt,{Uk:()=>z,SJ:()=>ht,Pz:()=>at,oc:()=>$,hE:()=>ct,Oh:()=>N,Hv:()=>ft,qF:()=>ot,nk:()=>S,XV:()=>G,us:()=>B,Kh:()=>d,zp:()=>pt,pW:()=>T,Vl:()=>X,dy:()=>J});var W=L(60305),K=L(82657);function S(s){return(0,W.pC)(s)&&"esri.layers.support.PixelBlock"===s.declaredClass&&s.pixels&&s.pixels.length>0}function ot(s,o){if(null==o||!o.length||!S(s))return s;const t=s.pixels.length;return o&&o.some(l=>l>=t)||1===t&&1===o.length&&0===o[0]?s:t!==o.length||o.some((l,c)=>l!==c)?new K.Z({pixelType:s.pixelType,width:s.width,height:s.height,mask:s.mask,validPixelCount:s.validPixelCount,maskIsAlpha:s.maskIsAlpha,pixels:o.map(l=>s.pixels[l]),statistics:s.statistics&&o.map(l=>s.statistics[l])}):s}function at(s){if(!s)return;const o=s.colormap;if(!o||0===o.length)return;const t=o.sort((e,n)=>e[0]-n[0]);let l=0;t[0][0]<0&&(l=t[0][0]);const c=Math.max(256,t[t.length-1][0]-l+1),r=new Uint8Array(4*c),p=[];let h,i=0,a=0;const u=5===t[0].length;if(c>65536)return t.forEach(e=>{p[e[0]-l]=u?e.slice(1):e.slice(1).concat([255])}),{indexed2DColormap:p,offset:l,alphaSpecified:u};if(s.fillUnspecified)for(h=t[a],i=h[0]-l;i<c;i++)r[4*i]=h[1],r[4*i+1]=h[2],r[4*i+2]=h[3],r[4*i+3]=u?h[4]:255,i===h[0]-l&&(h=a===t.length-1?h:t[++a]);else for(i=0;i<t.length;i++)h=t[i],a=4*(h[0]-l),r[a]=h[1],r[a+1]=h[2],r[a+2]=h[3],r[a+3]=u?h[4]:255;return{indexedColormap:r,offset:l,alphaSpecified:u}}function ht(s,o){if(!S(s)||!o&&(o.indexedColormap||o.indexed2DColormap))return s;const t=s.clone(),l=t.pixels;let c=t.mask;const r=t.width*t.height;if(1!==l.length)return s;const{indexedColormap:p,indexed2DColormap:h,offset:i,alphaSpecified:a}=o,u=p.length-1;let e=0;const n=l[0],x=new Uint8Array(n.length),f=new Uint8Array(n.length),m=new Uint8Array(n.length);let k,y=0;if(p)if(c)for(e=0;e<r;e++)c[e]&&(y=4*(n[e]-i),y<i||y>u?c[e]=0:(x[e]=p[y],f[e]=p[y+1],m[e]=p[y+2],c[e]=p[y+3]));else{for(c=new Uint8Array(r),e=0;e<r;e++)y=4*(n[e]-i),y<i||y>u?c[e]=0:(x[e]=p[y],f[e]=p[y+1],m[e]=p[y+2],c[e]=p[y+3]);t.mask=c}else if(c)for(e=0;e<r;e++)c[e]&&(k=h[n[e]],x[e]=k[0],f[e]=k[1],m[e]=k[2],c[e]=k[3]);else{for(c=new Uint8Array(r),e=0;e<r;e++)k=h[n[e]],x[e]=k[0],f[e]=k[1],m[e]=k[2],c[e]=k[3];t.mask=c}return t.pixels=[x,f,m],t.statistics=null,t.pixelType="u8",t.maskIsAlpha=a,t}function ft(s){if(!S(s))return null;s.statistics||s.updateStatistics();const{pixels:o,mask:t,pixelType:l,statistics:c}=s,r=s.width*s.height,p=o.length;let h,i,a,u,e;const n=[],x=[];let f,m,k,y,w,M,b,A,E,O;const R=256;for(u=0;u<p;u++){if(f=new Uint32Array(R),k=o[u],"u8"===l)if(h=-.5,i=255.5,t)for(e=0;e<r;e++)t[e]&&f[k[e]]++;else for(e=0;e<r;e++)f[k[e]]++;else{if(h=c[u].minValue,i=c[u].maxValue,a=(i-h)/R,m=new Uint32Array(257),t)for(e=0;e<r;e++)t[e]&&m[Math.floor((k[e]-h)/a)]++;else for(e=0;e<r;e++)m[Math.floor((k[e]-h)/a)]++;for(e=0;e<255;e++)f[e]=m[e];f[255]=m[255]+m[256]}for(n.push({min:h,max:i,size:R,counts:f}),y=0,w=0,A=0,e=0;e<R;e++)y+=f[e],w+=e*f[e];for(E=w/y,e=0;e<R;e++)A+=f[e]*V(e-E,2);O=Math.sqrt(A/(y-1)),a=(i-h)/R,M=(E+.5)*a+h,b=O*a,x.push({min:h,max:i,avg:M,stddev:b})}return{statistics:x,histograms:n}}function N(s){const o=[];for(let t=0;t<s.length;t++){const{min:l,max:c,size:r,counts:p}=s[t];let h=0,i=0;for(let f=0;f<r;f++)h+=p[f],i+=f*p[f];const a=i/h;let u=0;for(let f=0;f<r;f++)u+=p[f]*V(f-a,2);const e=(c-l)/r,n=(a+.5)*e+l,x=Math.sqrt(u/(h-1))*e;o.push({min:l,max:c,avg:n,stddev:x})}return o}function ct(s){const{minCutOff:o,maxCutOff:t,gamma:l,pixelType:c}=s,r=s.outMin||0,p=s.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(c))return null;const h=o.length;let i,a,u=0;"s8"===c?u=-127:"s16"===c&&(u=-32767);let e=256;["u16","s16"].indexOf(c)>-1&&(e=65536);const n=[],x=[],f=p-r;for(i=0;i<h;i++)x[i]=t[i]-o[i],n[i]=f/(t[i]-o[i]);const m=l&&l.length>=h,k=[];if(m)for(i=0;i<h;i++)k[i]=l[i]>1?l[i]>2?6.5+V(l[i]-2,2.5):6.5+100*V(2-l[i],4):1;let y;const w=[];let M,b,A;if(m)for(i=0;i<h;i++){for(A=[],a=0;a<e;a++)M=a+u,y=(M-o[i])/x[i],b=1,l[i]>1&&(b-=V(1/f,y*k[i])),A[a]=M<t[i]&&M>o[i]?Math.floor(b*f*V(y,1/l[i]))+r:M>=t[i]?p:r;w[i]=A}else for(i=0;i<h;i++){for(A=[],a=0;a<e;a++)M=a+u,A[a]=M<=o[i]?r:M>=t[i]?p:Math.floor((M-o[i])/x[i]*f)+r;w[i]=A}if(null!=s.contrastOffset){const E=function(s,o){const t=Math.min(Math.max(s,-100),100),l=Math.min(Math.max(o,-100),100),c=255;let p,h;const i=new Uint8Array(256);for(p=0;p<256;p++)t>0&&t<100?h=(200*p-25500+510*l)/(2*(100-t))+128:t<=0&&t>-100?h=(200*p-25500+510*l)*(100+t)/2e4+128:100===t?(h=200*p-25500+256*(100-t)+510*l,h=h>0?c:0):-100===t&&(h=128),i[p]=h>c?c:h<0?0:h;return i}(s.contrastOffset,s.brightnessOffset);for(i=0;i<h;i++)for(A=w[i],a=0;a<e;a++)A[a]=E[A[a]]}return{lut:w,offset:u}}function $(s,o=256){o=Math.min(o,256);const{size:t,counts:l}=s,c=new Uint8Array(t),r=l.reduce((u,e)=>u+e/o,0);let p=0,h=0,i=0,a=r;for(let u=0;u<t;u++)if(i+=l[u],!(u<t-1&&i+l[u+1]<a)){for(;p<o-1&&a<i;)p++,a+=r;for(let e=h;e<=u;e++)c[e]=p;h=u+1}for(let u=h;u<t;u++)c[u]=o-1;return c}function J(s,o){if(!S(s))return null;const t=s.clone(),{pixels:l,mask:c}=t,{minCutOff:r,maxCutOff:p,gamma:h}=o,i=o.outMin||0,a=o.outMax||255,u=t.width*t.height,e=l.length;let n,x,f,m,k;const y=a-i,w=[],M=[];for(n=0;n<e;n++)M[n]=p[n]-r[n],w[n]=y/(p[n]-r[n]);const b=h&&h.length>=e,A=[];if(b)for(n=0;n<e;n++)A[n]=h[n]>1?h[n]>2?6.5+V(h[n]-2,2.5):6.5+100*V(2-h[n],4):1;if(b)if(null!=c){for(x=0;x<u;x++)if(c[x])for(n=0;n<e;n++)f=l[n][x],k=(f-r[n])/M[n],m=1,h[n]>1&&(m-=V(1/y,k*A[n])),l[n][x]=f<p[n]&&f>r[n]?Math.floor(m*y*V(k,1/h[n]))+i:f>=p[n]?a:i}else for(x=0;x<u;x++)for(n=0;n<e;n++)f=l[n][x],k=(f-r[n])/M[n],m=1,h[n]>1&&(m-=V(1/y,k*A[n])),l[n][x]=f<p[n]&&f>r[n]?Math.floor(m*y*V(k,1/h[n]))+i:f>=p[n]?a:i;else if(null!=c){for(x=0;x<u;x++)if(c[x])for(n=0;n<e;n++)f=l[n][x],l[n][x]=f<p[n]&&f>r[n]?Math.floor((f-r[n])/M[n]*y)+i:f>=p[n]?a:i}else for(x=0;x<u;x++)for(n=0;n<e;n++)f=l[n][x],l[n][x]=f<p[n]&&f>r[n]?Math.floor((f-r[n])/M[n]*y)+i:f>=p[n]?a:i;return t.pixelType="u8",t.updateStatistics(),t}function G(s,o){if(!S(s))return null;const{pixels:t,mask:l}=s,c=s.width*s.height,r=t.length;let p=o.lut;const{offset:h}=o;let i,a;p&&1===p[0].length&&(p=t.map(()=>p));const u=[];let e,n,x;if(h)if(null==l)for(i=0;i<r;i++){for(e=t[i],n=p[i],x=new Uint8Array(c),a=0;a<c;a++)x[a]=n[e[a]-h];u.push(x)}else for(i=0;i<r;i++){for(e=t[i],n=p[i],x=new Uint8Array(c),a=0;a<c;a++)l[a]&&(x[a]=n[e[a]-h]);u.push(x)}else if(null==l)for(i=0;i<r;i++){for(e=t[i],n=p[i],x=new Uint8Array(c),a=0;a<c;a++)x[a]=n[e[a]];u.push(x)}else for(i=0;i<r;i++){for(e=t[i],n=p[i],x=new Uint8Array(c),a=0;a<c;a++)l[a]&&(x[a]=n[e[a]]);u.push(x)}const f=new K.Z({width:s.width,height:s.height,pixels:u,mask:l,pixelType:"u8"});return f.updateStatistics(),f}function pt(s,o){if(!S(s))return null;const t=s.clone(),{pixels:l}=t,c=t.width*t.height,r=o.length,p=Math.floor(r/2),h=o[Math.floor(p)],i=l[0];let a,u,e,n,x,f,m=!1;const k=new Uint8Array(c),y=new Uint8Array(c),w=new Uint8Array(c);let M=t.mask;const b=4===o[0].mappedColor.length;for(M||(M=new Uint8Array(c),M.fill(b?255:1),t.mask=M),x=0;x<c;x++)if(M[x]){for(a=i[x],m=!1,f=p,u=h,e=0,n=r-1;n-e>1;){if(a===u.value){m=!0;break}a>u.value?e=f:n=f,f=Math.floor((e+n)/2),u=o[Math.floor(f)]}m||(a===o[e].value?(u=o[e],m=!0):a===o[n].value?(u=o[n],m=!0):a<o[e].value?(m=!1,u=null):a>o[e].value&&(a<o[n].value?(u=o[e],m=!0):n===r-1?(m=!1,u=null):(u=o[n],m=!0))),m?(k[x]=u.mappedColor[0],y[x]=u.mappedColor[1],w[x]=u.mappedColor[2],M[x]=u.mappedColor[3]):k[x]=y[x]=w[x]=M[x]=0}return t.pixels=[k,y,w],t.mask=M,t.pixelType="u8",t.maskIsAlpha=b,t}function d(s,o){if(!s||0===s.length)return null;const t=s.filter(f=>f.pixelBlock)[0];if(!t||(0,W.Wi)(t.pixelBlock))return null;const l=(t.extent.xmax-t.extent.xmin)/t.pixelBlock.width,c=(t.extent.ymax-t.extent.ymin)/t.pixelBlock.height,r=.01*Math.min(l,c),p=s.sort((f,m)=>Math.abs(f.extent.ymax-m.extent.ymax)>r?m.extent.ymax-f.extent.ymax:Math.abs(f.extent.xmin-m.extent.xmin)>r?f.extent.xmin-m.extent.xmin:0),h=Math.min.apply(null,p.map(f=>f.extent.xmin)),i=Math.min.apply(null,p.map(f=>f.extent.ymin)),a=Math.max.apply(null,p.map(f=>f.extent.xmax)),u=Math.max.apply(null,p.map(f=>f.extent.ymax)),e={x:Math.round((o.xmin-h)/l),y:Math.round((u-o.ymax)/c)},n={width:Math.round((a-h)/l),height:Math.round((u-i)/c)},x={width:Math.round((o.xmax-o.xmin)/l),height:Math.round((o.ymax-o.ymin)/c)};return Math.round(n.width/t.pixelBlock.width)*Math.round(n.height/t.pixelBlock.height)!==p.length||e.x<0||e.y<0||n.width<x.width||n.height<x.height?null:{extent:o,pixelBlock:B(p.map(f=>f.pixelBlock),n,e,x)}}function U(s,o,t,l,c,r){const{width:p,height:h}=t.block,{x:i,y:a}=t.offset,{width:u,height:e}=t.mosaic,n=function(s,o,t,l,c,r,p,h){return{xmin:c<=t*s?0:c<t*s+s?c-t*s:s,ymin:r<=l*o?0:r<l*o+o?r-l*o:o,xmax:c+p<=t*s?0:c+p<t*s+s?c+p-t*s:s,ymax:r+h<=l*o?0:r+h<l*o+o?r+h-l*o:o}}(p,h,l,c,i,a,u,e);let x=0,f=0;if(r){const m=r.hasGCSSShiftTransform?360:r.halfWorldWidth,k=p*r.resolutionX,y=r.startX+l*k,w=y+k;y<m&&w>m?f=r.rightPadding:y>=m&&(x=r.leftMargin-r.rightPadding,f=0)}if(n.xmax-=f,"number"!=typeof o)for(let m=n.ymin;m<n.ymax;m++){const k=(c*h+m-a)*u+(l*p-i)+x,y=m*p;for(let w=n.xmin;w<n.xmax;w++)s[k+w]=o[y+w]}else for(let m=n.ymin;m<n.ymax;m++){const k=(c*h+m-a)*u+(l*p-i)+x;for(let y=n.xmin;y<n.xmax;y++)s[k+y]=o}}function B(s,o,t,l,c){const r=s.filter(A=>S(A))[0];if((0,W.Wi)(r))return null;const p=l?l.width:o.width,h=l?l.height:o.height,i=r.width,a=r.height,u=o.width/i,e=o.height/a,n={offset:t||{x:0,y:0},mosaic:l||o,block:{width:i,height:a}},x=r.pixelType,f=K.Z.getPixelArrayConstructor(x),m=r.pixels.length,k=[];let y,w,M;for(let A=0;A<m;A++){w=new f(p*h);for(let E=0;E<e;E++)for(let O=0;O<u;O++){const R=s[E*u+O];S(R)&&(y=R.pixels[A],U(w,y,n,O,E,c))}k.push(w)}if(s.some(A=>(0,W.Wi)(A)||A.mask&&A.mask.length>0)){M=new Uint8Array(p*h);for(let A=0;A<e;A++)for(let E=0;E<u;E++){const O=s[A*u+E];U(M,((0,W.pC)(O)?O.mask:null)||(O?1:0),n,E,A,c)}}const b=new K.Z({width:p,height:h,pixels:k,pixelType:x,mask:M});return b.updateStatistics(),b}function T(s,o,t){if(!S(s))return null;const{width:l,height:c}=s,r=o.x,p=o.y,h=t.width+r,i=t.height+p;if(r<0||p<0||h>l||i>c||0===r&&0===p&&h===l&&i===c)return s;s.mask||(s.mask=new Uint8Array(l*c));const a=s.mask;for(let u=0;u<c;u++){const e=u*l;for(let n=0;n<l;n++)a[e+n]=u<p||u>=i||n<r||n>=h?0:1}return s.updateStatistics(),s}function _(s){if(0===s.size)return 0;let o=0,t=-1,l=0;const c=s.keys();let r=c.next();for(;!r.done;)l=s.get(r.value),l>o&&(t=r.value,o=l),r=c.next();return t}function C(s,o,t){if(0===t)return;const l=s.get(o);1===l?s.delete(o):s.set(o,l-1)}function P(s,o,t){0!==t&&s.set(o,s.has(o)?s.get(o)+1:1)}function I(s,o,t){let{x:l,y:c}=o;const{width:r,height:p}=t;if(0===l&&0===c&&p===s.height&&r===s.width)return s;const{width:h,height:i}=s,a=Math.max(0,c),u=Math.max(0,l),e=Math.min(l+r,h),n=Math.min(c+p,i);if(e<0||n<0||!S(s))return null;l=Math.max(0,-l),c=Math.max(0,-c);const{pixels:x,mask:f}=s,m=r*p,k=x.length,y=[];for(let b=0;b<k;b++){const A=x[b],E=K.Z.createEmptyBand(s.pixelType,m);for(let O=a;O<n;O++){const R=O*h;let nt=(O+c-a)*r+l;for(let H=u;H<e;H++)E[nt++]=A[R+H]}y.push(E)}const w=new Uint8Array(m);for(let b=a;b<n;b++){const A=b*h;let E=(b+c-a)*r+l;for(let O=u;O<e;O++)w[E++]=f?f[A+O]:1}const M=new K.Z({width:t.width,height:t.height,pixelType:s.pixelType,pixels:y,mask:w});return M.updateStatistics(),M}function Z(s,o=!0){if(!S(s))return null;const{pixels:t,width:l,height:c,mask:r,pixelType:p}=s,h=[],i=Math.round(l/2),a=Math.round(c/2),u=c-1,e=l-1;for(let x=0;x<t.length;x++){const f=t[x],m=K.Z.createEmptyBand(p,i*a);let k=0;for(let y=0;y<c;y+=2)for(let w=0;w<l;w+=2){const M=f[y*l+w];if(o){const b=w===e?M:f[y*l+w+1],A=y===u?M:f[y*l+w+l];m[k++]=(M+b+A+(w===e?A:y===u?b:f[y*l+w+l+1]))/4}else m[k++]=M}h.push(m)}let n=null;if(r){n=new Uint8Array(i*a);let x=0;for(let f=0;f<c;f+=2)for(let m=0;m<l;m+=2){const k=r[f*l+m];if(o){const y=m===e?k:r[f*l+m+1],w=f===u?k:r[f*l+m+l];n[x++]=k*y*w*(m===e?w:f===u?y:r[f*l+m+l+1])?1:0}else n[x++]=k}}return new K.Z({width:i,height:a,pixelType:p,pixels:h,mask:n})}function X(s,o,t){if(!S(s))return null;const{width:l,height:c}=o;let{width:r,height:p}=s;const h=new Map,i={x:0,y:0},a=null==t?1:1+t;let u=s;for(let e=0;e<a;e++){const n=Math.ceil(r/l),x=Math.ceil(p/c);for(let f=0;f<x;f++){i.y=f*c;for(let m=0;m<n;m++){i.x=m*l;const k=I(u,i,o);h.set(`${e}/${f}/${m}`,k)}}e<a-1&&(u=Z(u)),r=Math.round(r/2),p=Math.round(p/2)}return h}function z(s,o,t,l,c="nearest"){if(!S(s))return null;"majority"===c&&(s=function(s){if(!S(s))return null;const o=s.clone(),{width:t,height:l,pixels:c,mask:r}=s,p=c[0],h=o.pixels[0];for(let i=2;i<l-1;i++){const a=new Map;for(let e=i-2;e<i+2;e++)for(let n=0;n<4;n++){const x=e*t+n;P(a,p[x],r?r[x]:1)}h[i*t]=_(a),h[i*t+1]=h[i*t+2]=h[i*t];let u=3;for(;u<t-1;u++){let e=(i-2)*t+u+1;P(a,p[e],r?r[e]:1),e=(i-1)*t+u+1,P(a,p[e],r?r[e]:1),e=i*t+u+1,P(a,p[e],r?r[e]:1),e=(i+1)*t+u+1,P(a,p[e],r?r[e]:1),e=(i-2)*t+u-3,C(a,p[e],r?r[e]:1),e=(i-1)*t+u-3,C(a,p[e],r?r[e]:1),e=i*t+u-3,C(a,p[e],r?r[e]:1),e=(i+1)*t+u-3,C(a,p[e],r?r[e]:1),h[i*t+u]=_(a)}h[i*t+u+1]=h[i*t+u]}for(let i=0;i<t;i++)h[i]=h[t+i]=h[2*t+i],h[(l-1)*t+i]=h[(l-2)*t+i];return o.updateStatistics(),o}(s));const{pixels:r,mask:p,pixelType:h}=s,i=s.width,a=s.height,u=K.Z.getPixelArrayConstructor(h),e=r.length,{width:n,height:x}=o,f=l.cols,m=l.rows,k=Math.ceil(n/f-.1/f),y=Math.ceil(x/m-.1/m);let w,M,b,A,E,O,R,nt=!1;for(let D=0;D<t.length;D+=3)-1===t[D]&&-1===t[D+1]&&-1===t[D+2]&&(nt=!0);const H=k*f,mt=H*y*m,it=new Float32Array(mt),st=new Float32Array(mt);let Y,q,tt=0;const lt="majority"===c?0:.5;for(let D=0;D<y;D++)for(let Q=0;Q<k;Q++){w=12*(D*k+Q),M=t[w],b=t[w+1],A=t[w+2],E=t[w+3],O=t[w+4],R=t[w+5];for(let j=0;j<m;j++){tt=(D*m+j)*H+Q*f,q=(j+.5)/m;for(let F=0;F<j;F++)Y=(F+.5)/f,it[tt+F]=Math.round((M*Y+b*q+A)*i-lt),st[tt+F]=Math.round((E*Y+O*q+R)*a-lt)}w+=6,M=t[w],b=t[w+1],A=t[w+2],E=t[w+3],O=t[w+4],R=t[w+5];for(let j=0;j<m;j++){tt=(D*m+j)*H+Q*f,q=(j+.5)/m;for(let F=j;F<f;F++)Y=(F+.5)/f,it[tt+F]=Math.round((M*Y+b*q+A)*i-lt),st[tt+F]=Math.round((E*Y+O*q+R)*a-lt)}}const dt=(D,Q)=>{for(let j=0;j<x;j++){w=j*H;for(let F=0;F<n;F++)D[j*n+F]=it[w]<0||st[w]<0?0:Q[it[w]+st[w]*i],w++}},gt=[];let xt;for(let D=0;D<e;D++)xt=new u(n*x),dt(xt,r[D]),gt.push(xt);const et=new K.Z({width:n,height:x,pixelType:h,pixels:gt});if(p)et.mask=new Uint8Array(n*x),dt(et.mask,p);else if(nt){et.mask=new Uint8Array(n*x);for(let D=0;D<n*x;D++)et.mask[D]=it[D]<0||st[D]<0?0:1}return et.updateStatistics(),et}}}]);