"use strict";var mr=Object.defineProperty,yr=Object.defineProperties,hr=Object.getOwnPropertyDescriptors,ct=Object.getOwnPropertySymbols,fr=Object.prototype.hasOwnProperty,gr=Object.prototype.propertyIsEnumerable,dt=($,V,c)=>V in $?mr($,V,{enumerable:!0,configurable:!0,writable:!0,value:c}):$[V]=c,R=($,V)=>{for(var c in V||(V={}))fr.call(V,c)&&dt($,c,V[c]);if(ct)for(var c of ct(V))gr.call(V,c)&&dt($,c,V[c]);return $},G=($,V)=>yr($,hr(V));(self.webpackChunkdashboard=self.webpackChunkdashboard||[]).push([[6136],{76136:($,V,c)=>{c.r(V),c.d(V,{default:()=>dr});var Ne,o=c(60046),mt=c(38886),C=c(60305),yt=c(71781),We=c(12523),u=c(9077),K=(c(67474),c(57025)),ht=c(33870),W=c(42442),O=c(43190),ft=c(21611),N=c(61921),qe=c(73513),gt=c(83459),Ce=c(12596),T=c(40662),E=c(22795),Ie=c(9836),_=c(85071),vt=c(89225),U=c(63031),P=c(67424),he=c(99737),we=c(55851),te=c(54792),Rt=c(13637);const fe=new Set(["raster","raster2","dem","fillraster"]),ge=new Set(["rasters"]),Xe=i=>i&&i.rasterFunction?M.fromJSON(i):i,Te=i=>i&&i instanceof M?i.toJSON():i,Oe=i=>(null==i?void 0:i.functionName)&&!i.declaredClass,Ye=i=>Oe(i)?new M(i):i;var ve,i;(i=ve||(ve={}))[i.MOSAIC=0]="MOSAIC",i[i.GROUP=1]="GROUP",i[i.ITEM=2]="ITEM";let M=Ne=class extends te.wq{constructor(i){super(i),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(i){if(i){const n=Object.keys(i);if(n.some(e=>fe.has(e.toLowerCase())&&Oe(i[e]))||n.some(e=>ge.has(e.toLowerCase())&&Array.isArray(i[e])&&i[e].some(t=>Oe(t)))){i=(0,_.d9)(i);for(const e of n)fe.has(e.toLowerCase())?i[e]=Ye(i[e]):ge.has(e.toLowerCase())&&Array.isArray(i[e])&&(i[e]=i[e].map(t=>Ye(t)))}}this._set("functionArguments",i)}readFunctionArguments(i,n){return(i=>{if(null==i)return null;i=(0,_.d9)(i);const n={};for(const e of Object.keys(i))n[e]=fe.has(e.toLowerCase())?Xe(i[e]):ge.has(e.toLowerCase())&&Array.isArray(i[e])?i[e].map(Xe):i[e];return n})(n.arguments||n.rasterFunctionArguments)}writeFunctionArguments(i,n,e){const t={};for(const r of Object.keys(i))t[r]=fe.has(r.toLowerCase())?Te(i[r]):ge.has(r.toLowerCase())&&Array.isArray(i[r])?i[r].map(Te):Te(i[r]);this.functionDefinition?n.arguments=t:n[e]=t}readFunctionName(i,n){const e=n.rasterFunctionInfos;return n.name||(e&&e.length&&"None"!==e[0].name?e[0].name:n.rasterFunction)}writeFunctionName(i,n,e){this.functionDefinition?n.name=i:n[e]=i}readFunctionType(i){return ve[i]}writeFunctionType(i,n,e){n[e]=ve[i]}clone(){return new Ne({functionName:this.functionName,functionArguments:(0,_.d9)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};(0,o._)([(0,u.Cb)({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],M.prototype,"functionArguments",null),(0,o._)([(0,P.r)("functionArguments",["rasterFunctionArguments","arguments"])],M.prototype,"readFunctionArguments",null),(0,o._)([(0,O.c)("functionArguments")],M.prototype,"writeFunctionArguments",null),(0,o._)([(0,u.Cb)({json:{type:String,write:{target:"rasterFunction"}}})],M.prototype,"functionName",void 0),(0,o._)([(0,P.r)("functionName",["rasterFunction","rasterFunctionInfos","name"])],M.prototype,"readFunctionName",null),(0,o._)([(0,O.c)("functionName")],M.prototype,"writeFunctionName",null),(0,o._)([(0,Rt.J)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,u.Cb)({json:{default:"unknown"}})],M.prototype,"outputPixelType",void 0),(0,o._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],M.prototype,"variableName",void 0),(0,o._)([(0,u.Cb)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],M.prototype,"description",void 0),(0,o._)([(0,u.Cb)({json:{origins:{"web-document":{read:!1,write:!1}}}})],M.prototype,"functionType",void 0),(0,o._)([(0,P.r)("functionType")],M.prototype,"readFunctionType",null),(0,o._)([(0,O.c)("functionType")],M.prototype,"writeFunctionType",null),(0,o._)([(0,u.Cb)({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],M.prototype,"functionDefinition",void 0),(0,o._)([(0,u.Cb)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],M.prototype,"thumbnail",void 0),M=Ne=(0,o._)([(0,W.j)("esri.layers.support.RasterFunction")],M);var D=M,Fe=c(2512),St=c(62906),xt=c(33036);const Ct={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},It={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},wt=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function $e(i){return wt.has(i.type)}function Ke(i,n){if(!i||!n)return(0,_.d9)(i||n);const e=(0,_.d9)(i);return"none"!==n.functionName.toLowerCase()&&(ke(e.functionArguments).Raster=n),e}function ke(i){const n=i.Raster;return n&&"esri.layers.support.RasterFunction"===n.declaredClass?ke(n.functionArguments):i}const ue={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Re(i,n){const e=Ct[String(n).toLowerCase()];return e&&i.push([Math.floor(e[0]-1),0,0,0],[Math.ceil(e[1]+1),0,0,0]),i}function et(i){if(!i)return;const{fields:n}=i,e=n&&n.find(t=>t&&t.name&&"value"===t.name.toLowerCase());return e&&e.name}function Dt(i){const n=[];return i.forEach(e=>{const t=e;if(Array.isArray(t))n.push(t);else{if(null==t.min||null==t.max)return;n.push([t.min,t.max,t.avg||0,t.stddev||0])}}),n}var Pe,At=c(59559),ie=c(27640);const pe=(0,Ie.wY)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),je=(0,Ie.wY)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let J=Pe=class extends te.wq{constructor(i){super(i),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(i,n){return null!=n.ascending?n.ascending:null==n.sortAscending||n.sortAscending}readMethod(i,n){return function(i){let n;switch(i?i.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":n="esriMosaicAttribute";break;case"lockraster":n="esriMosaicLockRaster";break;case"center":n="esriMosaicCenter";break;case"northwest":n="esriMosaicNorthwest";break;case"nadir":n="esriMosaicNadir";break;case"viewpoint":n="esriMosaicViewpoint";break;case"seamline":n="esriMosaicSeamline";break;default:n="esriMosaicNone"}return je.fromJSON(n)}(n.mosaicMethod||n.defaultMosaicMethod)}readOperation(i,n){const e=n.mosaicOperation,t=n.mosaicOperator&&n.mosaicOperator.toLowerCase(),r=e||(t?pe.toJSON(t):null);return pe.fromJSON(r)||"first"}castSortValue(i){return null==i||"string"==typeof i||"number"==typeof i?i:`${i}`}clone(){return new Pe({ascending:this.ascending,itemRenderingRule:(0,_.d9)(this.itemRenderingRule),lockRasterIds:(0,_.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,_.d9)(this.multidimensionalDefinition),objectIds:(0,_.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,_.d9)(this.viewpoint),where:this.where})}};(0,o._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],J.prototype,"ascending",void 0),(0,o._)([(0,P.r)("ascending",["ascending","sortAscending"])],J.prototype,"readAscending",null),(0,o._)([(0,u.Cb)({type:D,json:{write:!0}})],J.prototype,"itemRenderingRule",void 0),(0,o._)([(0,u.Cb)({type:[K.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],J.prototype,"lockRasterIds",void 0),(0,o._)([(0,u.Cb)({type:String,json:{type:je.jsonValues,write:{target:"mosaicMethod",writer:je.write}}})],J.prototype,"method",void 0),(0,o._)([(0,P.r)("method",["mosaicMethod","defaultMosaicMethod"])],J.prototype,"readMethod",null),(0,o._)([(0,u.Cb)({type:[we.Z],json:{write:!0}})],J.prototype,"multidimensionalDefinition",void 0),(0,o._)([(0,u.Cb)({type:[K.z8],json:{name:"fids",write:!0}})],J.prototype,"objectIds",void 0),(0,o._)([(0,u.Cb)({json:{type:pe.jsonValues,read:{reader:pe.read},write:{target:"mosaicOperation",writer:pe.write}}})],J.prototype,"operation",void 0),(0,o._)([(0,P.r)("operation",["mosaicOperation","mosaicOperator"])],J.prototype,"readOperation",null),(0,o._)([(0,u.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],J.prototype,"sortField",void 0),(0,o._)([(0,u.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],J.prototype,"sortValue",void 0),(0,o._)([(0,At.p)("sortValue")],J.prototype,"castSortValue",null),(0,o._)([(0,u.Cb)({type:ie.Z,json:{write:!0}})],J.prototype,"viewpoint",void 0),(0,o._)([(0,u.Cb)({type:String,json:{write:!0}})],J.prototype,"where",void 0),J=Pe=(0,o._)([(0,W.j)("esri.layers.support.MosaicRule")],J);var Q=J,Z=c(47377);let F=class extends te.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(i,n,e){this.layer.version<10.3||(n[e]=i)}writeCompressionQuality(i,n,e){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=i&&(n[e]=i)}writeCompressionTolerance(i,n,e){"lerc"===this.format&&null!=i&&(n[e]=i)}writeLercVersion(i,n,e){"lerc"===this.format&&this.layer.version>=10.5&&(n[e]=i)}get version(){const i=this.layer;return i.commitProperty("bandIds"),i.commitProperty("format"),i.commitProperty("compressionQuality"),i.commitProperty("compressionTolerance"),i.commitProperty("interpolation"),i.commitProperty("noData"),i.commitProperty("noDataInterpretation"),i.commitProperty("mosaicRule"),i.commitProperty("renderingRule"),i.commitProperty("adjustAspectRatio"),i.commitProperty("pixelFilter"),i.commitProperty("renderer"),i.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(i){this._set("version",i)}get mosaicRule(){const i=this.layer;let n=i.mosaicRule;const e=i.definitionExpression;return n?e&&e!==n.where&&(n=n.clone(),n.where=e):e&&(n=new Q({where:e})),n}get renderingRule(){const i=this.layer;let n=i.renderingRule;const e=i.pixelFilter,t=!i.format||i.format.indexOf("jpg")>-1||i.format.indexOf("png")>-1;return n=this._addResampleRasterFunction(n),t&&!e&&(n=this.combineRendererWithRenderingRule()),n}combineRendererWithRenderingRule(){var i;const n=this.layer,{rasterInfo:e,renderingRule:t,renderer:r}=n;return r&&$e(r)?Ke(function(i,n){switch(n=n||{},i.type){case"raster-stretch":return function(i,n){const e=new D;e.functionName="Stretch";const t=ue[St.v.toJSON(i.stretchType)],r="u8",s={StretchType:t,Statistics:Dt(i.statistics),DRA:i.dynamicRangeAdjustment,UseGamma:i.useGamma,Gamma:i.gamma,ComputeGamma:i.computeGamma};if(null!=i.outputMin&&(s.Min=i.outputMin),null!=i.outputMax&&(s.Max=i.outputMax),t===ue.standardDeviation?(s.NumberOfStandardDeviations=i.numberOfStandardDeviations,e.outputPixelType=r):t===ue.percentClip?(s.MinPercent=i.minPercent,s.MaxPercent=i.maxPercent,e.outputPixelType=r):t===ue.minMax?e.outputPixelType=r:t===ue.sigmoid&&(s.SigmoidStrengthLevel=i.sigmoidStrengthLevel),e.functionArguments=s,e.variableName="Raster",i.colorRamp){const l=i.colorRamp,a=new D,p=(0,Fe.Uh)(l);return a.functionArguments=p?{colorRamp:p}:!n.convertColorRampToColormap||"algorithmic"!==l.type&&"multipart"!==l.type?{colorRamp:i.colorRamp.toJSON()}:{Colormap:(0,Fe.Jw)(l,256)},a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=e,a}return e}(i,n);case"class-breaks":return function(i,n){const e=[],t=[],r=[],s=[],l=1e-6,{pixelType:a,rasterAttributeTable:p}=n,d=p&&p.features,m=et(p);if(d&&Array.isArray(d)&&i.classBreakInfos){i.classBreakInfos.forEach((h,w)=>{const A=h.symbol.color;let I;A.a&&d.forEach(S=>{I=S.attributes[i.field],(I>=h.minValue&&I<h.maxValue||w===i.classBreakInfos.length-1&&I>=h.minValue)&&s.push([S.attributes[m],A.r,A.g,A.b])})});const g=a?Re(s,a):s,b=new D;return b.functionName="Colormap",b.functionArguments={},b.functionArguments.Colormap=g,b.variableName="Raster",b}i.classBreakInfos.forEach((g,b)=>{const h=g.symbol&&g.symbol.color;h.a?(e.push(0===b?g.minValue:g.minValue+l,g.maxValue+l),t.push(b),s.push([b,h.r,h.g,h.b])):r.push(g.minValue,g.maxValue)});const y=a?Re(s,a):s,f=new D;f.functionName="Remap",f.functionArguments={InputRanges:e,OutputValues:t,NoDataRanges:r},f.variableName="Raster";const v=new D;return v.functionName="Colormap",v.functionArguments={Colormap:y,Raster:f},v}(i,n);case"unique-value":return function(i,n){var e;const t=[],{pixelType:r,rasterAttributeTable:s}=n,l=s&&s.features,a=et(s),p=null==(e=i.defaultSymbol)?void 0:e.color;let d=!1;if(i.uniqueValueInfos&&(l?l.forEach(f=>{var v;const g=null==(v=i.uniqueValueInfos.find(b=>String(f.attributes[i.field])===String(b.value)))?void 0:v.symbol.color;g?t.push([f.attributes[a],g.r,g.g,g.b]):p&&t.push([f.attributes[a],p.r,p.g,p.b])}):i.uniqueValueInfos.forEach(f=>{var v;if(null==(v=f.symbol.color)||!v.a)return;const g=f.symbol.color;isNaN(+f.value)?d=!0:t.push([+f.value,g.r,g.g,g.b])})),d)return null;const m=r&&t.length>0?Re(t,r):t,y=new D;return y.functionName="Colormap",y.functionArguments={},y.functionArguments.Colormap=m,y.variableName="Raster",y}(i,n);case"raster-colormap":return function(i,n){const e=i.extractColormap();if(!e||0===e.length)return;const{pixelType:t}=n,r=t?Re(e,t):e,s=new D;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=r,s}(i,n);case"vector-field":return function(i,n){const e=new D;e.functionName="VectorFieldRenderer";const{dataType:t,bandProperties:r}=n,s="vector-uv"===t;let l,a;r&&2===r.length&&(l=r.map(f=>f.BandName.toLowerCase()).indexOf("magnitude"),a=r.map(f=>f.BandName.toLowerCase()).indexOf("direction")),-1!==l&&null!==l||(l=0,a=1);const p="arithmetic"===i.rotationType?1:2,d="flow-from"===i.flowRepresentation?0:1,m=i.visualVariables?i.visualVariables.filter(f=>"Magnitude"===f.field)[0]:new xt.Z,y={magnitudeBandID:l,directionBandID:a,isUVComponents:s,referenceSystem:p,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:It[i.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};return e.functionArguments=y,e}(i,n);case"raster-shaded-relief":return function(i,n){if("elevation"!==n.dataType)return new D;const e=new D;e.functionName="Hillshade";const t="traditional"===i.hillshadeType?0:1,r="none"===i.scalingType?1:3,s={HillshadeType:t,SlopeType:r,ZFactor:i.zFactor};return 0===t&&(s.Azimuth=i.azimuth,s.Altitude=i.altitude),3===r&&(s.PSPower=i.pixelSizePower,s.PSZFactor=i.pixelSizeFactor),e.functionArguments=s,e.variableName="Raster",i.colorRamp&&(e.functionName="ShadedRelief",s.Colormap=(0,Fe.Jw)(i.colorRamp,256)),e}(i,n)}}(r,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandProperties:null==(i=e.keyProperties)?void 0:i.BandProperties,convertColorRampToColormap:n.version<10.6}),t):t}_addResampleRasterFunction(i){var n;return"vector-field"!==(null==(n=this.layer.renderer)?void 0:n.type)||"Resample"===(null==i?void 0:i.functionName)?i:Ke(new D({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}),i)}};(0,o._)([(0,u.Cb)()],F.prototype,"layer",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],F.prototype,"adjustAspectRatio",void 0),(0,o._)([(0,O.c)("adjustAspectRatio")],F.prototype,"writeAdjustAspectRatio",null),(0,o._)([(0,u.Cb)({json:{write:!0}}),(0,U.B)("layer.bandIds")],F.prototype,"bandIds",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],F.prototype,"compression",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}}),(0,U.B)("layer.compressionQuality")],F.prototype,"compressionQuality",void 0),(0,o._)([(0,O.c)("compressionQuality")],F.prototype,"writeCompressionQuality",null),(0,o._)([(0,u.Cb)({json:{write:!0}}),(0,U.B)("layer.compressionTolerance")],F.prototype,"compressionTolerance",void 0),(0,o._)([(0,O.c)("compressionTolerance")],F.prototype,"writeCompressionTolerance",null),(0,o._)([(0,u.Cb)({json:{write:!0}}),(0,U.B)("layer.format")],F.prototype,"format",void 0),(0,o._)([(0,u.Cb)({type:String,json:{read:{reader:Z.c.read},write:{writer:Z.c.write}}}),(0,U.B)("layer.interpolation")],F.prototype,"interpolation",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}}),(0,U.B)("layer.noData")],F.prototype,"noData",void 0),(0,o._)([(0,u.Cb)({type:String,json:{read:{reader:Z.k.read},write:{writer:Z.k.write}}}),(0,U.B)("layer.noDataInterpretation")],F.prototype,"noDataInterpretation",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],F.prototype,"pixelType",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],F.prototype,"lercVersion",void 0),(0,o._)([(0,O.c)("lercVersion")],F.prototype,"writeLercVersion",null),(0,o._)([(0,u.Cb)({type:Number})],F.prototype,"version",null),(0,o._)([(0,u.Cb)({json:{write:!0}})],F.prototype,"mosaicRule",null),(0,o._)([(0,u.Cb)({json:{write:!0}})],F.prototype,"renderingRule",null),F=(0,o._)([(0,W.j)("esri.layers.mixins.ExportImageServiceParameters")],F);var se=c(12656),Vt=c(25808),_t=c(82657),Me=c(38973),zt=c(48524),De=c(25465),Et=c(6200),be=c(61897),Zt=c(61661),Ae=c(62354),q=c(38953),Je=c(51201);let X=class extends te.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,o._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"catalogItemVisibilities",void 0),(0,o._)([(0,u.Cb)({type:Je.default,json:{write:!0}})],X.prototype,"catalogItems",void 0),(0,o._)([(0,u.Cb)({type:ie.Z,json:{write:!0}})],X.prototype,"location",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"name",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"objectId",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"processedValues",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"properties",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"value",void 0),X=(0,o._)([(0,W.j)("esri.rest.support.ImageIdentifyResult")],X);var Lt=X;let re=class extends te.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,o._)([(0,u.Cb)({json:{write:!0}})],re.prototype,"attributes",void 0),(0,o._)([(0,u.Cb)({type:ie.Z,json:{write:!0}})],re.prototype,"location",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],re.prototype,"locationId",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],re.prototype,"rasterId",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],re.prototype,"resolution",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],re.prototype,"pixelValue",void 0),re=(0,o._)([(0,W.j)("esri.rest.support.ImageSample")],re);var Ut=re;let Se=class extends te.wq{constructor(){super(...arguments),this.samples=null}};(0,o._)([(0,u.Cb)({type:[Ut],json:{write:!0}})],Se.prototype,"samples",void 0),Se=(0,o._)([(0,W.j)("esri.rest.support.ImageSampleResult")],Se);var Qt=Se;function tt(i){const n=null==i?void 0:i.time;if(n&&(null!=n.start||null!=n.end)){const e=[];null!=n.start&&e.push(n.start),null!=n.end&&-1===e.indexOf(n.end)&&e.push(n.end),i.time=e.join(",")}}function rt(i,n,e){return Ve.apply(this,arguments)}function Ve(){return Ve=(0,N.Z)(function*(i,n,e){const t=(0,q.en)(i),r=n.geometry?[n.geometry]:[],s=yield(0,Ae.aX)(r),l=n.toJSON();tt(l);const a=s&&s[0];(0,C.pC)(a)&&(l.geometry=a.toJSON());const p=(0,q.cv)(R(G(R({},t.query),{f:"json"}),l));return(0,q.lA)(p,e)}),Ve.apply(this,arguments)}function _e(){return _e=(0,N.Z)(function*(i,n,e){const t=yield rt(i,n,e),r=(0,q.en)(i),{data:s}=yield(0,T.default)(`${r.path}/computeStatisticsHistograms`,t),{statistics:l}=s;return null!=l&&l.length&&l.forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),{statistics:l,histograms:s.histograms}}),_e.apply(this,arguments)}function ze(){return ze=(0,N.Z)(function*(i,n,e){const t=yield rt(i,n,e),r=(0,q.en)(i),{data:s}=yield(0,T.default)(`${r.path}/computeHistograms`,t);return{histograms:s.histograms}}),ze.apply(this,arguments)}function Ee(){return Ee=(0,N.Z)(function*(i,n,e){var t,r;const s=n.toJSON();tt(s),null!=(t=s.outFields)&&t.length&&(s.outFields=s.outFields.join(","));const l=yield(0,Ae.aX)(n.geometry),a=null==l?void 0:l[0];(0,C.pC)(a)&&(s.geometry=a.toJSON());const p=(0,q.en)(i),d=(0,q.cv)(R(G(R({},p.query),{f:"json"}),s)),m=(0,q.lA)(d,e),{data:y}=yield(0,T.default)(`${p.path}/getSamples`,m),f=null==y||null==(r=y.samples)?void 0:r.map(v=>{const g="NaN"===v.value||""===v.value?null:v.value.split(" ").map(b=>Number(b));return G(R({},v),{pixelValue:g})});return Qt.fromJSON({samples:f})}),Ee.apply(this,arguments)}function it(i,n,e){return Ze.apply(this,arguments)}function Ze(){return Ze=(0,N.Z)(function*(i,n,e){const t=(0,q.en)(i);return(0,Ae.aX)(n.geometry?[n.geometry]:[]).then(s=>{const l=n.toJSON(),a=s&&s[0];(0,C.pC)(a)&&(l.geometry=JSON.stringify(a.toJSON()));const p=(0,q.cv)(R(G(R({},t.query),{f:"json"}),l)),d=(0,q.lA)(p,e);return(0,T.default)(t.path+"/identify",d)}).then(s=>Lt.fromJSON(s.data))}),Ze.apply(this,arguments)}c(57711),c(42105),c(68305);var Qe,Wt=c(27786),ce=c(82059),qt=(c(40485),c(99388)),Xt=c(70393),Le=(c(27876),c(88215),c(4820),c(89096),c(57006)),Yt=c(47056),$t=c(21843),Ue=(c(90097),c(36365),c(1884),c(78053)),de=c(52917);let k=Qe=class extends te.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(i,n,e){null!=i&&(n.geometryType=(0,de.Ji)(i),n[e]=i.toJSON())}clone(){return new Qe((0,_.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,o._)([(0,u.Cb)({types:qe.qM,json:{read:de.im}})],k.prototype,"geometry",void 0),(0,o._)([(0,O.c)("geometry")],k.prototype,"writeGeometry",null),(0,o._)([(0,u.Cb)({type:Q,json:{write:!0}})],k.prototype,"mosaicRule",void 0),(0,o._)([(0,u.Cb)({type:D,json:{write:!0}})],k.prototype,"renderingRule",void 0),(0,o._)([(0,u.Cb)({type:ie.Z,json:{write:!0}})],k.prototype,"pixelSize",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],k.prototype,"raster",void 0),(0,o._)([(0,u.Cb)({type:Ue.Z,json:{read:{source:"time"},write:{target:"time"}}})],k.prototype,"timeExtent",void 0),k=Qe=(0,o._)([(0,W.j)("esri.rest.support.ImageHistogramParameters")],k);var Be,nt=k;let j=Be=class extends te.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(i,n,e){null!=i&&(n.geometryType=(0,de.Ji)(i),n[e]=JSON.stringify(i.toJSON()))}set mosaicRule(i){let n=i;n&&n.mosaicMethod&&(n=Q.fromJSON(G(R({},n.toJSON()),{mosaicMethod:n.mosaicMethod,mosaicOperation:n.mosaicOperation}))),this._set("mosaicRule",n)}writeMosaicRule(i,n,e){null!=i&&(n[e]=JSON.stringify(i.toJSON()))}set renderingRule(i){let n=i;n&&n.rasterFunction&&(n=D.fromJSON(G(R({},n.toJSON()),{rasterFunction:n.rasterFunction,rasterFunctionArguments:n.rasterFunctionArguments}))),this._set("renderingRule",n)}writeRenderingRule(i,n,e){null!=i&&(n[e]=JSON.stringify(i.toJSON()))}writeRenderingRules(i,n,e){null!=i&&(n[e]=JSON.stringify(i.map(t=>t.toJSON())))}writePixelSize(i,n,e){null!=i&&(n[e]=JSON.stringify(i))}writeTimeExtent(i,n,e){if(null!=i){const t=(0,C.pC)(i.start)?i.start.getTime():null,r=(0,C.pC)(i.end)?i.end.getTime():null;n[e]=null!=t?null!=r?`${t},${r}`:`${t}`:null}}clone(){return new Be((0,_.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,o._)([(0,u.Cb)({json:{write:!0}})],j.prototype,"geometry",void 0),(0,o._)([(0,O.c)("geometry")],j.prototype,"writeGeometry",null),(0,o._)([(0,u.Cb)({type:Q,json:{write:!0}})],j.prototype,"mosaicRule",null),(0,o._)([(0,O.c)("mosaicRule")],j.prototype,"writeMosaicRule",null),(0,o._)([(0,u.Cb)({type:D,json:{write:!0}})],j.prototype,"renderingRule",null),(0,o._)([(0,O.c)("renderingRule")],j.prototype,"writeRenderingRule",null),(0,o._)([(0,u.Cb)({type:[D],json:{write:!0}})],j.prototype,"renderingRules",void 0),(0,o._)([(0,O.c)("renderingRules")],j.prototype,"writeRenderingRules",null),(0,o._)([(0,u.Cb)({type:ie.Z,json:{write:!0}})],j.prototype,"pixelSize",void 0),(0,o._)([(0,O.c)("pixelSize")],j.prototype,"writePixelSize",null),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"returnGeometry",void 0),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"returnCatalogItems",void 0),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"returnPixelValues",void 0),(0,o._)([(0,u.Cb)({type:Number,json:{write:!0}})],j.prototype,"maxItemCount",void 0),(0,o._)([(0,u.Cb)({type:Ue.Z,json:{write:{target:"time"}}})],j.prototype,"timeExtent",void 0),(0,o._)([(0,O.c)("timeExtent")],j.prototype,"writeTimeExtent",null),(0,o._)([(0,u.Cb)({json:{write:!0}})],j.prototype,"raster",void 0),(0,o._)([(0,u.Cb)({json:{write:!0}})],j.prototype,"viewId",void 0),j=Be=(0,o._)([(0,W.j)("esri.rest.support.ImageIdentifyParameters")],j);var He,st=j;let z=He=class extends te.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(i,n,e){null!=i&&(n.geometryType=(0,de.Ji)(i),n[e]=i.toJSON())}set locations(i){if(null!=i&&i.length){const n=new qt.Z({spatialReference:i[0].spatialReference});n.points=i.map(e=>[e.x,e.y]),this._set("locations",i),this.geometry=n}}clone(){return new He((0,_.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,o._)([(0,u.Cb)({types:qe.qM,json:{read:de.im}})],z.prototype,"geometry",void 0),(0,o._)([(0,O.c)("geometry")],z.prototype,"writeGeometry",null),(0,o._)([(0,u.Cb)({type:String,json:{type:Z.c.jsonValues,read:Z.c.read,write:Z.c.write}})],z.prototype,"interpolation",void 0),(0,o._)([(0,u.Cb)({type:Q,json:{write:!0}})],z.prototype,"mosaicRule",void 0),(0,o._)([(0,u.Cb)({type:[String],json:{write:!0}})],z.prototype,"outFields",void 0),(0,o._)([(0,u.Cb)({type:ie.Z,json:{write:!0}})],z.prototype,"pixelSize",void 0),(0,o._)([(0,u.Cb)({type:String,json:{write:!0}})],z.prototype,"raster",void 0),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],z.prototype,"returnFirstValueOnly",void 0),(0,o._)([(0,u.Cb)({type:Number,json:{write:!0}})],z.prototype,"sampleDistance",void 0),(0,o._)([(0,u.Cb)({type:Number,json:{write:!0}})],z.prototype,"sampleCount",void 0),(0,o._)([(0,u.Cb)({type:Number,json:{write:!0}})],z.prototype,"sliceId",void 0),(0,o._)([(0,u.Cb)({type:Ue.Z,json:{read:{source:"time"},write:{target:"time"}}})],z.prototype,"timeExtent",void 0),z=He=(0,o._)([(0,W.j)("esri.rest.support.ImageSampleParameters")],z);var Kt=z,xe=c(56703);const ot=ht.Z.getLogger("esri.layers.mixins.ArcGISImageService"),Ge=(0,Ie.wY)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),kt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),er=(0,u.Eg)(K.q9,{min:0,max:255}),rr=i=>{let n=class extends i{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new F({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?Q.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(r=>"number"==typeof r))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new Vt.Z(this.fields):null}set format(e){e&&kt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=Q.fromJSON(G(R({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?Q.fromJSON(r):this._isMosaicRuleSupported(t)?Q.fromJSON(t):null}writeMosaicRule(e,t,r){let s=this.mosaicRule;const l=this.definitionExpression;s?l&&l!==s.where&&(s=s.clone(),s.where=l):l&&(s=new Q({where:l})),this._isValidCustomizedMosaicRule(s)&&(t[r]=s.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=er(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(s=>"esriFieldTypeOID"===s.type||"oid"===s.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,vt.mN)(this.url):null}readRenderer(e,t,r){var s,l;const a=null==t||null==(s=t.layerDefinition)||null==(l=s.drawingInfo)?void 0:l.renderer,p=(0,Ce.ij)(a,r);return null==p?null:("vector-field"===p.type&&t.symbolTileSize&&!a.symbolTileSize&&(p.symbolTileSize=t.symbolTileSize),$e(p)||ot.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),p)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new se.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new se.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new se.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let l=this.fields?(0,_.d9)(this.fields):[];l.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&l.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(p=>"none"===p.name.toLowerCase())&&l.push(s),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(p=>"none"!==p.name.toLowerCase()).forEach(p=>{l.push(new se.Z({name:"Raster.ServicePixelValue."+p.name,alias:p.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(l.push(new se.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),l.push(new se.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){const p=a.filter(d=>"esriFieldTypeOID"!==d.type&&"value"!==d.name.toLowerCase()).map(d=>{const m=(0,_.d9)(d);return m.name=e+d.name,m});l=l.concat(p)}return l}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=D.fromJSON(G(R({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?D.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?xe.Z.fromJSON(r):null}readPixelType(e){return Ge.fromJSON(e)||e}writePixelType(e,t,r){((0,C.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Ge.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){var r=this;return(0,N.Z)(function*(){let s=e;if(!r._isPicture()&&r.renderer&&r._symbolizer&&!r.pixelFilter){const l=JSON.stringify(r._cachedRendererJson)!==JSON.stringify(r.renderer.toJSON()),a=r._rasterJobHandler.instance,{bandIds:p}=r;if(a){l&&(r._symbolizer.bind(),yield a.updateSymbolizer(r._symbolizer,t),r._cachedRendererJson=r.renderer.toJSON());const d=yield a.symbolize(R({bandIds:p},e),t);s={extent:e.extent,pixelBlock:d}}else s={extent:e.extent,pixelBlock:r._symbolizer.symbolize(R({bandIds:p},e))}}return s})()}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}computeHistograms(e,t){var r=this;return(0,N.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsComputeHistograms)throw new E.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,K.TJ)(nt,e).clone();const{raster:s,mosaicRule:l,renderingRule:a}=r;return a&&null==e.renderingRule&&(e.renderingRule=a),l&&null==e.mosaicRule&&(e.mosaicRule=l),s&&null==e.raster&&(e.raster=s),function(i,n,e){return ze.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computeStatisticsHistograms(e,t){var r=this;return(0,N.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsComputeStatisticsHistograms)throw new E.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,K.TJ)(nt,e).clone();const{raster:s,mosaicRule:l,renderingRule:a}=r;return a&&null==e.renderingRule&&(e.renderingRule=a),l&&null==e.mosaicRule&&(e.mosaicRule=l),s&&null==e.raster&&(e.raster=s),function(i,n,e){return _e.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}getField(e){const{fieldsIndex:t}=this;return(0,C.pC)(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,s={}){if(null==e||null==t||null==r)return Promise.reject(new E.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const l=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:s.signal}):null;return(0,We.gx)(l).then(a=>{a&&(this.rasterInfo=a);const p={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,s.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:s.requestAsImageElement&&!this.pixelFilter||!1,signal:s.signal};return this._requestArrayBuffer(p)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return(0,T.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(r=>r.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new E.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,T.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(r=>Je.default.fromJSON(r.data))}getCatalogItemRasterInfo(e,t){var r=this;return(0,N.Z)(function*(){const s=(0,T.default)(r.parsedUrl.path+"/"+e+"/info",R({query:r._getQueryParams()},t)).then(m=>m.data),l=(0,T.default)(r.parsedUrl.path+"/"+e+"/info/keyProperties",R({query:r._getQueryParams()},t)).then(m=>m.data).catch(()=>{}),a=yield Promise.all([s,l]);if(!a[0])return;const p=ce.Z.fromJSON(a[0].extent),d=a[0].statistics?a[0].statistics.map(m=>({min:m[0],max:m[1],avg:m[2],stddev:m[3]})):null;return new Me.Z({bandCount:a[0].bandCount,extent:p,spatialReference:p.sr,pixelSize:new ie.Z({x:a[0].pixelSizeX,y:a[0].pixelSizeY,spatialReference:p.sr}),pixelType:a[0].pixelType.toLowerCase(),statistics:d,histograms:a[0].histograms,keyProperties:a[1]||{}})})()}getCatalogItemICSInfo(e,t){var r=this;return(0,N.Z)(function*(){const{data:s}=yield(0,T.default)(r.parsedUrl.path+"/"+e+"/info/ics",R({query:r._getQueryParams()},t)),l=s&&s.ics;if(!l)return;let a=null;try{a=(yield(0,T.default)(r.parsedUrl.path+"/"+e+"/info",R({query:r._getQueryParams()},t))).data.extent}catch(x){}if(!a||!a.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=r.version>=10.7?(0,T.default)(r.parsedUrl.path+"/"+e+"/info/icstopixel",R({query:r._getQueryParams()},t)).then(x=>x.data).catch(()=>({})):{},d=a.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:d.wkid||JSON.stringify(d),outSR:"0:"+e},y=(0,T.default)(r.parsedUrl.path+"/project",R({query:r._getQueryParams(m)},t)).then(x=>x.data).catch(()=>({})),v=(a.xmin+a.xmax)/2,g=(a.ymax-a.ymin)/6,b=a.ymin+g,h=[];for(let x=0;x<5;x++)h.push({x:v,y:b+g*x});const w={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:d.wkid||JSON.stringify(d),outSR:"0:"+e},A=(0,T.default)(r.parsedUrl.path+"/project",R({query:r._getQueryParams(w)},t)).then(x=>x.data).catch(()=>({})),I=yield Promise.all([p,y,A]);let S=I[0].ipxf;if(null==S){var Y,ee,me;const x=null==(Y=l.geodataXform)?void 0:Y.xf_0;"topup"===(null==x||null==(ee=x.name)?void 0:ee.toLowerCase())&&6===(null==x||null==(me=x.coefficients)?void 0:me.length)&&(S={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const ae=ce.Z.fromJSON(I[1]&&I[1].geometries&&I[1].geometries[0]);ae&&(ae.spatialReference=new xe.Z({wkid:0,imageCoordinateSystem:l}));const L=I[2].geometries?I[2].geometries.filter(x=>null!=x&&null!=x.x&&null!=x.y&&"NaN"!==x.x&&"NaN"!==x.y):[],H=L.length;if(H<3)return{ics:l,icsToPixelTransform:S,icsExtent:ae,northDirection:null};let oe=0,le=0,at=0,lt=0;for(let x=0;x<H;x++)oe+=L[x].x,le+=L[x].y,at+=L[x].x*L[x].x,lt+=L[x].x*L[x].y;const ne=(H*lt-oe*le)/(H*at-oe*oe);let ye=0;const ut=L[4].x>L[0].x,pt=L[4].y>L[0].y;return ne===1/0?ye=pt?90:270:0===ne?ye=ut?0:180:ne>0?ye=ut?180*Math.atan(ne)/Math.PI:180*Math.atan(ne)/Math.PI+180:ne<0&&(ye=pt?180+180*Math.atan(ne)/Math.PI:360+180*Math.atan(ne)/Math.PI),{ics:l,icsToPixelTransform:S,icsExtent:ae,northDirection:ye}})()}generateRasterInfo(e,t){var r=this;return(0,N.Z)(function*(){if((!e||"none"===e.functionName.toLowerCase()||r._isVectorFieldResampleFunction(e))&&(0,C.pC)(r.serviceRasterInfo))return r.serviceRasterInfo;const s=function(i){if(!i)return null;const n=JSON.stringify(i).match(/"rasterFunction":"(.*?")/gi),e=null==n?void 0:n.map(t=>t.replace('"rasterFunction":"',"").replace('"',""));return e?e.join("/"):null}(e);if(r._functionRasterInfos[s])return r._functionRasterInfos[s];const l=r._generateRasterInfo(e,t);r._functionRasterInfos[s]=l;try{return yield l}catch(a){return r._functionRasterInfos[s]=null,null}})()}getExportImageServiceParameters(e,t,r,s){const l=(e=e.clone().shiftCentralMeridian()).spatialReference;let a;if(l.imageCoordinateSystem){const{id:h,referenceServiceName:w}=l.imageCoordinateSystem;a=null!=h?w?this.parsedUrl.path.toLowerCase().indexOf("/"+w.toLowerCase()+"/")>-1?"0:"+h:JSON.stringify({icsid:h,icsns:w}):"0:"+h:JSON.stringify({ics:l.imageCoordinateSystem})}else a=l.wkid||JSON.stringify(l.toJSON());(0,C.pC)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:d,noData:m}=p;let{renderingRule:y}=p;const f=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase();if(null==d||!d.length||!f||this.renderer&&"raster-stretch"!==this.renderer.type)p.bandIds=null==d?void 0:d.join(",");else{const h={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:d}};if("Stretch"===y.rasterFunction)h.rasterFunctionArguments.Raster=y.rasterFunctionArguments.Raster,y.rasterFunctionArguments.Raster=h;else if("Colormap"===y.rasterFunction){const w=y.rasterFunctionArguments.Raster;"Stretch"===(null==w?void 0:w.rasterFunction)?(h.rasterFunctionArguments.Raster=w.rasterFunctionArguments.Raster,w.rasterFunctionArguments.Raster=h):(h.rasterFunctionArguments.Raster=w,y.rasterFunctionArguments.Raster=h)}else h.rasterFunctionArguments.Raster=y,y=h;p.bandIds=void 0}m instanceof Array&&m.length>0&&(p.noData=m.join(","));const g=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,s):null;p.mosaicRule=g&&JSON.stringify(g),p.renderingRule=y&&JSON.stringify(y);const b={};if(s){const{start:h,end:w}=s.toJSON();h&&w&&h===w?b.time=""+h:null==h&&null==w||(b.time=`${null==h?"null":h},${null==w?"null":w}`)}return R(R({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r},p),b)}getSamples(e,t){var r=this;return(0,N.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsGetSamples)throw new E.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,K.TJ)(Kt,e).clone();const{raster:s}=r;return s&&null==e.raster&&(e.raster=s),function(i,n,e){return Ee.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}identify(e,t){var r=this;return(0,N.Z)(function*(){if(yield r._fetchCapabilities(null==t?void 0:t.signal),!r.capabilities.operations.supportsIdentify)throw new E.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,K.TJ)(st,e).clone();const{raster:s,mosaicRule:l,renderingRule:a}=r;if(a&&null==e.renderingRule&&(e.renderingRule=a),l&&null==e.mosaicRule){const p=r._combineMosaicRuleWithTimeExtent(l,e.timeExtent);e.mosaicRule=(0,C.Wg)(p)}return s&&null==e.raster&&(e.raster=s),it(r.url,e,r._getRequestOptions(t))})()}createQuery(){const e=new Le.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}queryRasters(e,t){var r=this;return(0,N.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,$t.e)(r.url,e,t)})()}queryObjectIds(e,t){var r=this;return(0,N.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,Yt.G)(r.url,e,t)})()}queryRasterCount(e,t){var r=this;return(0,N.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,Wt.P)(r.url,e,t)})()}queryVisibleRasters(e,t){if(!e)return Promise.reject(new E.Z("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:s,returnTopmostRaster:l,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let p=!1,d=null,m=null;const y="raster.servicepixelvalue",f=this.rasterFunctionNamesIndex;if((0,C.pC)(e.outFields)&&(p=e.outFields.some(I=>-1===I.toLowerCase().indexOf(y)),this.version>=10.4)){const I=e.outFields.filter(S=>S.toLowerCase().indexOf(y)>-1&&S.length>y.length).map(S=>{const Y=S.slice(y.length+1);return[this._updateRenderingRulesFunctionName(Y,f),Y]});d=I.map(S=>new D({functionName:S[0]})),m=I.map(S=>S[1]),0===d.length?this.renderingRule?(d.push(this.renderingRule),m.push(this.renderingRule.functionName)):d=null:this.renderingRule&&!d.some(S=>S.functionName===this.renderingRule.functionName)&&(d.push(this.renderingRule),m.push(this.renderingRule.functionName))}const v=(0,C.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),g=e.timeExtent||this.timeExtent,b=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,g),h=this._getQueryParams({geometry:e.geometry,timeExtent:g,mosaicRule:b,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:d,pixelSize:r,returnCatalogItems:p,returnGeometry:v,raster:this.raster,maxItemCount:l?1:null});delete h.f;const w=new st(h),A=this.generateRasterInfo(this.renderingRule);return new Promise(I=>{A.then(()=>{it(this.url,w,{signal:null==t?void 0:t.signal,query:R({},this.customParameters)}).then(S=>{const Y=e.outFields;if(p&&!v&&S.catalogItems&&S.catalogItems.features&&S.catalogItems.features.length>0){const ee=this.objectIdField||"ObjectId",me=S.catalogItems.features,ae=me.map(H=>H.attributes&&H.attributes[ee]),L=new Le.Z({objectIds:ae,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[ee]});return this.queryRasters(L).then(H=>{H&&H.features&&H.features.length>0&&H.features.forEach(oe=>{me.forEach(le=>{le.attributes[ee]===oe.attributes[ee]&&(le.geometry=new Xt.Z(oe.geometry),le.geometry.spatialReference=e.outSpatialReference)})}),I(this._processVisibleRastersResponse(S,{returnDomainValues:s,templateRRFunctionNames:m,showNoDataRecords:a,templateFields:Y}))}).catch(()=>{throw new E.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}I(this._processVisibleRastersResponse(S,{returnDomainValues:s,templateRRFunctionNames:m,showNoDataRecords:a,templateFields:Y}))}).catch(()=>{throw new E.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}fetchVariableStatisticsHistograms(e,t){var r=this;return(0,N.Z)(function*(){const s=(0,T.default)(r.parsedUrl.path+"/statistics",{query:r._getQueryParams({variable:e}),signal:t}).then(p=>{var d;return null==(d=p.data)?void 0:d.statistics}),l=(0,T.default)(r.parsedUrl.path+"/histograms",{query:r._getQueryParams({variable:e}),signal:t}).then(p=>{var d;return null==(d=p.data)?void 0:d.histograms}),a=yield Promise.all([s,l]);return a[0]&&a[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}})()}_fetchService(e){var t=this;return(0,N.Z)(function*(){yield t._fetchServiceInfo(e),(0,C.pC)(t.serviceRasterInfo)&&!t.rasterInfo&&(t.rasterInfo=t.serviceRasterInfo);const r=t.sourceJSON,s=(0,C.pC)(t.serviceRasterInfo)?Promise.resolve(t.serviceRasterInfo):t._fetchAuxiliaryRasterInfo({serviceInfo:r,signal:e}).then(a=>(t._set("serviceRasterInfo",a),a)),l=t.renderingRule&&"none"!==t.renderingRule.functionName.toLowerCase()?t.generateRasterInfo(t.renderingRule,{signal:e}):null;return Promise.all([s,l]).then(a=>{t._set("rasterInfo",a[1]?a[1]:a[0]),t.renderer&&!t._isSupportedRenderer(t.renderer)&&(t.renderer=null,ot.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),t._configDefaultRenderer(),t.watch("renderer",()=>t._configDefaultRenderer()),t.watch("renderingRule",d=>{(t.renderer||t._symbolizer||t.popupEnabled&&t.popupTemplate)&&t.generateRasterInfo(d).then(m=>{m&&(t.rasterInfo=m)})});const p=(0,C.pC)(t.serviceRasterInfo)&&t.serviceRasterInfo.multidimensionalInfo;p&&t._updateMultidimensionalDefinition(p)})})()}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if((0,C.Wi)(e)||(0,C.Wi)(this.multidimensionalInfo)||(0,C.Wi)(t)||(0,C.Wi)(null==r?void 0:r.startField))return e;const{startField:s}=r;var l;if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(l=e.multidimensionalDefinition)?void 0:l.filter(v=>v.dimensionName!==s),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const a=e.multidimensionalDefinition.filter(v=>v.dimensionName===s),p=(0,C.pC)(t.start)?t.start.getTime():null,d=(0,C.pC)(t.end)?t.end.getTime():null,m=null==p||null==d||p===d,y=m?[p||d]:[[p,d]],f=this.version>=10.8;if(a.length)a.forEach(v=>{v.dimensionName===s&&(f?(v.dimensionName=null,v.isSlice=null,v.values=null):(v.isSlice=m,v.values=y))});else if(!f){const v=e.multidimensionalDefinition.filter(g=>null!=g.variableName&&null==g.dimensionName);v.length?v.forEach(g=>{g.dimensionName=s,g.isSlice=m,g.values=y}):e.multidimensionalDefinition.push(new we.Z({variableName:"",dimensionName:s,isSlice:m,values:y}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,C.Wi)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}_prepareForQuery(e,t){var r=this;return(0,N.Z)(function*(){var s;if(yield r._fetchCapabilities(null==(s=t)?void 0:s.signal),!r.capabilities.operations.supportsQuery)throw new E.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,C.pC)(e)?(0,K.TJ)(Le.Z,e):r.createQuery(),t=r._getRequestOptions(t),r.raster&&(t.query=G(R({},t.query),{raster:r.raster})),{query:e,requestOptions:t}})()}_initJobHandler(){var e=this;return(0,N.Z)(function*(){if(null!=e._rasterJobHandler.connectionPromise)return e._rasterJobHandler.connectionPromise;const t=new zt.Z;e._rasterJobHandler.connectionPromise=t.initialize().then(()=>{e._rasterJobHandler.instance=t},()=>null),yield e._rasterJobHandler.connectionPromise})()}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||(0,be.U0)(this.rasterInfo).includes(this.renderer.type)}_fetchCapabilities(e){var t=this;return(0,N.Z)(function*(){return t.capabilities||(yield t._fetchServiceInfo(e)),t.capabilities})()}_fetchServiceInfo(e){var t=this;return(0,N.Z)(function*(){var r;let s=t.sourceJSON;if(!s){const{data:l,ssl:a}=yield(0,T.default)(t.parsedUrl.path,{query:t._getQueryParams(),signal:e});s=l,t.sourceJSON=s,a&&(t.url=t.url.replace(/^http:/i,"https:"))}if((null==(r=s.capabilities)?void 0:r.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly"))>-1)throw new E.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");t.read(s,{origin:"service",url:t.parsedUrl})})()}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),s=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||s}_isVectorFieldResampleFunction(e){if(!(0,C.pC)(e))return!1;const{functionName:t,functionArguments:r}=e,s="resample"===t.toLowerCase(),l=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return s&&(7===l||10===l)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const r=(0,be.YD)(this.rasterInfo);!r||3===this.rasterInfo.bandCount&&0===r[0]&&1===r[1]&&2===r[2]||(this.bandIds=r)}var e,t;this.renderer||(this.renderer=(0,be.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=(0,be.ol)(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new Zt.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,C.pC)(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return R(R({raster:t,viewId:r,f:"json"},e),this.customParameters)}_getRequestOptions(e){return G(R({},e),{query:R(R({},null==e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,De.Jx)(e,t,r)}_fetchMultidimensionalInfo(e){var t=this;return(0,N.Z)(function*(){var r;const s=yield(0,T.default)(t.parsedUrl.path+"/multidimensionalInfo",{query:t._getQueryParams(),signal:e}).then(l=>{var a;return null==(a=l.data)?void 0:a.multidimensionalInfo});return null!=(r=s.variables)&&r.length&&s.variables.forEach(l=>{var a;null!=(a=l.statistics)&&a.length&&l.statistics.forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation})}),s})()}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new E.Z("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,s=e.signal,l=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&(0,T.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:s}).then(y=>Je.default.fromJSON(y.data)).catch(()=>null),a=!!(t.hasColormap&&this.version>=10.1)&&(0,T.default)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:s}).then(y=>{var f;return null==(f=y.data)?void 0:f.colormap}),p=!!(t.hasHistograms&&this.version>=10.1)&&(0,T.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:s}).then(y=>{var f;return null==(f=y.data)?void 0:f.histograms}),d=this.version>=10.3&&(0,T.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:s}).then(y=>y.data).catch(()=>{}),m=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([l,a,p,d,m]).then(y=>{let f=null;if(t.minValues&&t.minValues.length===t.bandCount){f=[];for(let h=0;h<t.minValues.length;h++)f.push({min:t.minValues[h],max:t.maxValues[h],avg:t.meanValues[h],stddev:t.stdvValues[h]})}const v=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),g=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),b=xe.Z.fromJSON(t.spatialReference||t.extent.spatialReference);return new Me.Z({width:v,height:g,bandCount:t.bandCount,extent:ce.Z.fromJSON(t.extent),spatialReference:b,pixelSize:new ie.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:b}),pixelType:t.pixelType.toLowerCase(),statistics:f,attributeTable:y[0]||null,colormap:y[1]||null,histograms:y[2]||null,keyProperties:y[3]||{},multidimensionalInfo:y[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:s}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return(0,T.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(R({f:"image"},e.imageServiceParameters)),signal:s}).then(p=>({imageElement:p.data,params:t}));const l=this._initJobHandler(),a=(0,T.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(R({f:"image"},e.imageServiceParameters)),signal:s});return Promise.all([a,l]).then(p=>{const d=p[0].data,m=t.format||"jpgpng";let y=m;if("bsq"!==y&&"bip"!==y&&(y=(0,De.y6)(d)),!y)throw new E.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(d)));const f="gif"===m||"bmp"===m||m.indexOf("png")>-1&&("png"===y||"jpg"===y),v={signal:s};return f?(0,De.Jx)(d,R({useCanvas:!0},t),v).then(g=>({pixelData:{pixelBlock:g,extent:t.extent},params:t})):this._decodePixelBlock(d,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:m},v).then(g=>({pixelData:{pixelBlock:g,extent:t.extent},params:t}))})}_generateRasterInfo(e,t){var r=this;return(0,N.Z)(function*(){const{data:s}=yield(0,T.default)(r.parsedUrl.path,R({query:r._getQueryParams({renderingRule:e})},t));return yield r._fetchAuxiliaryRasterInfo(R({serviceInfo:s,renderingRule:e},t))})()}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,s=[];for(const l in t)if(t.hasOwnProperty(l)){const a=t[l],p=a.extent;let d=!0,m=[p[0]];a.hasRanges&&!0===a.hasRanges?(d=!1,m=[a.values[0]]):"stdz"===a.name.toLowerCase()&&Math.abs(p[1])<=Math.abs(p[0])&&(m=[p[1]]),s.push(new we.Z({variableName:"",dimensionName:t[l].name,isSlice:d,values:m}))}if(s.length>0){this.mosaicRule=this.mosaicRule||new Q;const l=this.mosaicRule.multidimensionalDefinition;(!l||l&&l.length<=0)&&(this.mosaicRule.multidimensionalDefinition=s)}}_formatAttributeValue(e,t){if("string"==typeof e){const s=this._getFieldInfo(this.popupTemplate&&this.popupTemplate.fieldInfos,t),l=s&&s.format;if(l){let a,p;return e.trim().indexOf(",")>-1?(a=",",p=a+" ",this._formatDelimitedString(e,a,p,l)):e.trim().indexOf(" ")>-1?(a=p=" ",this._formatDelimitedString(e,a,p,l)):this._formatNumberFromString(e,l)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let s;return e.some(l=>!(!l.fieldName||l.fieldName.toLowerCase()!==r&&l.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(s=l,0))),s}_formatDelimitedString(e,t,r,s){return e&&t&&r&&s?e.trim().split(t).map(l=>this._formatNumberFromString(l,s)).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:s,showNoDataRecords:l,returnDomainValues:a,templateFields:p}=t,d=e.processedValues;let m=e.catalogItems&&e.catalogItems.features,y=e.properties&&e.properties.Values&&e.properties.Values.map(A=>A.replace(/ /gi,", "))||[];const f=this.objectIdField||"ObjectId",v="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,g=[];if(r&&!m&&!v){const A={};A[f]=0,y=[r],m=[new gt.Z(this.fullExtent,null,A)]}if(!m)return[];let b,h,w;this._updateResponseFieldNames(m,p),v&&!l&&(m=[]);for(let A=0;A<m.length;A++){if(b=m[A],null!=r&&!v){if(h=y[A],w=this.renderingRule&&d&&d.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?d[s.indexOf(this.renderingRule.functionName)]:r,"nodata"===h.toLowerCase()&&!l)continue;const I="Raster.ItemPixelValue",S="Raster.ServicePixelValue";b.attributes[I]=this._formatAttributeValue(h,I),b.attributes[S]=this._formatAttributeValue(w,S),this._updateFeatureWithMagDirValues(b,h);const Y=this.fields&&this.fields.length>0;let ee=this.renderingRule&&(0,C.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?Y?h:r:w;this.renderingRule||(ee=Y?h:r),this._updateFeatureWithRasterAttributeTableValues(b,ee)}if(b.sourceLayer=this,a&&this._updateFeatureWithDomainValues(b),s&&d&&s.length===d.length)for(let I=0;I<s.length;I++){const S="Raster.ServicePixelValue."+s[I];b.attributes[S]=this._formatAttributeValue(d[I],S)}g.push(m[A])}return g}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,C.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,s=r&&r.features;if(!s)return;const l=r.fields,a=l.map(m=>m.name).filter(m=>"value"===m.toLowerCase()),p=a&&a[0];if(!p)return;const d=s.filter(m=>m.attributes[p]===(null!=t?parseInt(t,10):null));d&&d[0]&&l.forEach(m=>{const y=this.rasterAttributeTableFieldPrefix+m.name;e.attributes[y]=this._formatAttributeValue(d[0].attributes[m.name],y)})}_updateFeatureWithMagDirValues(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map(d=>parseFloat(d)),s=r.map(d=>[d]),l=r.map(d=>({minValue:d,maxValue:d,noDataValue:null})),a=new _t.Z({height:1,width:1,pixelType:"f32",pixels:s,statistics:l});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new ce.Z(0,0,0,0,this.spatialReference)});const p="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:(0,Et.Tg)([a.pixels[0][0],a.pixels[1][0]]);e.attributes["Raster.Magnitude"]=p[0],e.attributes["Raster.Direction"]=p[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(r=>r.domain&&"coded-value"===r.domain.type);null!=t&&t.forEach(r=>{const s=e.attributes[r.name];if(null!=s){const l=r.domain.codedValues.filter(a=>a.code===s)[0];l&&(e.attributes[r.name]=l.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;(0,C.pC)(r)&&e.forEach(s=>{if(s&&s.attributes)for(const l of t)if(r.has(l)){const a=r.get(l).name;a!==l&&(s.attributes[l]=s.attributes[a],delete s.attributes[a])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(y=>y.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:s,maxRecordCount:l}=e,a=t.indexOf("image")>-1,p="esriImageServiceDataTypeElevation"===e.serviceDataType,d=!!(e.spatialReference||e.extent&&e.extent.spatialReference),m=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:a,supportsExportImage:a,supportsIdentify:a,supportsMeasure:t.indexOf("mensuration")>-1&&d,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&a,supportsProject:r>=10.3&&a,supportsComputeStatisticsHistograms:r>=10.4&&a,supportsQueryBoundary:r>=10.6&&a,supportsCalculateVolume:r>=10.7&&p,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsAdd:m,supportsDelete:m,supportsEditing:m,supportsUpdate:m,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,supportsStatistics:!(null==s||!s.supportsStatistics),supportsOrderBy:!(null==s||!s.supportsOrderBy),supportsDistinct:!(null==s||!s.supportsDistinct),supportsPagination:!(null==s||!s.supportsPagination),supportsStandardizedQueriesOnly:!(null==s||!s.useStandardizedQueries),supportsPercentileStatistics:!(null==s||!s.supportsPercentileStatistics),supportsCentroid:!(null==s||!s.supportsReturningGeometryCentroid),supportsDistance:!(null==s||!s.supportsQueryWithDistance),supportsExtent:!(null==s||!s.supportsReturningQueryExtent),supportsGeometryProperties:!(null==s||!s.supportsReturningGeometryProperties),supportsHavingClause:!(null==s||!s.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return(0,o._)([(0,u.Cb)()],n.prototype,"_functionRasterInfos",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"_rasterJobHandler",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"_symbolizer",void 0),(0,o._)([(0,u.Cb)({dependsOn:["_serviceSupportsMosaicRule"]})],n.prototype,"_defaultServiceMosaicRule",void 0),(0,o._)([(0,P.r)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],n.prototype,"readDefaultServiceMosaicRule",null),(0,o._)([(0,u.Cb)()],n.prototype,"_cachedRendererJson",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"_serviceSourceType",void 0),(0,o._)([(0,P.r)("_serviceSourceType",["serviceSourceType","fields"])],n.prototype,"readServiceSourceType",null),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"_serviceSupportsMosaicRule",void 0),(0,o._)([(0,P.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],n.prototype,"readServiceSupportsMosaicRule",null),(0,o._)([(0,u.Cb)()],n.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"rasterFunctionNamesIndex",null),(0,o._)([(0,u.Cb)()],n.prototype,"adjustAspectRatio",void 0),(0,o._)([(0,u.Cb)({readOnly:!0}),(0,U.B)("serviceRasterInfo.bandCount")],n.prototype,"bandCount",void 0),(0,o._)([(0,u.Cb)({type:[K.z8],json:{write:!0}})],n.prototype,"bandIds",void 0),(0,o._)([(0,P.r)("bandIds")],n.prototype,"readBandIds",null),(0,o._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],n.prototype,"capabilities",void 0),(0,o._)([(0,P.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],n.prototype,"readCapabilities",null),(0,o._)([(0,u.Cb)({type:Number})],n.prototype,"compressionQuality",void 0),(0,o._)([(0,O.c)("compressionQuality")],n.prototype,"writeCompressionQuality",null),(0,o._)([(0,u.Cb)({type:Number})],n.prototype,"compressionTolerance",void 0),(0,o._)([(0,O.c)("compressionTolerance")],n.prototype,"writeCompressionTolerance",null),(0,o._)([(0,u.Cb)({json:{read:{source:"copyrightText"}}})],n.prototype,"copyright",void 0),(0,o._)([(0,u.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],n.prototype,"definitionExpression",void 0),(0,o._)([(0,u.Cb)({readOnly:!0,constructOnly:!0})],n.prototype,"exportImageServiceParameters",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"rasterInfo",void 0),(0,o._)([(0,u.Cb)({readOnly:!0,type:[se.Z]})],n.prototype,"fields",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"fieldsIndex",null),(0,o._)([(0,u.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],n.prototype,"format",null),(0,o._)([(0,P.r)("service","format",["serviceDataType"])],n.prototype,"readFormat",null),(0,o._)([(0,u.Cb)({type:ce.Z})],n.prototype,"fullExtent",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"hasMultidimensions",void 0),(0,o._)([(0,u.Cb)({json:{read:{source:"maxImageHeight"}}})],n.prototype,"imageMaxHeight",void 0),(0,o._)([(0,u.Cb)({json:{read:{source:"maxImageWidth"}}})],n.prototype,"imageMaxWidth",void 0),(0,o._)([(0,u.Cb)({type:String,json:{type:Z.c.jsonValues,read:Z.c.read,write:Z.c.write}})],n.prototype,"interpolation",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"minScale",void 0),(0,o._)([(0,P.r)("service","minScale")],n.prototype,"readMinScale",null),(0,o._)([(0,u.Cb)()],n.prototype,"maxScale",void 0),(0,o._)([(0,P.r)("service","maxScale")],n.prototype,"readMaxScale",null),(0,o._)([(0,u.Cb)({type:Q})],n.prototype,"mosaicRule",null),(0,o._)([(0,P.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],n.prototype,"readMosaicRule",null),(0,o._)([(0,O.c)("mosaicRule")],n.prototype,"writeMosaicRule",null),(0,o._)([(0,u.Cb)({readOnly:!0}),(0,U.B)("serviceRasterInfo.multidimensionalInfo")],n.prototype,"multidimensionalInfo",void 0),(0,o._)([(0,u.Cb)({json:{type:K.z8}})],n.prototype,"noData",void 0),(0,o._)([(0,O.c)("noData")],n.prototype,"writeNoData",null),(0,o._)([(0,u.Cb)({type:String,json:{type:Z.k.jsonValues,read:Z.k.read,write:Z.k.write}})],n.prototype,"noDataInterpretation",void 0),(0,o._)([(0,u.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],n.prototype,"objectIdField",void 0),(0,o._)([(0,P.r)("objectIdField")],n.prototype,"readObjectIdField",null),(0,o._)([(0,u.Cb)({})],n.prototype,"geometryType",void 0),(0,o._)([(0,u.Cb)({})],n.prototype,"typeIdField",void 0),(0,o._)([(0,u.Cb)({})],n.prototype,"types",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"parsedUrl",null),(0,o._)([(0,u.Cb)({readOnly:!0}),(0,U.B)("serviceRasterInfo.pixelSize.x")],n.prototype,"pixelSizeX",void 0),(0,o._)([(0,u.Cb)({readOnly:!0}),(0,U.B)("serviceRasterInfo.pixelSize.y")],n.prototype,"pixelSizeY",void 0),(0,o._)([(0,u.Cb)({type:Function})],n.prototype,"pixelFilter",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"raster",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"viewId",void 0),(0,o._)([(0,u.Cb)({types:Ce.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Ce.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],n.prototype,"renderer",void 0),(0,o._)([(0,P.r)("renderer")],n.prototype,"readRenderer",null),(0,o._)([(0,O.c)("renderer")],n.prototype,"writeRenderer",null),(0,o._)([(0,u.Cb)(he.Oh)],n.prototype,"opacity",void 0),(0,o._)([(0,u.Cb)({readOnly:!0}),(0,U.B)("serviceRasterInfo.attributeTable")],n.prototype,"rasterAttributeTable",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"rasterFields",null),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"rasterFunctionInfos",void 0),(0,o._)([(0,u.Cb)({type:D})],n.prototype,"renderingRule",null),(0,o._)([(0,P.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],n.prototype,"readRenderingRule",null),(0,o._)([(0,O.c)("renderingRule")],n.prototype,"writeRenderingRule",null),(0,o._)([(0,u.Cb)()],n.prototype,"serviceDataType",void 0),(0,o._)([(0,u.Cb)({readOnly:!0,type:xe.Z})],n.prototype,"spatialReference",void 0),(0,o._)([(0,P.r)("spatialReference",["spatialReference","extent"])],n.prototype,"readSpatialReference",null),(0,o._)([(0,u.Cb)({json:{type:Ge.jsonValues}})],n.prototype,"pixelType",void 0),(0,o._)([(0,P.r)("pixelType")],n.prototype,"readPixelType",null),(0,o._)([(0,O.c)("pixelType")],n.prototype,"writePixelType",null),(0,o._)([(0,u.Cb)({constructOnly:!0,type:Me.Z})],n.prototype,"serviceRasterInfo",void 0),(0,o._)([(0,u.Cb)()],n.prototype,"sourceJSON",void 0),(0,o._)([(0,u.Cb)(he.HQ)],n.prototype,"url",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],n.prototype,"version",void 0),(0,o._)([(0,P.r)("version",["currentVersion","fields","timeInfo"])],n.prototype,"readVersion",null),n=(0,o._)([(0,W.j)("esri.layers.mixins.ArcGISImageService")],n),n};var ir=c(39380),nr=c(64469),sr=c(6331),or=c(24065),ar=c(52043),lr=c(44660),ur=c(55130),pr=c(89420),cr=c(78710);let B=class extends((0,nr.h)((0,pr.n)((0,lr.Q)((0,ur.M)((0,or.q)((0,ar.I)(rr((0,sr.N)((0,ir.Y)((0,yt.R)(ft.Z))))))))))){constructor(...i){super(...i),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(i,n){return"string"==typeof i?R({url:i},n):i}load(i){const n=(0,C.pC)(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(We.r9).then(()=>this._fetchService(n))),Promise.resolve(this)}writeOperationalLayerType(i,n,e){var t;const r="vector-field"===(null==(t=this.renderer)?void 0:t.type);n[e]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(i){const n=this.rasterFields,e=this.title,t=new Set;let r=!1,s=!1;this.capabilities&&(r=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s=r&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const l=new Set;r&&(l.add("raster.itempixelvalue"),s&&l.add("raster.magnitude").add("raster.direction"));for(const a of n){const p=a.name.toLowerCase();l.has(p)||p.indexOf("raster.servicepixelvalue.")>-1||t.add(a.name)}return(0,cr.eZ)({fields:n,title:e},G(R({},i),{visibleFieldNames:t}))}queryFeatures(i,n){return this.queryRasters(i,n).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(i,n){return this.queryRasterCount(i,n)}redraw(){this.emit("redraw")}};(0,o._)([(0,u.Cb)(he.rn)],B.prototype,"legendEnabled",void 0),(0,o._)([(0,u.Cb)({type:["show","hide"]})],B.prototype,"listMode",void 0),(0,o._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),(0,o._)([(0,u.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],B.prototype,"operationalLayerType",void 0),(0,o._)([(0,O.c)("web-map","operationalLayerType")],B.prototype,"writeOperationalLayerType",null),(0,o._)([(0,u.Cb)(he.C_)],B.prototype,"popupEnabled",void 0),(0,o._)([(0,u.Cb)({type:mt.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],B.prototype,"popupTemplate",void 0),(0,o._)([(0,u.Cb)({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),(0,o._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),B=(0,o._)([(0,W.j)("esri.layers.ImageryLayer")],B);var dr=B}}]);