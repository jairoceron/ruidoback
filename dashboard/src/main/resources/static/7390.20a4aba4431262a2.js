"use strict";var Vt=Object.defineProperty,Ee=Object.getOwnPropertySymbols,Pt=Object.prototype.hasOwnProperty,jt=Object.prototype.propertyIsEnumerable,He=(A,T,m)=>T in A?Vt(A,T,{enumerable:!0,configurable:!0,writable:!0,value:m}):A[T]=m,Ce=(A,T)=>{for(var m in T||(T={}))Pt.call(T,m)&&He(A,m,T[m]);if(Ee)for(var m of Ee(T))jt.call(T,m)&&He(A,m,T[m]);return A};(self.webpackChunkdashboard=self.webpackChunkdashboard||[]).push([[7390],{88854:(A,T,m)=>{m.d(T,{Z:()=>I});var L=m(16904);class I extends L.T{constructor(B){super(B),this.hasHighlight=()=>!0}get hasLabels(){return!1}onTileData(B,q){B.patch(q),this.contains(B)||this.addChild(B),this.requestRender()}onTileError(B){B.clear(),this.contains(B)||this.addChild(B)}_renderChildren(B,q){for(const w of this.children)w.isReady&&w.hasData&&(w.commit(B),B.context.setStencilFunction(514,w.stencilRef,255),w._displayList.replay(B,w,q))}}},8940:(A,T,m)=>{m.d(T,{Z:()=>Ot});var L=m(61921),I=m(60046),Be=m(64859),B=m(10882),w=(m(67474),m(60305)),D=m(12523),Fe=m(12788),M=m(9077),Te=(m(57025),m(33870),m(42442)),We=m(70393),Ne=m(56703),F=m(13638),Xe=m(47995),_=m(52917),ke=m(25481),Ie=m(15969),R=m(93722),ee=m(89096);function we(n,e,t){if(Array.isArray(n)){const s=n[0];if(s>e){const i=(0,R.XZ)(s,e);n[0]=s+i*(-2*e)}else if(s<t){const i=(0,R.XZ)(s,t);n[0]=s+i*(-2*t)}}else{const s=n.x;if(s>e){const i=(0,R.XZ)(s,e);n.x+=i*(-2*e)}else if(s<t){const i=(0,R.XZ)(s,t);n.x+=i*(-2*t)}}return n}function Le(n,e){const[t,s]=e.valid,i=2*s;let r,o=0;return n>s?(r=Math.ceil(Math.abs(n-s)/i),n-=r*i,o=r):n<t&&(r=Math.ceil(Math.abs(n-t)/i),n+=r*i,o=-r),{x:n,frameId:o}}function te(n,e){const{xmin:t,ymin:s,xmax:i,ymax:r}=e;return se(n,t,s)&&se(n,t,r)&&se(n,i,r)&&se(n,i,s)}function se(n,e,t){return e>=n.xmin&&e<=n.xmax&&t>=n.ymin&&t<=n.ymax}class qe{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let o=0;o<i;o++){const a=s[o];if(a&&a.length>=this.minPts){const c=[];for(const h of a)c.push([h[0]+r,h[1]]);s.push(c)}}return this.closed?e.rings=s:e.paths=s,e}}const et=(0,F.Ue)();var Re=m(68310),tt=m(34119),me=m(23290),st=m(99155);const g=-1;class Se{constructor(){this._dirties=[{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==g||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=g,e.indexCount=g,e.vertexFrom=g,e.vertexCount=g,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:o,allDirty:a}=this._dirties[t],c={};let h,l=!1;(a||o!==g&&r>0)&&(c.geometry={count:r,from:o,allDirty:a},l=!0),(a||i!==g&&s>0)&&(h={count:s,from:i,allDirty:a},l=!0),l&&e({indices:h,vertices:c},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,o=s;if(!i.allDirty)if(i.indexCount!==g){const a=Math.min(i.indexFrom,r),c=Math.max(i.indexFrom+i.indexCount,r+o)-a;i.indexFrom=a,i.indexCount=c}else i.indexFrom=r,i.indexCount=o}markDirtyVertices(e,t,s,i){const r=this._dirties[e],o=s,a=i;if(!r.allDirty)if(r.vertexCount!==g){const c=Math.min(r.vertexFrom,o),h=Math.max(r.vertexFrom+r.vertexCount,o+a)-c;r.vertexFrom=c,r.vertexCount=h}else r.vertexFrom=o,r.vertexCount=a}}class it{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,o=this._parent._freeHead;for(;s&&!i;){const c=null!==o?o.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=c?(s=!1,i=!0):null!==o?(r=o,o=o.next):s=!1}return[r,o]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class G{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new it(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const r=null!==t.prev?this._freeHead:t.next;G._removeRange(t),this._freeHead=r}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const o=r.from,a=r.count;G._fuse(r,i),G._removeRange(i),this._bookKeeper.rangeResized(r,o,a),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const o=s.from,a=s.count;G._fuse(s,r),G._removeRange(r),this._bookKeeper.rangeResized(s,o,a),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var b=m(20547);const N=["FILL","LINE","MARKER","TEXT","LABEL"];class ie{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new G(i):null,idxFreeList:i?new G(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const o in e[r])this._freeListsAndStorage[r].vertexBuffers[o]={data:i?(0,b.C$)(i,e[r][o]):null,stride:e[r][o]}}}static fromTileData(e,t){const s=function(n){const e=n.getStrides(),t={};for(let s=0;s<e.length;s++)t[N[s]]=e[s];return t}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],o=e.tileDisplayData.displayObjects;for(const c of o)for(const h of c.displayRecords)i[h.geometryType]=Math.max(i[h.geometryType],h.vertexFrom+h.vertexCount),r[h.geometryType]=Math.max(r[h.geometryType],h.indexFrom+h.indexCount);const a=new ie(s,e.tileDisplayData.displayList,t,null);for(let c=0;c<e.tileBufferData.geometries.length;++c){const h=i[c],l=r[c],d=e.tileBufferData.geometries[c],f=a._storageFor(N[c]),p=e.tileBufferData.geometries[c].indexBuffer;let y;f.indexBuffer=p,f.idxFreeList=new G(p.length),f.idxFreeList.allocate(l);for(const v in d.vertexBuffer){const C=e.tileBufferData.geometries[c].vertexBuffer[v];f.vertexBuffers[v].data=C.data,f.vertexBuffers[v].stride=C.stride;const S=(0,b.Y8)(C.stride),$=C.data.length*S/C.stride;y||(y=$)}f.vtxFreeList=new G(y),f.vtxFreeList.allocate(h)}return a}delete(e){const t=N[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const o=N[e.geometryType];let a,c;e.meshData=null,void 0===e.vertexFrom?(c=t.vertexCount,a=this._allocateVertices(o,c)):t.vertexCount>e.vertexCount?(this._freeVertices(o,e.vertexFrom,e.vertexCount),c=t.vertexCount,a=this._allocateVertices(o,c)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,c=e.vertexCount):(this._freeVertices(o,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,c=t.vertexCount);let h,l,d,u=!0;if(void 0===e.indexFrom?(h=r,d=t.indexCount,l=this._allocateIndices(o,d)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(o,e.indexFrom,e.indexCount),d=t.indexCount,l=this._allocateIndices(o,d)):t.indexCount===e.indexCount?(u=!1,l=e.indexFrom,d=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(o,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),l=e.indexFrom,d=t.indexCount),-1!==a&&-1!==l){const f=this._storageFor(o);if((0,b.wO)(a,l,f.vertexBuffers,f.indexBuffer,t,s,i),e.vertexFrom=a,e.indexFrom=l,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const p in s)this._dirtyMap.markDirtyVertices(e.geometryType,p,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,h),!0}return-1!==a&&this._freeVertices(o,a,c),-1!==l&&this._freeIndices(o,l,d),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=N[e.geometryType],o=this._allocateVertices(r,e.vertexCount);if(-1===o)return this._freeVertices(r,o,e.vertexCount),!1;const a=this._allocateIndices(r,e.indexCount);if(-1===a)return this._freeVertices(r,o,e.vertexCount),this._freeIndices(r,a,e.indexCount),!1;const c=this._storageFor(r);if((0,b.wO)(o,a,c.vertexBuffers,c.indexBuffer,e,s,i),e.vertexFrom=o,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const h in s)this._dirtyMap.markDirtyVertices(e.geometryType,h,o,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var Ge=m(26436),nt=(m(27001),m(36320),m(40150),m(94345),m(82705),m(13006),m(48082));class ot{constructor(e){this.geometryMap=(0,b.Mk)(()=>({indexBuffer:Ge.Z.createIndex(e,35044),vao:null}),(t,s)=>({vertexBuffer:Ge.Z.createVertex(e,b.mR[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const s in t.buffers)t.buffers[s]&&t.buffers[s].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(s,i,r,o,a){if(!t.data.vao){const h={};for(const l in t.buffers)h[l]=t.buffers[l].data.vertexBuffer;t.data.vao=new nt.Z(s,r,i,h,t.data.indexBuffer)}s.bindVAO(t.data.vao),s.drawElements(4,a,5125,Uint32Array.BYTES_PER_ELEMENT*o),s.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((s,i)=>{this._upload(s,i,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const r in i){const o=i[r];o.allDirty?this._uploadVertices(s,t,r):null!=o.from&&null!=o.count&&this._uploadVertices(s,t,r,o.from,o.count)}}}_uploadVertices(e,t,s,i,r){const o=this.geometryMap[t];if(!o)return;const a=e.geometries[t].vertexBuffer[s];if(!a)return;const c=a.stride,h=a.data.buffer;o.buffers[s]&&h.byteLength>0&&(null!=i&&null!=r?o.buffers[s].data.vertexBuffer.setSubData(h,i*c,i*c,(i+r)*c):o.buffers[s].data.vertexBuffer.setData(h))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const a=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&a.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(a,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(a))}}var at=m(79191);class lt extends at.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new Se}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new Se,this._dispRecStore=ie.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new ot(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=ie.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const o=this._data.tileDisplayData.displayObjectRegistry.get(r);if(o){this._data.tileDisplayData.displayList.removeFromList(o.displayRecords);for(const c of o.displayRecords)this._dispRecStore.delete(c);this._data.tileDisplayData.displayObjectRegistry.delete(r);const a=this._data.tileDisplayData.displayObjects.indexOf(o);this._data.tileDisplayData.displayObjects.splice(a,1)}}for(const r of s){let o,a=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(a){const h=a.displayRecords;a.set(r),a.displayRecords=h;const l=a.displayRecords.length;for(let d=0;d<l;++d){const u=a.displayRecords[d],f=r.displayRecords[d];(d>=r.displayRecords.length||u.geometryType!==f.geometryType||u.symbolLevel!==f.symbolLevel||u.zOrder!==f.zOrder||u.materialKey!==f.materialKey)&&(this._dispRecStore.delete(a.displayRecords[d]),d<r.displayRecords.length&&(a.displayRecords[d]=void 0))}a.displayRecords.length=r.displayRecords.length}else{let h;a=r.copy(),a.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,a);const l=this._data.tileDisplayData.displayObjects;if(null!=a.insertAfter)if(o={},a.insertAfter>=0){const d=this._data.tileDisplayData.displayObjectRegistry.get(a.insertAfter);d?(h=l.indexOf(d)+1,h<l.length?l.splice(h,0,a):(l.push(a),h=l.length)):(l.push(a),h=l.length)}else l.unshift(a),h=0;else l.push(a),h=l.length;if(o){const d=r.displayRecords.length>0?1:0;let u=0;for(let f=h-1;f>=0&&u<d;--f)for(let p=l[f].displayRecords.length-1;p>=0&&u<d;--p){const y=l[f].displayRecords[p],v=this._data.tileDisplayData.displayList.getDPInfoType();o[v]||(o[v]=y,++u)}}}const c=r.displayRecords.length;for(let h=0;h<c;++h){const l=r.displayRecords[h];let d=a.displayRecords[h];d?(d.meshData=l.meshData,d.materialKey=l.materialKey):(d=l.copy(),d.vertexFrom=void 0,d.indexFrom=void 0,a.displayRecords[h]=d);const u=l.geometryType,f=this._data.tileDisplayData.displayList.getDPInfoType(),p=e.addOrUpdate.tileBufferData.geometries[u],y=p.vertexBuffer,v=p.indexBuffer;let C;o&&(C=o[f]?this._data.tileDisplayData.displayList.splitAfter(o[f]):-1),t=this._dispRecStore.setMeshData(d,l,y,v,C)&&t,o&&null!=d.indexFrom&&null!=d.indexFrom&&(o[f]=d)}}return t}}class ze{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class P{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new P;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const r in s.vertexBuffer){const{data:o,stride:a}=s.vertexBuffer[r];i.vertexBuffer[r]={data:o.slice(),stride:a}}}return e}static deserialize(e){const t=new P;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,b.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var U=m(38963);function re(n,e,t,...s){e<n.length?n.splice(e,t,...s):n.push(...s)}const ye=new Map;ye.set(U.jx.MAP,[U.LW.FILL,U.LW.LINE,U.LW.MARKER,U.LW.TEXT]),ye.set(U.jx.LABEL,[U.LW.LABEL]),ye.set(U.jx.LABEL_ALPHA,[U.LW.LABEL]);class ge{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const o=r.geometryDPInfo.unified;if(o)for(const a of o){const c=e.painter.getGeometryBrush(a.geometryType),h=t.getGeometry(a.geometryType),l={geometryType:a.geometryType,materialKey:a.materialKey,indexFrom:a.indexFrom,indexCount:a.indexCount,draw:(d,u,f)=>{h.draw(d,u,f,a.indexFrom,a.indexCount)}};c.prepareState(e,t),c.drawGeometry(e,t,l,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new ge;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const o=t[r];if(o.geometryType===e.geometryType&&i>o.indexFrom&&i<=o.indexFrom+o.indexCount){if(i<o.indexFrom+o.indexCount){const a=new X;a.geometryType=o.geometryType,a.materialKey=o.materialKey,a.indexFrom=i,a.indexCount=o.indexFrom+o.indexCount-i,t.splice(r+1,0,a),o.indexCount=i-o.indexFrom}return r}}}_addToList(e,t){const r=this._getDisplayList(e.symbolLevel,e.zOrder),o=null!=t?t:r.length-1,a=o>=0&&o<r.length?r[o]:null;if(null!==a&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{const c=new X;c.indexFrom=e.indexFrom,c.indexCount=e.indexCount,c.materialKey=e.materialKey,c.geometryType=e.geometryType,re(r,o+1,0,c)}}_removeFromList(e){const i=this._getDisplayList(e.symbolLevel,e.zOrder),r=i.length;let o;for(let a=0;a<r;++a){const c=i[a];if(e.indexFrom+e.indexCount>c.indexFrom&&e.indexFrom<c.indexFrom+c.indexCount&&c.geometryType===e.geometryType){o=a;break}}if(void 0!==o){const a=i[o];if(e.indexFrom===a.indexFrom)return a.indexCount-=e.indexCount,a.indexFrom+=e.indexCount,0===a.indexCount&&re(i,o,1),o-1;if(e.indexFrom+e.indexCount===a.indexFrom+a.indexCount)return a.indexCount-=e.indexCount,0===a.indexCount?(re(i,o,1),o-1):o;{const c=a.indexFrom,h=e.indexFrom-a.indexFrom,l=e.indexCount,d=a.indexFrom+a.indexCount-(e.indexFrom+e.indexCount);a.indexCount=h;const u=new X;return u.geometryType=a.geometryType,u.materialKey=a.materialKey,u.indexFrom=c+h+l,u.indexCount=d,re(i,o+1,0,u),o}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let a=0;a<i;a++)if(this.symbolLevels[a].symbolLevel===e){s=this.symbolLevels[a];break}let r;s||(s=new ve,s.symbolLevel=e,this.symbolLevels.push(s));const o=s.zLevels.length;for(let a=0;a<o;a++)if(s.zLevels[a].zLevel===t){r=s.zLevels[a];break}return r||(r=new xe,r.geometryDPInfo=new ne,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class X{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new X;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class ne{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new ne;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}}class xe{constructor(){this.geometryDPInfo=new ne}clone(){const e=new xe;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class ve{constructor(){this.zLevels=[]}clone(){const e=new ve;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class Ae{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class j{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new j(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Ae;for(const r in t){const o=t[r].stride,a=t[r].data,c=[],h=(0,b.Y8)(o);for(let l=0;l<o*e.vertexCount/h;++l)c[l]=a[l+o*e.vertexFrom/h];i.vertexData.set(r,c)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Ae;for(const s in e){const i=e[s].stride,r=e[s].data,o=[],a=(0,b.Y8)(i);for(let c=0;c<i*this.vertexCount/a;++c)o[c]=r[c+i*this.vertexFrom/a];this.meshData.vertexData.set(s,o)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const r in t){const o=t[r].stride,a=this.meshData.vertexData.get(r),c=t[r].data,h=(0,b.Y8)(o);for(let l=0;l<o*this.meshData.vertexCount/h;++l)c[l+o*e/h]=a[l]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const o of e)o.writeMeshDataToBuffers(i,t,r,s),i+=o.vertexCount,r+=o.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new j(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function Ue(n,e){if(null!==e){n.push(e.length);for(const t of e)t.serialize(n);return n}n.push(0)}class Z{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new Z(this.id);return e.set(this),e}clone(){const e=new Z(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),Ue(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new Z(t);return s.displayRecords=function(n,e,t){const s=n.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=e.deserialize(n,t);return i}(e,j,{id:t}),s}}class k{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new ge;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new k;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return Ue(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const o=Z.deserialize(e);s[r]=o,i.set(o.id,o)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new k;return t._deserializeObjects(e),t}}var ct=m(89407);class K{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,b.e2)(e.data,e.stride);return new K(t,e.stride)}static fromVertexVector(e){const t=(0,b.e2)(e.data.buffer(),e.stride);return new K(t,e.stride)}}class E{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=K.decode(e.namedBuffers[r]);return new E(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,b.e2)(e.vertices,e.stride),o={geometry:new K(i,e.stride)};return new E(t,s,o)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=K.fromVertexVector(e.namedVectors[r]);return new E(t,s,i)}}var oe=m(19839);class ut{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const t=this.data.length/(this.stride/4);return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class ft{constructor(e,t,s=!1){this.geometryType=e,this.indexVector=new oe.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,b.$_)(e,s);for(const r in i){const o=i[r];let a;switch(o%4){case 0:case 2:a=new oe.Z(Uint32Array,o*t);break;case 1:case 3:a=new oe.Z(Uint8Array,o*t)}this.namedVectors[r]=new ut(a,o)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const o=this.namedVectors[r];i[r]={},o.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=E.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const ae=new ze,H=new ze;function pt(n,e){const t={};for(const s in n){const i={data:(0,b.C$)(e,n[s]),stride:n[s]};t[s]=i}return t}class z{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){ae.reset();const e=function(n){const e=[[],[],[],[],[]],t=n;for(const s of t)for(const i of s.displayRecords)e[i.geometryType].push(i);return e}(this.tileDisplayData.displayObjects);for(const i of e)for(const r of i)r&&ae.needMore(r.geometryType,r.meshData?r.meshData.vertexCount:r.vertexCount,r.meshData?r.meshData.indexData.length:r.indexCount);const t=e.length,s=new P;for(let i=0;i<t;++i){s.geometries[i].indexBuffer=new Uint32Array(Math.round(1.5*ae.indicesFor(i)));const r=[];for(const h in this.tileBufferData.geometries[i].vertexBuffer)r.push(this.tileBufferData.geometries[i].vertexBuffer[h].stride);const o=z._computeVertexAlignment(r),a=Math.round(1.5*ae.verticesFor(i)),c=z._align(a,o);for(const h in this.tileBufferData.geometries[i].vertexBuffer){const l=this.tileBufferData.geometries[i].vertexBuffer[h].stride;s.geometries[i].vertexBuffer[h]={stride:l,data:(0,b.C$)(c,l)}}}H.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const r=e[i];for(const o of r){if(o.meshData)o.writeMeshDataToBuffers(H.verticesFor(i),s.geometries[i].vertexBuffer,H.indicesFor(i),s.geometries[i].indexBuffer),o.meshData=null;else{const a=this.tileBufferData.geometries[i].vertexBuffer,c=this.tileBufferData.geometries[i].indexBuffer,h=s.geometries[i].vertexBuffer,l=s.geometries[i].indexBuffer,d=H.verticesFor(i),u=H.indicesFor(i);(0,b.wO)(d,u,h,l,o,a,c),o.vertexFrom=d,o.indexFrom=u}H.needMore(i,o.vertexCount,o.indexCount)}}for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new z;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let r=0;for(let o=0;o<t;o++)r=Math.max(r,e[o].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new oe.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,b.Z_)(r=>{const o=e.data[r];if((0,w.pC)(o)){const a=ct.$.from(o.records).getCursor();for(;a.next();){const c=a.id,h=a.materialKey,l=a.indexFrom,d=a.indexCount,u=a.vertexFrom,f=a.vertexCount,p=i.get(c),y=new j(c,r,h);y.indexFrom=l,y.indexCount=d,y.vertexFrom=u,y.vertexCount=f,p.displayRecords.push(y)}s[r]=E.fromVertexData(o,r)}else s[r]=new ft(r,0).intoBuffers()}),z.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new z,s=new k,i=new P;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const o=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=o.indexBuffer,i.geometries[r].vertexBuffer=o.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new z;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new z;s.tileDisplayData=new k,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],o=[[],[],[],[],[]];for(const h of e)for(const l of h.displayRecords)o[l.geometryType].push(l),i[l.geometryType]+=l.meshData.vertexCount,r[l.geometryType]+=l.meshData.indexData.length;const a=new P,c=[(n=t).fill||{},n.line||{},n.icon||{},n.text||{},n.label||{}];var n;for(let h=0;h<5;h++){const l=new Uint32Array(r[h]),d=pt(c[h],i[h]);j.writeAllMeshDataToBuffers(o[h],d,l),a.geometries[h]={indexBuffer:l,vertexBuffer:d}}return s.tileBufferData=a,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var gt=m(15049),xt=m(89213),vt=m(89883),_t=m(83704),Dt=m(34238),Ve=m(15691),bt=m(59802),Ct=m(72181),Y=m(90097),Bt=m(46337),Ft=m(15958);class le extends Ft.i{constructor(e,t){super(e,t,null)}static from(e){const t=Bt.s.createInstance(),s=[],i=e.filter(r=>!!r.geometry);for(const r of i){const o=(0,_.Ji)(r.geometry);(0,Y.E7)(s,[r],o,!1,!1,"uid")}return new le(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new le(this.instance,this._features);return this.copyInto(e),e}}var Tt=m(4820),It=m(5562),_e=m(87296),wt=m(39643),Lt=m(62354),Rt=m(60194),St=m(15645),de=m(21276),Pe=m(82490),x=m(31888);const J=new Pe.Z,De=new Pe.Z,je="esriGeometryPolyline";function Ze(n){n.coords.length=0,n.lengths.length=0}class O{constructor(){this.bounds=(0,F.Ue)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,s,i,r,o){let a;return 0===O._pool.length?a=new O:(a=O._pool.pop(),this._set.delete(a)),a.acquire(e,t,s,i,r,o),a}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,_.oU)(e.geometry)){const s=e.symbol;if((0,w.Wi)(s))return null;if((0,x.yA)(s.type)||(0,x.ab)(s.type)){const i=(0,St.tO)(e.geometry);return(0,de.RF)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r,o){e&&this.set(e,t,s,i,r,o)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r,o){this.graphic=e,this.geometry=s,this.symbolResource=t,this.resolution=i,this.updateBounds(i,r,o)}updateBounds(e,t,s){(0,x.zX)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s)}getGeometryQuantized(e,t,s){const i=this.geometry;if((0,_.oU)(i)){const r=i.rings;if(1===r.length&&2===r[0].length)return(0,de.ym)(e,{paths:[[r[0][0],r[0][1]]]})}else{if((0,_.l9)(i))return Ze(J),Ze(De),(0,Y.u0)(J,i),(0,Y.zj)(De,J,i.hasZ,i.hasM,je,e.scale[0]),(0,Y.Nh)(J,De,i.hasZ,i.hasM,je,e),(0,Y.J6)(J,i.hasZ,i.hasM);if((0,_.aW)(i)){const r=this.resolution*this.size[0],[o,a]=(0,R.uS)(s),c=a-o,h=i.points.filter(l=>{if(l[0]+r>a||l[0]-r<o){const d=[...l];return l[0]+r>a?d[0]-=c:d[0]+=c,(0,F.Zm)(t,l,r)||(0,F.Zm)(t,d,r)}return(0,F.Zm)(t,l,r)});return 0===h.length?{points:h}:(0,de.ym)(e,{points:h})}}return(0,de.ym)(e,this.geometry)}}O._pool=[],O._set=new Set;const Q={minX:0,minY:0,maxX:0,maxY:0},W=(0,F.Ue)();function he(n,e,t,s,i){return Q.minX=e,Q.minY=t,Q.maxX=s,Q.maxY=i,n.search(Q)}function Mt(n){return{minX:n.bounds[0],minY:n.bounds[1],maxX:n.bounds[2],maxY:n.bounds[3]}}class Gt{constructor(e,t,s,i,r,o){this._graphics=i,this._onAdd=r,this._onRemove=o,this._index=(0,It.r)(9,Mt),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=s;const a=e.getClosestInfoForScale(t);a&&(this._currentLevel=a.level,this._resolution=this._tileInfoView.getTileResolution(a.level)),this._metersPerUnit=(0,ee.JY)(e.spatialReference)?(0,Tt.Z7)(e.spatialReference):1}hitTest(e,t,s,i,r){e=(0,Lt.or)(e,this._tileInfoView.spatialReference);const o=.5*i*s;W[0]=e-o,W[1]=t-o,W[2]=e+o,W[3]=t+o;const a=.5*i*(s+x.y1),c=he(this._index,e-a,t-a,e+a,t+a);if(!c||0===c.length)return[];const h={x:e,y:t},l=[];let d;for(const u of c)if(u.graphic.visible)switch((0,_.Ji)(u.geometry)){case"esriGeometryPoint":{const f=u.symbol;if(!f)continue;const p=u.geometry,{x:y,y:v}=p,C=i*this._metersPerUnit;let S;switch(f.type){case"esriTS":S=(0,x.Zw)(y,v,f,u.size,i,r);break;case"expanded-cim":S=(0,x.oD)(y,v,f,i,C,r);break;case"esriSMS":case"esriPMS":S=(0,x.Il)(y,v,f,i,C,r)}(0,_e.CI)(S,h)&&l.push(u)}break;case"esriGeometryPolyline":{const f=u.symbol;let p=0;if("expanded-cim"===f.type){const y=f.layers;if(!y||0===y.length)continue;const v=y.findIndex(S=>"line"===S.type);if(-1===v)continue;p=(0,Rt.hf)(y[v].width,null,null)}else{const y=f.layers;if(!y||0===y.length)continue;p=y[0].width}d=1.5*i*window.devicePixelRatio*(0,Fe.F2)(p),(0,x.nl)(u.geometry,e,t,d)&&l.push(u)}break;case"esriGeometryEnvelope":{const f=u.geometry,p=(0,F.al)(f.xmin,f.ymin,f.xmax,f.ymax);(0,F.kK)(p,W)&&l.push(u);break}case"esriGeometryPolygon":{if((0,_e.CI)(u.geometry,h)){l.push(u);break}const f=(0,wt._w)(u.geometry);if(Math.abs(f.ymax-f.ymin)<5*i||Math.abs(f.xmax-f.xmin)<5*i){const p=(0,F.al)(f.xmin,f.ymin,f.xmax,f.ymax);(0,F.kK)(p,W)&&l.push(u)}break}case"esriGeometryMultipoint":{const f=u.symbol;if(!f)continue;const p=u.geometry.points;let y;for(let v=0;v<p.length;v++)if(y="esriTS"===f.type?(0,x.Zw)(p[v][0],p[v][1],f,u.size,i,r):(0,x.Il)(p[v][0],p[v][1],f,i,i*this._metersPerUnit,r),(0,_e.CI)(y,h)){l.push(u);break}break}}return l.sort((u,f)=>{const p=(0,x.eT)(u.graphic),y=(0,x.eT)(f.graphic);return p===y?f.zorder-u.zorder:p-y}),l.map(u=>u.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((l,d)=>l.zorder-d.zorder),i[0].insertAfter=-1;for(let l=1;l<i.length;l++)i[l].insertAfter=i[l-1].graphic.uid;i.sort((l,d)=>l.graphic.uid-d.graphic.uid),s.sort((l,d)=>l.uid-d.uid);let r,o=0,a=0;const c=[],h={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const l of s){for(a=-2;o<i.length;)if(r=i[o],o++,l.uid===r.graphic.uid){a=r.insertAfter;break}if(!r.geometry||-2===a)continue;const d=r.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference),u=Ce({},r.graphic.attributes);u[this._uidFieldName]=l.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),c.push({centroid:O.getCentroidQuantized(r,h),geometry:d,attributes:u,symbol:r.symbol,groupId:r.groupId,insertAfter:a,zorder:r.zorder})}return c.sort((l,d)=>l.zorder-d.zorder),c}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),o=[];return 0===r.length||this._createTileGraphics(o,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,s){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=O.acquire(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,i),s&&this._index.insert(i),i.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,F.d9)(i.bounds);return i.size[0]=i.size[1]=0,this._index.remove(i),i.set(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView,s=t.getTileResolution(e);this._resolution=s,this._index.clear();const i=this._itemByGraphic,r=[];for(const[o,a]of i)a.updateBounds(this._resolution,this._resolution*this._metersPerUnit,t.spatialReference),a.geometry&&r.push(a);this._index.load(r)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const o=this._uidFieldName,a=this._tileInfoView.spatialReference,{bounds:c}=r;let h,l,d,u;s.sort((f,p)=>f.zorder-p.zorder);for(let f=0;f<s.length;f++){d=s[f],h=d.graphic,l=d.getGeometryQuantized(i,c,a),u=0===f?-1:s[f-1].graphic.uid;const p=Ce({},d.graphic.attributes);p[o]=h.uid,null==d.groupId&&(d.groupId=t.createTemplateGroup(d.symbol,null)),e.push({centroid:O.getCentroidQuantized(d,i),geometry:l,attributes:p,symbol:d.symbol,groupId:d.groupId,insertAfter:u,zorder:d.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,R.uS)(t),o=Math.abs(s[2]-r)<1e-5,a=Math.abs(s[0]-i)<1e-5;if((!o||!a)&&(o||a)){const c=e.resolution;let h;h=(0,F.Ue)(o?[i,s[1],i+c*x.y1,s[3]]:[r-c*x.y1,s[1],r,s[3]]);const l=he(this._index,s[0],s[1],s[2],s[3]),d=he(this._index,h[0],h[1],h[2],h[3]);return[...new Set([...l,...d])]}}return he(this._index,s[0],s[1],s[2],s[3])}}var zt=m(21511);const At=n=>{let e=class extends((0,zt.I)(n)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,I._)([(0,M.Cb)()],e.prototype,"graphics",void 0),(0,I._)([(0,M.Cb)()],e.prototype,"renderer",void 0),(0,I._)([(0,M.Cb)()],e.prototype,"updating",void 0),(0,I._)([(0,M.Cb)()],e.prototype,"view",void 0),e=(0,I._)([(0,Te.j)("esri.views.layers.GraphicsView")],e),e};var Ut=m(68121);function be(n,e,t){if(t.has(n))return t.get(n);const s={tile:e,addedOrModified:[],removed:[]};return t.set(n,s),s}let V=class extends(At((0,B.p)(Be.Z))){constructor(n){super(n),this._storage=new Ct.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(n,e){if(n){const t=(0,Ve.MD)({indexCount:0,fields:{}},"feature",n);this._matcher=(0,Dt.fL)(t,e,null)}}_createDisplayId(n){return this._displayIds.has(n)||this._displayIds.set(n,this._storage.createDisplayId()),this._displayIds.get(n)}initialize(){this._attributeStore=new bt.ZP({type:"local",initialize:i=>Promise.resolve(this.container.attributeView.initialize(i)),update:i=>this.container.attributeView.requestUpdate(i),render:()=>this.container.requestRender()},(0,Ut.Z)()),this.container.hasHighlight=()=>!!this._highlightIds.size,this._graphicStore=new Gt(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,i=>{this._createDisplayId(i.uid),this._setFilterState(i.uid,i.visible)},i=>{const r=this._displayIds.get(i.uid);this._displayIds.delete(i.uid),this._storage.releaseDisplayId(r)});const t=new vt.W(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._createMatcher(this.renderer,t),this._meshFactory=new xt.j(null,this.uid,t),this._templateStore=t,this.handles.add([this.watch("renderer",i=>{this._createMatcher(i,t);for(const r of this.graphics)this._pendingUpdate.updated.add(r);this.requestUpdate()}),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",i=>this._graphicsChangeHandler(i)),"graphics"),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(n,e){if(!this.view||!this.view.position)return Promise.resolve(null);const t=this.view.toMap((0,Fe.vW)(n,e));return this.searchFeatures(t).then(s=>s&&s.length?s[0]:null)}searchFeatures(n,e=2){var t=this;return(0,L.Z)(function*(){return t._graphicStore.hitTest(n.x,n.y,e,t.view.state.resolution,t.view.state.rotation)})()}update(n){(0,D.k_)(this._controller.signal);const t=this.view.featuresTilingScheme.getClosestInfoForScale(n.state.scale).level;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(n){this.updateRequested&&(this.updateRequested=!1,this.update(n))}graphicUpdateHandler(n){const{graphic:e,property:t,newValue:s}=n;switch(t){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,s),this._attributeStore.sendUpdates()}}addHighlight(n){for(const e of n)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}removeHighlight(n){for(const e of n)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;0===t?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){const n=Array.from(this._highlightIds.keys()),e=n.map(t=>this._displayIds.get(t));this._attributeStore.setHighlight(n,e)}_getIntersectingTiles(n){const e=this._graphicStore.getBounds(n);if(!e||0===(0,F.bf)(e)||0===(0,F.Cb)(e))return[];const t=(0,x.Zu)(e,this.view.spatialReference);return(0,w.pC)(t)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(n){var e=this;return(0,L.Z)(function*(){(0,D.k_)(e._controller.signal);const t=n.tile,s=e._getGraphicsData(e._templateStore,t,n.addedOrModified),i=yield e._processGraphics(t,s);return(0,D.k_)(e._controller.signal),e._patchTile(t.key,{type:"update",addOrUpdate:i,remove:n.removed,end:!0,clear:!1,sort:!1}),i})()}_patchTile(n,e){if(!this._tiles.has(n))return;const t=this._tiles.get(n);this.container.onTileData(t,e),this.container.requestRender()}_graphicsChangeHandler(n){const e=this._pendingUpdate;for(const t of n.added)e.added.add(t);for(const t of n.moved)e.updated.add(t);for(const t of n.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const n={added:[],removed:[],updated:[]};if(!this.graphics)return n;const e=this._pendingUpdate;for(const t of this.graphics.items)e.added.has(t)?n.added.push(t):e.updated.has(t)&&n.updated.push(t);for(const t of e.removed)this._graphicStore.has(t)&&n.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),n}_updateGraphics(){var n=this;return(0,L.Z)(function*(){n._processing=!0;const{added:e,removed:t,updated:s}=n._getGraphicsToUpdate(),i=n._tilesToUpdate;let r;try{if(!n._graphicStoreUpdate){const u=n.view.featuresTilingScheme.getClosestInfoForScale(n.view.state.scale).level;n._graphicStore.updateLevel(u)}const o=[],a=new Array(e.length+t.length);for(let d=0;d<s.length;d++){const u=s[d],f=n._getIntersectingTiles(u);for(const p of f)r=p.id,be(r,p,i).removed.push(n._displayIds.get(u.uid));o.push(n._updateGraphic(u,null)),a[d]=u}const c=s.length;for(let d=0;d<e.length;d++){const u=e[d];a[c+d]=u,n._graphicsSet.add(u),o.push(n._addGraphic(u))}for(const d of t){n._abortProcessingGraphic(d.uid);const u=n._getIntersectingTiles(d);for(const f of u)r=f.id,be(r,f,i).removed.push(n._displayIds.get(d.uid));n._graphicsSet.delete(d),n._graphicStore.remove(d)}let h;n._flipUpdatingGraphics(),yield Promise.all(o);for(let d=0;d<a.length;d++){h=a[d];const u=n._getIntersectingTiles(h);for(const f of u)r=f.id,be(r,f,i).addedOrModified.push(h)}n._graphicStore.updateZ();const l=[];for(const[d,u]of i)l.push(n._updateTile(u));yield Promise.all(l)}catch(o){(0,D.D_)(o)}for(const o of t)try{const a=yield n._getSymbolForGraphic(o,{});a&&n._hashToExpandedSymbol.delete(a.hash())}catch(a){(0,D.D_)(a)}i.clear(),n.notifyChange("updating"),n._processing=!1,n._needsProcessing&&(n._needsProcessing=!1,n._updateGraphics())})()}_getArcadeInfo(n){const e=(n.attributes?Object.keys(n.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof n.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return(0,w.Wi)(n.geometry)?null:{geometryType:(0,_.Ji)(n.geometry),spatialReference:Ne.Z.fromJSON(n.geometry.spatialReference),fields:e}}_getSymbolForGraphic(n,e){var t=this;return(0,L.Z)(function*(){return(0,D.k_)(t._controller.signal),(0,w.pC)(n.symbol)?n.symbol:(0,w.pC)(t.renderer)?t.renderer.getSymbolAsync(n,{scale:t.view.scale,abortOptions:e}):t._getNullSymbol(n)})()}_getSymbolResources(n,e){var t=this;return(0,L.Z)(function*(){if((0,D.k_)(t._controller.signal),!t.container.stage)return null;const s=yield t._getSymbolForGraphic(n,e),i=s.hash();let r=t._hashToExpandedSymbol.get(i);if(!r){let o=t._hashTpExpandedSymbolPromise.get(i);if(o)r=yield o,(0,D.k_)(t._controller.signal);else{const a=t._getArcadeInfo(n),c=(0,Ve.PY)(s);o=(0,tt.B)(c,a,e),t._hashTpExpandedSymbolPromise.set(i,o);try{r=yield o,t._hashTpExpandedSymbolPromise.delete(i),t._hashToExpandedSymbol.set(i,r)}catch(h){t._hashTpExpandedSymbolPromise.delete(i),(0,D.k_)(h)}}}if("esriTS"===r.type){const o=[],[a]=(0,_t.E)(r.text);for(let l=0;l<a.length;l++)o.push(a.charCodeAt(l));const c={symbol:r,id:0,glyphIds:o},[{mosaicItem:h}]=yield t.container.getMaterialItems([c]);return{symbol:r,mosaicItem:h}}return{symbol:r,mosaicItem:null}})()}_projectAndNormalizeGeometry(n,e){var t=this;return(0,L.Z)(function*(){if((0,D.k_)(t._controller.signal),(0,w.Wi)(n.geometry)||"mesh"===n.geometry.type)return null;let s=n.geometry;if((0,_.oU)(s))s.rings=s.rings;else if((0,_.l9)(s))s.paths=s.paths;else if((0,_.YX)(s)){const o=yield t._getSymbolForGraphic(n,e);(0,D.k_)(t._controller.signal),s=(0,x.yA)(o.type)||(0,x.ab)(o.type)?s.center:We.Z.fromExtent(s)}yield(0,Re._W)(s.spatialReference,t.view.spatialReference);const i=function(n){if(!n)return null;if("mesh"===n.type)return n.toJSON();let e=null;const t=n.spatialReference,s=(0,ee.C5)(t);if(!s)return n.toJSON();const i=t.isWebMercator?102100:4326,r=R.UZ[i].maxX,o=R.UZ[i].minX,a=R.UZ[i].plus180Line,c=R.UZ[i].minus180Line;let h;const l=n.toJSON();if((0,_.wp)(l))h=we(l,r,o);else if((0,_.aW)(l))l.points=l.points.map(d=>we(d,r,o)),h=l;else if((0,_.YX)(l))h=function(n,e){if(!e)return n;const t=function(n,e){const t=[],{ymin:s,ymax:i}=n,r=n.xmax-n.xmin,o=n.xmin,a=n.xmax;let c;const[h,l]=e.valid;c=Le(n.xmin,e);const d=c.x,u=c.frameId;c=Le(n.xmax,e);const f=c.x,p=c.frameId,y=d===f&&r>0;if(r>2*l){const v={xmin:o<a?d:f,ymin:s,xmax:l,ymax:i},C={xmin:h,ymin:s,xmax:o<a?f:d,ymax:i},S={xmin:0,ymin:s,xmax:l,ymax:i},$={xmin:h,ymin:s,xmax:0,ymax:i},ce=[],ue=[];te(v,S)&&ce.push(u),te(v,$)&&ue.push(u),te(C,S)&&ce.push(p),te(C,$)&&ue.push(p);for(let fe=u+1;fe<p;fe++)ce.push(fe),ue.push(fe);t.push({extent:v,frameIds:[u]},{extent:C,frameIds:[p]},{extent:S,frameIds:ce},{extent:$,frameIds:ue})}else d>f||y?t.push({extent:{xmin:d,ymin:s,xmax:l,ymax:i},frameIds:[u]},{extent:{xmin:h,ymin:s,xmax:f,ymax:i},frameIds:[p]}):t.push({extent:{xmin:d,ymin:s,xmax:f,ymax:i},frameIds:[u]});return t}(n,e).map(s=>s.extent);return t.length<2?t[0]||n:t.length>2?(n.xmin=e.valid[0],n.xmax=e.valid[1],n):{rings:t.map(s=>[[s.xmin,s.ymin],[s.xmin,s.ymax],[s.xmax,s.ymax],[s.xmax,s.ymin],[s.xmin,s.ymin]])}}(l,s);else if((0,_.oU)(l)||(0,_.l9)(l)){const d=et;(0,ke.$P)(d,l);const u={xmin:d[0],ymin:d[1],xmax:d[2],ymax:d[3]},f=(0,R.XZ)(u.xmin,o)*(2*r),p=0===f?l:function(n,e){const t=(0,R.x3)(n);for(const s of t)for(const i of s)i[0]+=e;return n}(l,f);u.xmin+=f,u.xmax+=f,(0,Ie.jQ)(u,a)&&u.xmax!==r||(0,Ie.jQ)(u,c)&&u.xmin!==o?e=p:h=p}else h=n.toJSON();return null!==e?(new qe).cut(e,r):h}(s),r=(0,Re.iV)(i,s.spatialReference,t.view.spatialReference);return(0,Xe.pW)(r),r})()}_onTileUpdate(n){const e=(0,ee.C5)(this.view.spatialReference);if(n.added&&n.added.length>0)for(const t of n.added)this._addNewTile(t,e);if(n.removed&&n.removed.length>0)for(const t of n.removed)this._removeTile(t.key)}_addGraphic(n){var e=this;return(0,L.Z)(function*(){e._abortProcessingGraphic(n.uid),(0,D.k_)(e._controller.signal);const t=(0,D.yi)();e._graphicIdToAbortController.set(n.uid,t);const s={signal:t.signal};try{yield e._addOrUpdateGraphic(n,s),(0,D.k_)(e._controller.signal),e._graphicIdToAbortController.delete(n.uid)}catch(i){if(e._graphicIdToAbortController.delete(n.uid),!(0,D.D_)(i))throw i}})()}_updateGraphic(n,e){var t=this;return(0,L.Z)(function*(){(0,D.k_)(t._controller.signal);const s=t._projectAndNormalizeGeometry(n,e),i=t._getSymbolResources(n,e),[r,o]=yield Promise.all([s,i]);(0,D.k_)(t._controller.signal),t._graphicStore.addOrModify(n,o,r)})()}_addOrUpdateGraphic(n,e){var t=this;return(0,L.Z)(function*(){(0,D.k_)(t._controller.signal);const s=t._projectAndNormalizeGeometry(n,e),i=t._getSymbolResources(n,e);try{const[r,o]=yield Promise.all([s,i]);(0,D.k_)(t._controller.signal),t._addProjectedGraphic(n,o,r)}catch(r){if(!(0,D.D_)(r))throw r}})()}_addProjectedGraphic(n,e,t){this._graphicsSet.has(n)&&this._graphicStore.addOrModify(n,e,t)}_addTile(n){const e=this.view.featuresTilingScheme.getTileBounds((0,F.Ue)(),n),t=new lt(n,e[0],e[3]);return this._tiles.set(n,t),this.container.addChild(t),t}_addNewTile(n,e){var t=this;return(0,L.Z)(function*(){const s=t._addTile(n.key),i=t._graphicStore.queryTileData(t._templateStore,n);if(0===i.length)return;if(e){const o=Math.round((e.valid[1]-e.valid[0])/n.resolution);for(const a of i)a.geometry&&((0,_.wp)(a.geometry)||(0,_.aW)(a.geometry))&&t._wrapPoints(a,o)}const r=n.key;t._tileUpdateSet.add(n.key),t.notifyChange("updating");try{const o={type:"update",clear:!1,addOrUpdate:yield t._processGraphics(n,i),remove:[],end:!0,sort:!1};s.patch(o),t._tileUpdateSet.delete(r),t.notifyChange("updating")}catch(o){if(t._tileUpdateSet.delete(r),t.notifyChange("updating"),!(0,D.D_)(o))throw o}})()}_removeTile(n){if(!this._tiles.has(n))return;const e=this._tiles.get(n);this.container.removeChild(e),e.destroy(),this._tiles.delete(n)}_setFilterState(n,e){const t=this._displayIds.get(n),s=this._attributeStore.getHighlightFlag(n);this._attributeStore.setData(t,0,0,s|(e?st.Zd:0))}_getGraphicsData(n,e,t){const s=(0,ee.C5)(this.view.spatialReference),i=this._graphicStore.getGraphicsData(n,e,t);if(s){const r=Math.round((s.valid[1]-s.valid[0])/e.resolution);for(const o of i)o.geometry&&((0,_.wp)(o.geometry)||(0,_.aW)(o.geometry))&&this._wrapPoints(o,r)}return i}_wrapPoints(n,e){const t=n.geometry;(0,_.aW)(t)?this._wrapMultipoint(t,e):this._wrapPoint(n,e)}_wrapMultipoint(n,e){const t=n.points,s=[];let i=0,r=0;for(const[o,a]of t){if(s.push([o+i,a]),i=0,e===x.I_){const c=5*x.y1;o+r<c?(s.push([e,0]),i=-e):o+r>x.I_-c&&(s.push([-e,0]),i=e)}else o+r<-x.y1?(s.push([e,0]),i=-e):o+r>x.I_+x.y1&&(s.push([-e,0]),i=e);r+=o}n.points=s}_wrapPoint(n,e){const t=n.geometry;if(e===x.I_){const s=5*x.y1;t.x<s?n.geometry={points:[[t.x,t.y],[e,0]]}:t.x>x.I_-s&&(n.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-x.y1?n.geometry={points:[[t.x,t.y],[e,0]]}:t.x>x.I_+x.y1&&(n.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(n,e,t){var s=this;return(0,L.Z)(function*(){if(!e||!e.length||!s._meshFactory)return null;const i=le.from(e),r=s._meshFactory,o=yield s._matcher;return yield r.analyzeGraphics(i,o,null,null,t),s._attributeStore.sendUpdates(),s._processAnalyzedGraphics(n,i)})()}_processAnalyzedGraphics(n,e){const t=this._meshFactory,s=e.getSize(),i=e.getCursor(),o=new gt._(n.key.id,{features:s,records:s,metrics:0},!1,!1,!1),a=[];for(;i.next();){const d=i.readGraphic();d.insertAfter=-1===d.insertAfter?-1:this._displayIds.get(d.insertAfter),d.displayId=this._displayIds.get(d.attributes[this.uid]);const u=new Z(d.displayId);u.insertAfter=d.insertAfter,a.push(u),t.writeGraphic(o,i,n.level)}const h=o.serialize(n.tileInfoView.tileInfo.isWrappable);return 1!==h.length?new z:z.fromVertexData(h[0].message,a)}_abortProcessingGraphic(n){this._graphicIdToAbortController.has(n)&&this._graphicIdToAbortController.get(n).abort()}_getNullSymbol(n){const e=n.geometry;return(0,_.l9)(e)?me.mW:(0,_.oU)(e)||(0,_.YX)(e)?me.kD:me.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,I._)([(0,M.Cb)({constructOnly:!0})],V.prototype,"requestUpdateCallback",void 0),(0,I._)([(0,M.Cb)()],V.prototype,"container",void 0),(0,I._)([(0,M.Cb)({constructOnly:!0})],V.prototype,"graphics",void 0),(0,I._)([(0,M.Cb)()],V.prototype,"updating",null),(0,I._)([(0,M.Cb)()],V.prototype,"view",void 0),(0,I._)([(0,M.Cb)()],V.prototype,"updateRequested",void 0),V=(0,I._)([(0,Te.j)("esri.views.2d.layers.support.GraphicsView2D")],V);var Ot=V}}]);