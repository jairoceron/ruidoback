package mintrabajo.dashboard.repository;

import java.util.Date;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import mintrabajo.dashboard.entity.Valor;

@Repository
public interface DashboardCortesRepository extends JpaRepository<Valor, Long> {
	
    
    @Query(value="SELECT\n"
    		+ "    sum(activos), sum(finalizados), sum(despacho), sum(ivc),sum(rcc), sum(ivcrcc), sum(exp_caducidad), sum(exp_caducidad_semanal), sum(exp_caducidad_mensual), sum(exp_caducidad_trimestral)\n"
    		+ "FROM\n"
    		+ "(select \n"
    		+ "case when p.proceso_estado = 'ACTIVO' then 1 else 0 end activos,\n"
    		+ "case when p.proceso_estado = 'FINALIZADO' then 1 else 0 end finalizados,\n"
    		+ "case when p.PROCESO_NAT_INVESTIGACION = 'RIESGOS LABORALES' then 1 else 0 end despacho,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc <> 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc <> 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end rcc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivcrcc,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION >= SYSDATE ) then 1 else 0 end exp_caducidad,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE and SYSDATE+7 ) then 1 else 0 end exp_caducidad_semanal,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE+8 and SYSDATE+30 ) then 1 else 0 end exp_caducidad_mensual,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION  BETWEEN SYSDATE+31 and SYSDATE+90 ) then 1 else 0 end exp_caducidad_trimestral\n"
    		+ "from IVC_V_REPORTE_PROCESO p, ivc_organigrama o\n"
    		+ "where o.organigrama_pk = p.organigrama_pk \n"
    		+ "AND o.organigrama_fk not in (1, 81050)\n"
    		+ "AND p.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ ")", nativeQuery = true)
    List<Object[]> dashboardPorCortes(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to  );
    //por flujo
    @Query(value="SELECT\n"
    		+ "    sum(activos), sum(finalizados), sum(despacho), sum(ivc),sum(rcc), sum(ivcrcc), sum(exp_caducidad), sum(exp_caducidad_semanal), sum(exp_caducidad_mensual), sum(exp_caducidad_trimestral)\n"
    		+ "FROM\n"
    		+ "(select \n"
    		+ "case when p.proceso_estado = 'ACTIVO' then 1 else 0 end activos,\n"
    		+ "case when p.proceso_estado = 'FINALIZADO' then 1 else 0 end finalizados,\n"
    		+ "case when p.PROCESO_NAT_INVESTIGACION = 'RIESGOS LABORALES' then 1 else 0 end despacho,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc <> 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc <> 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end rcc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivcrcc,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION >= SYSDATE ) then 1 else 0 end exp_caducidad,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE and SYSDATE+7 ) then 1 else 0 end exp_caducidad_semanal,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE+8 and SYSDATE+30 ) then 1 else 0 end exp_caducidad_mensual,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION  BETWEEN SYSDATE+31 and SYSDATE+90 ) then 1 else 0 end exp_caducidad_trimestral\n"
    		+ "from IVC_V_REPORTE_PROCESO p, ivc_organigrama o\n"
    		+ "where o.organigrama_pk = p.organigrama_pk \n"
    		+ "AND o.organigrama_fk not in (1, 81050)\n"
    		+ "AND p.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND p.flujo_pk = :flujo_pk\n"
    		+ ")", nativeQuery = true)
    List<Object[]> dashboardPorCortes(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to,@Param("flujo_pk") Long flujo);
    //por idDt
    @Query(value="SELECT\n"
    		+ "    sum(activos), sum(finalizados), sum(despacho), sum(ivc),sum(rcc), sum(ivcrcc), sum(exp_caducidad), sum(exp_caducidad_semanal), sum(exp_caducidad_mensual), sum(exp_caducidad_trimestral)\n"
    		+ "FROM\n"
    		+ "(select \n"
    		+ "case when p.proceso_estado = 'ACTIVO' then 1 else 0 end activos,\n"
    		+ "case when p.proceso_estado = 'FINALIZADO' then 1 else 0 end finalizados,\n"
    		+ "case when p.PROCESO_NAT_INVESTIGACION = 'RIESGOS LABORALES' then 1 else 0 end despacho,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc <> 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc <> 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end rcc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivcrcc,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION >= SYSDATE ) then 1 else 0 end exp_caducidad,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE and SYSDATE+7 ) then 1 else 0 end exp_caducidad_semanal,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE+8 and SYSDATE+30 ) then 1 else 0 end exp_caducidad_mensual,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION  BETWEEN SYSDATE+31 and SYSDATE+90 ) then 1 else 0 end exp_caducidad_trimestral\n"
    		+ "from IVC_V_REPORTE_PROCESO p, ivc_organigrama o\n"
    		+ "where o.organigrama_pk = p.organigrama_pk \n"
    		+ "AND o.organigrama_fk not in (1, 81050)\n"
    		+ "AND p.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND (o.organigrama_pk = :organigrama_pk or o.organigrama_fk = :organigrama_pk) \n"
    		+ ")", nativeQuery = true)
    List<Object[]> dashboardPorCortesIdDt(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to, @Param("organigrama_pk") Long idDt);
    
  //por flujo y Dt
    @Query(value="SELECT\n"
    		+ "    sum(activos), sum(finalizados), sum(despacho), sum(ivc),sum(rcc), sum(ivcrcc), sum(exp_caducidad), sum(exp_caducidad_semanal), sum(exp_caducidad_mensual), sum(exp_caducidad_trimestral)\n"
    		+ "FROM\n"
    		+ "(select \n"
    		+ "case when p.proceso_estado = 'ACTIVO' then 1 else 0 end activos,\n"
    		+ "case when p.proceso_estado = 'FINALIZADO' then 1 else 0 end finalizados,\n"
    		+ "case when p.PROCESO_NAT_INVESTIGACION = 'RIESGOS LABORALES' then 1 else 0 end despacho,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc <> 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc <> 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end rcc,\n"
    		+ "case when (p.PROCESO_NAT_INVESTIGACION = 'NORMAS LABORALES' and o.organigrama_pivc = 'SI' and o.organigrama_rcc = 'SI' and o.organigrama_act <> 'SI') then 1 else 0 end ivcrcc,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION >= SYSDATE ) then 1 else 0 end exp_caducidad,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE and SYSDATE+7 ) then 1 else 0 end exp_caducidad_semanal,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION BETWEEN SYSDATE+8 and SYSDATE+30 ) then 1 else 0 end exp_caducidad_mensual,\n"
    		+ "case when (p.proceso_estado <> 'FINALIZADO' and PROCESO_FECHA_PRESCRIPCION  BETWEEN SYSDATE+31 and SYSDATE+90 ) then 1 else 0 end exp_caducidad_trimestral\n"
    		+ "from IVC_V_REPORTE_PROCESO p, ivc_organigrama o\n"
    		+ "where o.organigrama_pk = p.organigrama_pk \n"
    		+ "AND o.organigrama_fk not in (1, 81050)\n"
    		+ "AND p.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND p.flujo_pk = :flujo_pk\n"
    		+ "AND (o.organigrama_pk = :organigrama_pk or o.organigrama_fk = :organigrama_pk) \n"
    		+ ")", nativeQuery = true)
    List<Object[]> dashboardPorCortes(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to,@Param("flujo_pk") Long flujo, @Param("organigrama_pk") Long idDt);
    
    
    
    //INSUMOS **********
    
    @Query(value = "SELECT IVC_V_REPORTE_PROCESO.PROCESO_PK ID_EXPEDIENTE, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NUMERO_RADICACION NUMERO_RADICACION,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ORIGEN_ACTUACION ORIGEN_ACTUACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ESTADO ESTADO_PROCESO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NAT_INVESTIGACION NATURALEZA_INVESTIGACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLANTES RESUMEN_QUERELLANTES, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLADOS RESUMEN_QUERELLADOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.CADENA_ESTADO_ACTIVIDAD ESTADO_ACTIVIDAD, \n"
    		+ "IVC_V_REPORTE_PROCESO.PERFIL_NOMBRE PERFIL_ACTIVO,\n"
    		+ "IVC_V_REPORTE_PROCESO.ACTIVIDAD_NOMBRE ACTIVIDAD_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_NOMBRE ETAPA_ACTUAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_DESCRIPCION ETAPA_ACTUAL_DESC, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_NOMBRE FLUJO_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FLUJO_NOMBRE CADENA_FLUJO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_RADICACION ORGANIGRAMA_RADICADO, \n"
    		+ "IVC_V_REPORTE_PROCESO.GRUPO_REPARTO GRUPO_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.TERRITORIAL_REPARTO TERRITORIAL_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_NOMBRE USUARIO_REPARTO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_REPARTO ORGANIGRAMA_NOMBRE_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.USERNAME USUARIO_DIRECTORIO_ACTIVO, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_ESTADO USUARIO_ESTADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_DESCRIPCION CIUU_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_CODIGO CIIU_CODIGO_QUERELLADO,\n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_NOM SECTOR_CRITICO_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_DESC SECTOR_CRITICO_DESC_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_RECURSO.PROCESO_RECURSO_TIPO TIPO_RECURSO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_RADICACION FECHA_RADICACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS FECHA_HECHOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS_FIN FECHA_HECHOS_FIN, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_PRESCRIPCION FECHA_PRESCIPCION,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_PREAIGNACION FECHA_PREASIGNACION_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_REPARTO_ACT FECHA_REPARTO,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_VALOR VALOR_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.MOTIVO_SANCION_TIPO TIPO_DECISION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.CRITERIO_GRAD_SANCION_CRITERIO CRITERIO_GRADUACION_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_EJ EJECUTANTE,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_INFRA INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_INFRA TIPO_INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_SANCION TIPO_SANCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_MAT_DES MATERIA_CONDUCTA, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_PK \n"
    		+ "FROM IVC_V_REPORTE_PROCESO  LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_MOTIVO_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLADO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_QUERELLADO.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_RECURSO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_RECURSO.PROCESO_PK  \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK = IVC_V_REPORTE_PROCESO.PROCESO_PK AND IVC_V_REPORTE_RECURSO.PROCESO_QUERELLADO_PK  = IVC_V_REPORTE_QUERELLADO.PROCESO_QUERELLADO_PK\n  "
    		+ " WHERE IVC_V_REPORTE_PROCESO.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ " AND IVC_V_REPORTE_PROCESO.organigrama_pk in (select organigrama_pk from ivc_organigrama where organigrama_fk not in (1, 81050))\n",
            nativeQuery = true)
    List<Object[]> insumoDashBoardCortes(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to  );
    //por flujo
    @Query(value = "SELECT IVC_V_REPORTE_PROCESO.PROCESO_PK ID_EXPEDIENTE, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NUMERO_RADICACION NUMERO_RADICACION,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ORIGEN_ACTUACION ORIGEN_ACTUACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ESTADO ESTADO_PROCESO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NAT_INVESTIGACION NATURALEZA_INVESTIGACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLANTES RESUMEN_QUERELLANTES, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLADOS RESUMEN_QUERELLADOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.CADENA_ESTADO_ACTIVIDAD ESTADO_ACTIVIDAD, \n"
    		+ "IVC_V_REPORTE_PROCESO.PERFIL_NOMBRE PERFIL_ACTIVO,\n"
    		+ "IVC_V_REPORTE_PROCESO.ACTIVIDAD_NOMBRE ACTIVIDAD_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_NOMBRE ETAPA_ACTUAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_DESCRIPCION ETAPA_ACTUAL_DESC, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_NOMBRE FLUJO_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FLUJO_NOMBRE CADENA_FLUJO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_RADICACION ORGANIGRAMA_RADICADO, \n"
    		+ "IVC_V_REPORTE_PROCESO.GRUPO_REPARTO GRUPO_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.TERRITORIAL_REPARTO TERRITORIAL_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_NOMBRE USUARIO_REPARTO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_REPARTO ORGANIGRAMA_NOMBRE_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.USERNAME USUARIO_DIRECTORIO_ACTIVO, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_ESTADO USUARIO_ESTADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_DESCRIPCION CIUU_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_CODIGO CIIU_CODIGO_QUERELLADO,\n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_NOM SECTOR_CRITICO_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_DESC SECTOR_CRITICO_DESC_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_RECURSO.PROCESO_RECURSO_TIPO TIPO_RECURSO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_RADICACION FECHA_RADICACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS FECHA_HECHOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS_FIN FECHA_HECHOS_FIN, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_PRESCRIPCION FECHA_PRESCIPCION,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_PREAIGNACION FECHA_PREASIGNACION_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_REPARTO_ACT FECHA_REPARTO,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_VALOR VALOR_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.MOTIVO_SANCION_TIPO TIPO_DECISION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.CRITERIO_GRAD_SANCION_CRITERIO CRITERIO_GRADUACION_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_EJ EJECUTANTE,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_INFRA INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_INFRA TIPO_INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_SANCION TIPO_SANCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_MAT_DES MATERIA_CONDUCTA, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_PK \n"
    		+ "FROM IVC_V_REPORTE_PROCESO  LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_MOTIVO_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLADO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_QUERELLADO.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_RECURSO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_RECURSO.PROCESO_PK  \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK = IVC_V_REPORTE_PROCESO.PROCESO_PK AND IVC_V_REPORTE_RECURSO.PROCESO_QUERELLADO_PK  = IVC_V_REPORTE_QUERELLADO.PROCESO_QUERELLADO_PK\n  "
    		+ " WHERE IVC_V_REPORTE_PROCESO.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND IVC_V_REPORTE_PROCESO.flujo_pk = :flujo_pk\n"
    		+ "AND IVC_V_REPORTE_PROCESO.organigrama_pk in (select organigrama_pk from ivc_organigrama where organigrama_fk not in (1, 81050))\n",

            nativeQuery = true)
    List<Object[]> insumoDashBoardCortes(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to ,@Param("flujo_pk") Long flujo );
    //por idDt
    @Query(value = "SELECT IVC_V_REPORTE_PROCESO.PROCESO_PK ID_EXPEDIENTE, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NUMERO_RADICACION NUMERO_RADICACION,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ORIGEN_ACTUACION ORIGEN_ACTUACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ESTADO ESTADO_PROCESO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NAT_INVESTIGACION NATURALEZA_INVESTIGACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLANTES RESUMEN_QUERELLANTES, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLADOS RESUMEN_QUERELLADOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.CADENA_ESTADO_ACTIVIDAD ESTADO_ACTIVIDAD, \n"
    		+ "IVC_V_REPORTE_PROCESO.PERFIL_NOMBRE PERFIL_ACTIVO,\n"
    		+ "IVC_V_REPORTE_PROCESO.ACTIVIDAD_NOMBRE ACTIVIDAD_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_NOMBRE ETAPA_ACTUAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_DESCRIPCION ETAPA_ACTUAL_DESC, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_NOMBRE FLUJO_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FLUJO_NOMBRE CADENA_FLUJO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_RADICACION ORGANIGRAMA_RADICADO, \n"
    		+ "IVC_V_REPORTE_PROCESO.GRUPO_REPARTO GRUPO_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.TERRITORIAL_REPARTO TERRITORIAL_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_NOMBRE USUARIO_REPARTO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_REPARTO ORGANIGRAMA_NOMBRE_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.USERNAME USUARIO_DIRECTORIO_ACTIVO, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_ESTADO USUARIO_ESTADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_DESCRIPCION CIUU_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_CODIGO CIIU_CODIGO_QUERELLADO,\n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_NOM SECTOR_CRITICO_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_DESC SECTOR_CRITICO_DESC_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_RECURSO.PROCESO_RECURSO_TIPO TIPO_RECURSO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_RADICACION FECHA_RADICACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS FECHA_HECHOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS_FIN FECHA_HECHOS_FIN, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_PRESCRIPCION FECHA_PRESCIPCION,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_PREAIGNACION FECHA_PREASIGNACION_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_REPARTO_ACT FECHA_REPARTO,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_VALOR VALOR_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.MOTIVO_SANCION_TIPO TIPO_DECISION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.CRITERIO_GRAD_SANCION_CRITERIO CRITERIO_GRADUACION_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_EJ EJECUTANTE,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_INFRA INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_INFRA TIPO_INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_SANCION TIPO_SANCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_MAT_DES MATERIA_CONDUCTA, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_PK \n"
    		+ "FROM IVC_V_REPORTE_PROCESO  LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_MOTIVO_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLADO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_QUERELLADO.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_RECURSO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_RECURSO.PROCESO_PK  \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK = IVC_V_REPORTE_PROCESO.PROCESO_PK AND IVC_V_REPORTE_RECURSO.PROCESO_QUERELLADO_PK  = IVC_V_REPORTE_QUERELLADO.PROCESO_QUERELLADO_PK\n  "
    		+ " WHERE IVC_V_REPORTE_PROCESO.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND IVC_V_REPORTE_PROCESO.organigrama_pk in (select organigrama_pk from ivc_organigrama where (organigrama_pk = :organigrama_pk or organigrama_fk = :organigrama_pk) AND organigrama_fk not in (1, 81050))\n",
            nativeQuery = true)
    List<Object[]> insumoDashBoardCortesIdDt(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to ,@Param("organigrama_pk") Long idDt );
  //por flujo y DT
    @Query(value = "SELECT IVC_V_REPORTE_PROCESO.PROCESO_PK ID_EXPEDIENTE, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NUMERO_RADICACION NUMERO_RADICACION,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ORIGEN_ACTUACION ORIGEN_ACTUACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_ESTADO ESTADO_PROCESO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_NAT_INVESTIGACION NATURALEZA_INVESTIGACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLANTES RESUMEN_QUERELLANTES, \n"
    		+ "IVC_V_REPORTE_PROCESO.QUERELLADOS RESUMEN_QUERELLADOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.CADENA_ESTADO_ACTIVIDAD ESTADO_ACTIVIDAD, \n"
    		+ "IVC_V_REPORTE_PROCESO.PERFIL_NOMBRE PERFIL_ACTIVO,\n"
    		+ "IVC_V_REPORTE_PROCESO.ACTIVIDAD_NOMBRE ACTIVIDAD_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_NOMBRE ETAPA_ACTUAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.ETAPA_DESCRIPCION ETAPA_ACTUAL_DESC, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_NOMBRE FLUJO_ACTUAL,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FLUJO_NOMBRE CADENA_FLUJO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_RADICACION ORGANIGRAMA_RADICADO, \n"
    		+ "IVC_V_REPORTE_PROCESO.GRUPO_REPARTO GRUPO_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.TERRITORIAL_REPARTO TERRITORIAL_REPARTO_INICIAL, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_NOMBRE USUARIO_REPARTO, \n"
    		+ "IVC_V_REPORTE_PROCESO.ORGANIGRAMA_NOMBRE_REPARTO ORGANIGRAMA_NOMBRE_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.USERNAME USUARIO_DIRECTORIO_ACTIVO, \n"
    		+ "IVC_V_REPORTE_PROCESO.USUARIO_ESTADO USUARIO_ESTADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_DESCRIPCION CIUU_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_CIIU_CODIGO CIIU_CODIGO_QUERELLADO,\n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_NOM SECTOR_CRITICO_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_QUERELLADO.QUERELLADO_SECTOR_CRITICO_DESC SECTOR_CRITICO_DESC_QUERELLADO, \n"
    		+ "IVC_V_REPORTE_RECURSO.PROCESO_RECURSO_TIPO TIPO_RECURSO,\n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_RADICACION FECHA_RADICACION, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS FECHA_HECHOS, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_HECHOS_FIN FECHA_HECHOS_FIN, \n"
    		+ "IVC_V_REPORTE_PROCESO.PROCESO_FECHA_PRESCRIPCION FECHA_PRESCIPCION,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_PREAIGNACION FECHA_PREASIGNACION_REPARTO,\n"
    		+ "IVC_V_REPORTE_PROCESO.FECHA_REPARTO_ACT FECHA_REPARTO,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_VALOR VALOR_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.MOTIVO_SANCION_TIPO TIPO_DECISION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.CRITERIO_GRAD_SANCION_CRITERIO CRITERIO_GRADUACION_SANCION,\n"
    		+ "IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_MOTIVO_SANCION_EJ EJECUTANTE,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_INFRA INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_INFRA TIPO_INFRACCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_TI_SANCION TIPO_SANCION,\n"
    		+ "IVC_V_REPORTE_CONDUCTA_SANCION.CONDUCTA_SANCION_MAT_DES MATERIA_CONDUCTA, \n"
    		+ "IVC_V_REPORTE_PROCESO.FLUJO_PK \n"
    		+ "FROM IVC_V_REPORTE_PROCESO  LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_MOTIVO_SANCION ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_MOTIVO_SANCION.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLADO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_QUERELLADO.PROCESO_PK\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_RECURSO ON IVC_V_REPORTE_PROCESO.PROCESO_PK = IVC_V_REPORTE_RECURSO.PROCESO_PK  \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_CONDUCTA_SANCION ON IVC_V_REPORTE_CONDUCTA_SANCION.PROCESO_PK = IVC_V_REPORTE_PROCESO.PROCESO_PK AND IVC_V_REPORTE_RECURSO.PROCESO_QUERELLADO_PK  = IVC_V_REPORTE_QUERELLADO.PROCESO_QUERELLADO_PK\n  "
    		+ " WHERE IVC_V_REPORTE_PROCESO.fecha_reparto_act BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND IVC_V_REPORTE_PROCESO.flujo_pk = :flujo_pk\n"
    		+ "AND IVC_V_REPORTE_PROCESO.organigrama_pk in (select organigrama_pk from ivc_organigrama where (organigrama_pk = :organigrama_pk or organigrama_fk = :organigrama_pk) AND organigrama_fk not in (1, 81050))\n",

            nativeQuery = true)
    List<Object[]> insumoDashBoardCortes(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to ,@Param("flujo_pk") Long flujo,@Param("organigrama_pk") Long idDt  );
    
    
    @Query(value="SELECT NVL(SUM(EJECUTORIADOS),0), NVL(SUM(NOEJECUTORIADOS),0), NVL(SUM(VALOREJECUTORIADO),0), NVL(SUM(VALORNOEJECUTORIADO),0) FROM("
    		+ "SELECT CASE WHEN p.ejecutoriada = 'SI' THEN 1 ELSE 0 END EJECUTORIADOS,\n"
    		+ "CASE WHEN p.ejecutoriada = 'NO' THEN 1 ELSE 0 END NOEJECUTORIADOS,\n"
    		+ "CASE \n"
    		+ "WHEN MS.MOTIVO_SANCION_FK = 1 AND p.ejecutoriada = 'SI' THEN \n"
    		+ "CASE \n"
    		+ "WHEN \n"
    		+ "(MS.PROCESO_MOTIVO_SANCION_V_UNID = 'PE' )\n"
    		+ "THEN MS.PROCESO_MOTIVO_SANCION_VALOR\n"
    		+ "ELSE \n"
    		+ "MS.PROCESO_MOTIVO_SANCION_VALOR*(SELECT SALARIO_MINIMO_VALOR FROM IVC_SALARIO_MINIMO WHERE SALARIO_MINIMO_ANIO = EXTRACT(YEAR FROM MS.PROCESO_MOTIVO_SANCION_INSERT))\n"
    		+ "END \n"
    		+ "ELSE 0 END VALOREJECUTORIADO,\n"
    		+ "CASE \n"
    		+ "WHEN MS.MOTIVO_SANCION_FK = 1 AND p.ejecutoriada = 'NO' THEN \n"
    		+ "CASE \n"
    		+ "WHEN \n"
    		+ "(MS.PROCESO_MOTIVO_SANCION_V_UNID = 'PE' )\n"
    		+ "THEN MS.PROCESO_MOTIVO_SANCION_VALOR\n"
    		+ "ELSE \n"
    		+ "MS.PROCESO_MOTIVO_SANCION_VALOR*(SELECT SALARIO_MINIMO_VALOR FROM IVC_SALARIO_MINIMO WHERE SALARIO_MINIMO_ANIO = EXTRACT(YEAR FROM MS.PROCESO_MOTIVO_SANCION_INSERT))\n"
    		+ "END \n"
    		+ "ELSE 0 END VALORNOEJECUTORIADO\n "
    		+ "FROM IVC_V_REPORTE_PROCESO P\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_MOTIVO_SANCION MS ON	P.PROCESO_PK = MS.PROCESO_PK \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLADO Q ON P.PROCESO_PK = Q.PROCESO_PK \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLANTE QR ON P.PROCESO_PK = QR.PROCESO_PK\n"
    		+ "WHERE P.PROCESO_ORIGEN_ACTUACION like :origen  \n"
    		+ "AND P.PROCESO_NAT_INVESTIGACION like :naturaleza\n" //OK
    		+ "AND P.PROCESO_ESTADO like :estado_proceso \n"
    		+ "AND P.PROCESO_PK IN (SELECT PROCESO_PK FROM IVC_V_REPORTE_CONDUCTA_SANCION S WHERE S.MATERIA_PK like :materia AND S.PROCESO_PK = P.PROCESO_PK AND S.CONDUCTA_SANCION_FK like :infraccion)\n"
    		+ "AND Q.QUERELLADO_SECTOR_CRITICO like :sector_critico \n"
    		+ "AND q.querellado_ciiu_principal like :ciiu \n"
    		+ "AND MS.MOTIVO_SANCION_TIPO like :motivo_sancion \n"
    		+ "AND nvl(MS.PROCESO_MOTIVO_SANCION_EJ,'%%') like :ejecutante \n"
    		+ "AND P.FECHA_REPARTO_ACT BETWEEN :fecha_desde and :fecha_hasta\n"
    		+ "AND p.organigrama_fk in (select organigrama_pk from ivc_organigrama where (organigrama_pk = :organigrama_pk or organigrama_fk = :organigrama_pk ) AND organigrama_fk not in (1, 81050))"
    		+ ") ", nativeQuery = true)
    List<Object[]> tipoDecisionConDT(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to, @Param("organigrama_pk") Long idDt, 
    		@Param("ejecutante") String ejecutante, @Param("infraccion") String infraccion,  @Param("motivo_sancion") String motivoSancion, @Param("ciiu")  String ciiu,
    		@Param("sector_critico") String sectorCritico, @Param("materia") String materia,  @Param("estado_proceso") String estadoProceso, @Param("naturaleza") String naturaleza,
    		@Param("origen") String origen );
    
    @Query(value="SELECT NVL(SUM(EJECUTORIADOS),0), NVL(SUM(NOEJECUTORIADOS),0), NVL(SUM(VALOREJECUTORIADO),0), NVL(SUM(VALORNOEJECUTORIADO),0) FROM( "
    		+ "SELECT CASE WHEN p.ejecutoriada = 'SI' THEN 1 ELSE 0 END EJECUTORIADOS,\n"
+"CASE WHEN p.ejecutoriada = 'NO' THEN 1 ELSE 0 END NOEJECUTORIADOS,\n"
    		+ "CASE \n"
    		+ "WHEN MS.MOTIVO_SANCION_FK = 1 AND p.ejecutoriada = 'SI' THEN \n"
    		+ "CASE \n"
    		+ "WHEN \n"
    		+ "(MS.PROCESO_MOTIVO_SANCION_V_UNID = 'PE' )\n"
    		+ "THEN MS.PROCESO_MOTIVO_SANCION_VALOR\n"
    		+ "ELSE \n"
    		+ "MS.PROCESO_MOTIVO_SANCION_VALOR*(SELECT SALARIO_MINIMO_VALOR FROM IVC_SALARIO_MINIMO WHERE SALARIO_MINIMO_ANIO = EXTRACT(YEAR FROM MS.PROCESO_MOTIVO_SANCION_INSERT))\n"
    		+ "END \n"
    		+ "ELSE 0 END VALOREJECUTORIADO,\n"
    		+ "CASE \n"
    		+ "WHEN MS.MOTIVO_SANCION_FK = 1 AND p.ejecutoriada = 'NO' THEN \n"
    		+ "CASE \n"
    		+ "WHEN \n"
    		+ "(MS.PROCESO_MOTIVO_SANCION_V_UNID = 'PE' )\n"
    		+ "THEN MS.PROCESO_MOTIVO_SANCION_VALOR\n"
    		+ "ELSE \n"
    		+ "MS.PROCESO_MOTIVO_SANCION_VALOR*(SELECT SALARIO_MINIMO_VALOR FROM IVC_SALARIO_MINIMO WHERE SALARIO_MINIMO_ANIO = EXTRACT(YEAR FROM MS.PROCESO_MOTIVO_SANCION_INSERT))\n"
    		+ "END \n"
    		+ "ELSE 0 END VALORNOEJECUTORIADO\n"
    		+ "FROM IVC_V_REPORTE_PROCESO P\n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_MOTIVO_SANCION MS ON	P.PROCESO_PK = MS.PROCESO_PK \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLADO Q ON P.PROCESO_PK = Q.PROCESO_PK \n"
    		+ "LEFT OUTER JOIN IVC_V_REPORTE_QUERELLANTE QR ON P.PROCESO_PK = QR.PROCESO_PK\n"
    		+ "WHERE P.PROCESO_ORIGEN_ACTUACION like :origen  \n"
    		+ "AND P.PROCESO_NAT_INVESTIGACION like :naturaleza\n" //OK
    		+ "AND P.PROCESO_ESTADO like :estado_proceso \n"
    		+ "AND P.PROCESO_PK IN (SELECT PROCESO_PK FROM IVC_V_REPORTE_CONDUCTA_SANCION S WHERE S.MATERIA_PK like :materia AND S.PROCESO_PK = P.PROCESO_PK AND S.CONDUCTA_SANCION_FK like :infraccion)\n"
    		+ "AND Q.QUERELLADO_SECTOR_CRITICO like :sector_critico \n"
    		+ "AND q.querellado_ciiu_principal like :ciiu \n"
    		+ "AND MS.MOTIVO_SANCION_TIPO like :motivo_sancion \n"
    		+ "AND nvl(MS.PROCESO_MOTIVO_SANCION_EJ,'%%') like :ejecutante \n"
    		+ "AND P.FECHA_REPARTO_ACT BETWEEN :fecha_desde and :fecha_hasta  \n"
    		+ "AND p.organigrama_pk in (select organigrama_pk from ivc_organigrama where organigrama_fk not in (1, 81050))\n"
    		+ ")", nativeQuery = true)
    List<Object[]> tipoDecisionSinDT(@Param("fecha_desde") Date from, @Param("fecha_hasta") Date to, 
    		@Param("ejecutante") String ejecutante, @Param("infraccion") String infraccion,  @Param("motivo_sancion") String motivoSancion, @Param("ciiu")  String ciiu,
    		@Param("sector_critico") String sectorCritico, @Param("materia") String materia,  @Param("estado_proceso") String estadoProceso, @Param("naturaleza") String naturaleza,
    		@Param("origen") String origen );
    
}
